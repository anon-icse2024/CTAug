[{"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPoint"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "mp"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "points"}, "initializer": {"type": {"name": {"identifier": "TreeSet"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "pt"}, "initializer": {"type": {"name": {"identifier": "Point"}}, "expression": {"scope": {"name": {"identifier": "mp"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nonSimpleLocation"}}, "value": {"name": {"identifier": "p"}}}}, {"expression": {"value": "false"}}]}, "condition": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "p"}}]}}, {"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "mp"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mp"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mp"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPoint"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mp"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "points"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nonSimpleLocation"}, {"IdentifierName": "p"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "points"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runTeeOp"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}, {"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "invoke"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunTeeOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "Invoke"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "p0x"}}, {"name": {"identifier": "p0y"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pp0"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "pp0x"}}, {"name": {"identifier": "pp0y"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformationFactory"}}, "name": {"identifier": "createFromControlVectors"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "pp0"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "dest"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}}}]}}, {"expression": {"name": {"identifier": "assertEqualPoint"}, "arguments": [{"name": {"identifier": "pp0"}}, {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "dest"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0x"}]}, {"Argument": [{"IdentifierName": "p0y"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pp0x"}]}, {"Argument": [{"IdentifierName": "pp0y"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformationFactory"}, {"IdentifierName": "CreateFromControlVectors"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "pp0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AssertEqualPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pp0"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "dest"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "start"}, "initializer": {"value": "0"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "startIndexList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "startIndexList"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "start"}}]}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "last"}, "initializer": {"name": {"identifier": "findChainEnd"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "start"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "startIndexList"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "last"}}]}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "start"}}, "value": {"name": {"identifier": "last"}}}}]}, "condition": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "start"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "startIndex"}, "initializer": {"name": {"identifier": "toIntArray"}, "arguments": [{"name": {"identifier": "startIndexList"}}]}}]}}, {"expression": {"name": {"identifier": "startIndex"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}]}]}]}, {"DoStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindChainEnd"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "start"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "last"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "start"}, {"IdentifierName": "last"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "start"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "startIndex"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LengthIndexOfPoint"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthIndexOfPoint"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "eiList"}}, "name": {"identifier": "addSplitEdges"}, "arguments": [{"name": {"identifier": "edgelist"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "Edges"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "EdgeIntersectionList"}]}, {"IdentifierName": "AddSplitEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edgelist"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "IllegalArgumentException"}}, "arguments": [{"value": "Supplied point is null."}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "p"}}}}, {"expression": {"name": {"identifier": "interpolateZ"}, "arguments": [{"name": {"identifier": "p"}}, {"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v0"}, {"IdentifierName": "X"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v0"}, {"IdentifierName": "Y"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v1"}, {"IdentifierName": "X"}]}, {"IdentifierName": "x0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "X"}]}, {"IdentifierName": "x0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v1"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "y0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "y0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "a"}, {"IdentifierName": "d"}]}, {"MultiplyExpression": [{"IdentifierName": "b"}, {"IdentifierName": "c"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "x0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "y0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "d"}, {"IdentifierName": "dx"}]}, {"MultiplyExpression": [{"IdentifierName": "b"}, {"IdentifierName": "dy"}]}]}]}, {"IdentifierName": "det"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"MultiplyExpression": [{"UnaryMinusExpression": [{"IdentifierName": "c"}]}, {"IdentifierName": "dx"}]}, {"MultiplyExpression": [{"IdentifierName": "a"}, {"IdentifierName": "dy"}]}]}]}, {"IdentifierName": "det"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v0"}, {"IdentifierName": "Z"}]}, {"MultiplyExpression": [{"IdentifierName": "t"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v1"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v0"}, {"IdentifierName": "Z"}]}]}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "u"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v0"}, {"IdentifierName": "Z"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "z"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ord1"}, "initializer": {"scope": {"name": {"identifier": "s1"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "d"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ord2"}, "initializer": {"scope": {"name": {"identifier": "s2"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "d"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comp"}, "initializer": {"name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "ord1"}}, {"name": {"identifier": "ord2"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "comp"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "comp"}}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "d"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "d"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "d"}}}]}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "d"}, {"IdentifierName": "dimension"}]}, {"PostIncrementExpression": [{"IdentifierName": "d"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s1"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "d"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s2"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "d"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Compare"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ord1"}]}, {"Argument": [{"IdentifierName": "ord2"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "comp"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "comp"}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Comparable"}}, "name": {"identifier": "curr"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Comparable"}}, "name": {"identifier": "next"}, "initializer": {"type": {"name": {"identifier": "Comparable"}}, "expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "poll"}}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "curr"}}, "value": {"name": {"identifier": "next"}}}}, "elseStmt": {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "next"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "curr"}}]}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "curr"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "isEmpty"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "T"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DefaultExpression": [{"IdentifierName": "T"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"WhileStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "IsEmpty"}]}, {"ArgumentList": "()"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "T"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Poll"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "first"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"GreaterThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "next"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "curr"}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "first"}, {"FalseLiteralExpression": "false"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "curr"}, {"IdentifierName": "next"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "union"}}, "value": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "copy"}}}}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "union"}}, "value": {"scope": {"name": {"identifier": "union"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "g"}}]}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "union"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "union"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "geoms"}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "union"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "union"}, {"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "union"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "union"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "union"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygonizer"}}, "name": {"identifier": "polygonizer"}, "initializer": {"type": {"name": {"identifier": "Polygonizer"}}, "arguments": [{"name": {"identifier": "extractOnlyPolygonal"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "readList"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "expected"}, "initializer": {"name": {"identifier": "readList"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "actual"}, "initializer": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getPolygons"}}}]}}, {"expression": {"name": {"identifier": "checkEqual"}, "arguments": [{"name": {"identifier": "expected"}}, {"name": {"identifier": "actual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "extractOnlyPolygonal"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ReadList"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReadList"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetPolygons"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"IdentifierName": "actual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "aClone"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "clone"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "bClone"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "clone"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "aClone"}}, "name": {"identifier": "normalize"}}}, {"expression": {"scope": {"name": {"identifier": "bClone"}}, "name": {"identifier": "normalize"}}}, {"expression": {"scope": {"name": {"identifier": "aClone"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "bClone"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "aClone"}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bClone"}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "aClone"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bClone"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearRing"}}}, "name": {"identifier": "linearRingArray"}, "initializer": {"elementType": {"name": {"identifier": "LinearRing"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "linearRings"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearRing"}}}, "expression": {"scope": {"name": {"identifier": "linearRings"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "linearRingArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearRings"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"IdentifierName": "linearRings"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "lr"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MultiPolygon"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPolygon"}, "arguments": [{}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "2"}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isSimple"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsSimple"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "FastNodingValidator"}}, "name": {"identifier": "nv"}, "initializer": {"type": {"name": {"identifier": "FastNodingValidator"}}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "isValid"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "FastNodingValidator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "FastNodingValidator"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "IsValid"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RelateOp"}}, "name": {"identifier": "relOp"}, "initializer": {"type": {"name": {"identifier": "RelateOp"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "boundaryNodeRule"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IntersectionMatrix"}}, "name": {"identifier": "im"}, "initializer": {"scope": {"name": {"identifier": "relOp"}}, "name": {"identifier": "getIntersectionMatrix"}}}]}}, {"expression": {"name": {"identifier": "im"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "RelateOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RelateOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "boundaryNodeRule"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IntersectionMatrix"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "relOp"}, {"IdentifierName": "IntersectionMatrix"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "im"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "setToReflection"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}, {"expression": {"name": {"identifier": "trans"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "SetToReflection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "trans"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "q"}, "initializer": {"scope": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "connect"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "quadEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "q"}}]}}, {"expression": {"name": {"identifier": "q"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "QuadEdge"}, {"IdentifierName": "Connect"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_quadEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "q"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "q"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelope"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Envelope"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "arguments": [{"value": "3"}, {"value": "4"}]}, {"type": {"name": {"identifier": "Interval"}}, "arguments": [{"value": "3"}, {"value": "4"}]}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "arguments": [{"value": "3"}, {"value": "4"}]}, {"type": {"name": {"identifier": "Interval"}}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "arguments": [{"value": "3"}, {"value": "4"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IntervalsAreEqual"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IntervalsAreEqual"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "within"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Within"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{}]}}, {"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{"name": {"identifier": "g"}}]}}, {"expression": {"scope": {"name": {"identifier": "RelateOp"}}, "name": {"identifier": "relate"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RelateOp"}, {"IdentifierName": "Relate"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "holeList"}}, "value": {"type": {"name": {"identifier": "ArrayList"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "shellList"}}, "value": {"type": {"name": {"identifier": "ArrayList"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "computeHole"}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "holeList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isHole"}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edgeRingList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_holeList"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_shellList"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "edgeRingList"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "ComputeHole"}]}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsHole"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_holeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_shellList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "TOO_FEW_POINTS"}}, {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getInvalidPoint"}}]}}}, {}]}, "condition": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "hasTooFewPoints"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "HasTooFewPoints"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "TooFewPoints"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "InvalidPoint"}]}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "dirEdge"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dirEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdge"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LengthLocationMap"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "index"}}, {"name": {"identifier": "resolveLower"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthLocationMap"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"IdentifierName": "resolveLower"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "LESS", "right": {"name": {"identifier": "queryMin"}}, "left": {"name": {"identifier": "max"}}}, "left": {"operator": "GREATER", "right": {"name": {"identifier": "queryMax"}}, "left": {"name": {"identifier": "min"}}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"GreaterThanExpression": [{"IdentifierName": "Min"}, {"IdentifierName": "queryMax"}]}, {"LessThanExpression": [{"IdentifierName": "Max"}, {"IdentifierName": "queryMin"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "COORDS_1"}}, {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "2"}]}]}, {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "2"}]}]}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coords1"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "rot"}}, "value": {}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Rot"}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "mapped"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "mapOp"}}, "name": {"identifier": "map"}, "arguments": [{"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "mapped"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isEmpty"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "mapped"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "_mapOp"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsEmpty"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mapped"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mapped"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "subgraphs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "GraphComponent"}}, "name": {"identifier": "setVisited"}, "arguments": [{"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "nodeIterator"}}, {"value": "false"}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getDirEdge"}, "arguments": [{"value": "0"}]}, "name": {"identifier": "getFromNode"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "subgraphs"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "findSubgraph"}, "arguments": [{"name": {"identifier": "node"}}]}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "isVisited"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "edgeIterator"}}}]}]}, {"expression": {"name": {"identifier": "subgraphs"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Subgraph"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Subgraph"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GraphComponent"}, {"IdentifierName": "SetVisited"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "GetNodeEnumerator"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "GetEdgeEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ienum"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ienum"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "GetDirEdge"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "FromNode"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "IsVisited"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraphs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "FindSubgraph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "subgraphs"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeString"}}, "name": {"identifier": "edgeString"}, "initializer": {"type": {"name": {"identifier": "EdgeString"}}, "arguments": [{"name": {"identifier": "factory"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineMergeDirectedEdge"}}, "name": {"identifier": "current"}, "initializer": {"name": {"identifier": "start"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "edgeString"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "current"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "current"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "setMarked"}, "arguments": [{"value": "true"}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "current"}}, "value": {"scope": {"name": {"identifier": "current"}}, "name": {"identifier": "getNext"}}}}]}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "start"}}, "left": {"name": {"identifier": "current"}}}, "left": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "current"}}}}}, {"expression": {"name": {"identifier": "edgeString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_factory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineMergeDirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "start"}]}]}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeString"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "current"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "current"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "Marked"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "current"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "current"}, {"IdentifierName": "Next"}]}]}]}]}, {"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "current"}, {"NullLiteralExpression": "null"}]}, {"NotEqualsExpression": [{"IdentifierName": "current"}, {"IdentifierName": "start"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "edgeString"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts1"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"name": {"identifier": "o1"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts2"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"name": {"identifier": "o2"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts2"}}, "name": {"identifier": "length"}}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "pts2"}}, "name": {"identifier": "length"}}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "forwardComp"}, "initializer": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "pts1"}}, {"name": {"identifier": "pts2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqualRev"}, "initializer": {"name": {"identifier": "isEqualReversed"}, "arguments": [{"name": {"identifier": "pts1"}}, {"name": {"identifier": "pts2"}}]}}]}}, {"thenStmt": {"expression": {"value": "0"}}, "condition": {"name": {"identifier": "isEqualRev"}}}, {"expression": {"name": {"identifier": "forwardComp"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts2"}, {"IdentifierName": "Length"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts2"}, {"IdentifierName": "Length"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts1"}]}, {"Argument": [{"IdentifierName": "pts2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IsEqualReversed"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts1"}]}, {"Argument": [{"IdentifierName": "pts2"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isEqualRev"}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": [{"IdentifierName": "forwardComp"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "addCommonBits"}, "arguments": [{"name": {"identifier": "result"}}]}}, "condition": {"name": {"identifier": "returnToOriginalPrecision"}}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_returnToOriginalPrecision"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cbr"}, {"IdentifierName": "AddCommonBits"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"scope": {"name": {"identifier": "n1"}}, "name": {"identifier": "min"}}, {"scope": {"name": {"identifier": "n2"}}, "name": {"identifier": "min"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"scope": {"name": {"identifier": "n1"}}, "name": {"identifier": "max"}}, {"scope": {"name": {"identifier": "n2"}}, "name": {"identifier": "max"}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Min"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n1"}, {"IdentifierName": "Min"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n2"}, {"IdentifierName": "Min"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Max"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n1"}, {"IdentifierName": "Max"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n2"}, {"IdentifierName": "Max"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "array"}, "initializer": {"elementType": {"type": "INT"}, "levels": [{"dimension": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "array"}}}, "value": {"scope": {"inner": {"type": {"name": {"identifier": "Integer"}}, "expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}, "name": {"identifier": "intValue"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "array"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "array"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "list"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "array"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "array"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Convert"}, {"IdentifierName": "ToInt32"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "array"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "actualBdy"}, "initializer": {"scope": {"name": {"identifier": "actualBuffer"}}, "name": {"identifier": "getBoundary"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expectedBdy"}, "initializer": {"scope": {"name": {"identifier": "expectedBuffer"}}, "name": {"identifier": "getBoundary"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "haus"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "actualBdy"}}, {"name": {"identifier": "expectedBdy"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "haus"}}, "name": {"identifier": "setDensifyFraction"}, "arguments": [{"value": "0.25"}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "maxDistanceFound"}, "initializer": {"scope": {"name": {"identifier": "haus"}}, "name": {"identifier": "orientedDistance"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "expectedDistanceTol"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "MAX_HAUSDORFF_DISTANCE_FACTOR"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "distance"}}]}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "expectedDistanceTol"}}, "value": {"name": {"identifier": "MIN_DISTANCE_TOLERANCE"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "MIN_DISTANCE_TOLERANCE"}}, "left": {"name": {"identifier": "expectedDistanceTol"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "expectedDistanceTol"}}, "left": {"name": {"identifier": "maxDistanceFound"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "actualBuffer"}, {"IdentifierName": "Boundary"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "expectedBuffer"}, {"IdentifierName": "Boundary"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "actualBdy"}]}, {"Argument": [{"IdentifierName": "expectedBdy"}]}]}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "DensifyFraction"}, {"NumericLiteralExpression": "0.25"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "haus"}, {"IdentifierName": "OrientedDistance"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}, {"IdentifierName": "MaxHausdorffDistanceFactor"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "expectedDistanceTol"}, {"IdentifierName": "MinDistanceTolerance"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "expectedDistanceTol"}, {"IdentifierName": "MinDistanceTolerance"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "maxDistanceFound"}, {"IdentifierName": "expectedDistanceTol"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "intPt"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "result"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Result"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "elseStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "_x"}}, "name": {"identifier": "getCoordinate"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x"}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"IdentifierName": "tolerance"}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SineStarFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "SineStarFactory"}}, "arguments": [{"name": {"identifier": "factory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setArmLengthRatio"}, "arguments": [{"value": "0.1"}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumArms"}, "arguments": [{"value": "20"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createSineStar"}}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"QualifiedName": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "NetTopologySuite"}, {"IdentifierName": "Geometries"}]}, {"IdentifierName": "Utilities"}]}, {"IdentifierName": "SineStarFactory"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_factory"}]}]}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "Centre"}, {"IdentifierName": "origin"}]}, {"SimpleAssignmentExpression": [{"IdentifierName": "Size"}, {"IdentifierName": "size"}]}, {"SimpleAssignmentExpression": [{"IdentifierName": "NumPoints"}, {"IdentifierName": "numberOfPoints"}]}, {"SimpleAssignmentExpression": [{"IdentifierName": "ArmLengthRatio"}, {"NumericLiteralExpression": "0.1"}]}, {"SimpleAssignmentExpression": [{"IdentifierName": "NumArms"}, {"NumericLiteralExpression": "20"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateSineStar"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "location"}}, "value": {"elementType": {"type": "INT"}, "levels": [{"dimension": {"name": {"identifier": "size"}}}]}}}, {"expression": {"name": {"identifier": "setAllLocations"}, "arguments": [{"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_location"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Location"}, {"ArrayRankSpecifier": [{"IdentifierName": "size"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetAllLocations"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "DistanceOp"}}, "name": {"identifier": "nearestPoints"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DistanceOp"}, {"IdentifierName": "NearestPoints"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "initialize"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, {}]}, "condition": {"name": {"identifier": "isNull"}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "initialize"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "dist"}}]}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "distance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_isNull"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Initialize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_distance"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Initialize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "quadSize"}, "initializer": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "powerOf2"}, "arguments": [{"name": {"identifier": "level"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}, "value": {"operator": "MULTIPLY", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "getMinX"}}}]}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}, "value": {"operator": "MULTIPLY", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "getMinY"}}}]}}}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "init"}, "arguments": [{"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}, {"operator": "PLUS", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}, {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}, {"operator": "PLUS", "right": {"name": {"identifier": "quadSize"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "PowerOf2"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "X"}]}, {"MultiplyExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "MinX"}]}, {"IdentifierName": "quadSize"}]}]}]}]}, {"IdentifierName": "quadSize"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "Y"}]}, {"MultiplyExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "MinY"}]}, {"IdentifierName": "quadSize"}]}]}]}]}, {"IdentifierName": "quadSize"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_env"}, {"IdentifierName": "Init"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "X"}]}, {"IdentifierName": "quadSize"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "quadSize"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "fact"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "line"}}]}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}, {"expression": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ISegmentString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCentroid"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Centroid"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "orientation"}, "initializer": {"name": {"identifier": "orient2d"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q"}}]}}]}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "orientation"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "orientation"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "orient2d"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "orientation"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "orientation"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "name": {"identifier": "finder"}, "initializer": {"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "setFindAllIntersections"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "setKeepIntersections"}, "arguments": [{"value": "false"}]}}, {"expression": {"name": {"identifier": "finder"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "InteriorIntersectionFinder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "finder"}, {"IdentifierName": "FindAllIntersections"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "finder"}, {"IdentifierName": "KeepIntersections"}]}, {"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"IdentifierName": "finder"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nOverlaps"}}, "value": {"value": "0"}}}, {"expression": {"name": {"identifier": "prepareEvents"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "processOverlaps"}, "arguments": [{"name": {"identifier": "i"}}, {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getDeleteEventIndex"}}, {"name": {"identifier": "ev"}}, {"name": {"identifier": "si"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isInsert"}}}, {"thenStmt": {"statements": [{}]}, "condition": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "isDone"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nOverlaps"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "PrepareEvents"}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsInsert"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ProcessOverlaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "DeleteEventIndex"}]}]}, {"Argument": [{"IdentifierName": "ev"}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "IsDone"}]}, {"BreakStatement": "break;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineDissolver"}}, "name": {"identifier": "d"}, "initializer": {"type": {"name": {"identifier": "LineDissolver"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "d"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geoms"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "d"}}, "name": {"identifier": "getResult"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "equal"}, "initializer": {"scope": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "norm"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"scope": {"name": {"identifier": "expected"}}, "name": {"identifier": "norm"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "equal"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "equal"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDissolve"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "index"}}, "value": {"type": {"name": {"identifier": "STRtree"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "env"}}, {"name": {"identifier": "ring"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_index"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_rings"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"ElementAccessExpression": [{"IdentifierName": "_rings"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "supercircle"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "nPts"}}, {"value": "3"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Supercircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "nPts"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "buildSTRtree"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "bounds"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"name": {"identifier": "addBounds"}, "arguments": [{"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "getRoot"}}, {"name": {"identifier": "bounds"}}, {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "getFactory"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "bounds"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildSTRtree"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "addBounds"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Root"}]}]}, {"Argument": [{"IdentifierName": "bounds"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Factory"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bounds"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "supercircle"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "nPts"}}, {"value": "5"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Supercircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "nPts"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"value": "3"}, {"value": "3"}]}, "name": {"identifier": "rotate"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "3"}}, {"value": "13"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"value": "7"}, {"operator": "MINUS", "expression": {"value": "7"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}, {"IdentifierName": "Rotate"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"Argument": [{"NumericLiteralExpression": "13"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "7"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isAcute"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsAcute"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "0.0"}}}]}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segmentFraction"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "1.0"}}}]}, "condition": {"operator": "GREATER", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segmentFraction"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "componentIndex"}}, "value": {"value": "0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentIndex"}}, "value": {"value": "0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "0.0"}}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentIndex"}}, "value": {"value": "0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "0.0"}}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "segmentIndex"}}, "value": {"value": "1"}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segmentFraction"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_componentIndex"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_componentIndex"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "subnodeIndex"}, "initializer": {"name": {"identifier": "getSubnodeIndex"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "centrex"}}, {"name": {"identifier": "centrey"}}]}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {"operator": "MINUS", "expression": {"value": "1"}}, "left": {"name": {"identifier": "subnodeIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"index": {"name": {"identifier": "subnodeIndex"}}, "name": {"name": {"identifier": "subnode"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "searchEnv"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "subnodeIndex"}}, "name": {"name": {"identifier": "subnode"}}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSubnodeIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "_centreX"}]}, {"Argument": [{"IdentifierName": "_centreY"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "subnodeIndex"}, {"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "subnodeIndex"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "subnodeIndex"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "PlanarPolygon3D"}}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "poly"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PlanarPolygon3D"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "poly"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "bounds"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "bounds"}}, "value": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "bounds"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "bounds"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "bounds"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "ChildBoundables"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bounds"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundable"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bounds"}, {"IdentifierName": "IsNull"}]}, {"NullLiteralExpression": "null"}, {"IdentifierName": "bounds"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEndBundle"}}, "name": {"identifier": "eb"}, "initializer": {"type": {"name": {"identifier": "EdgeEndBundle"}}, "expression": {"scope": {"name": {"identifier": "edgeMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "e"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eb"}}, "value": {"type": {"name": {"identifier": "EdgeEndBundle"}}, "arguments": [{"name": {"identifier": "e"}}]}}}, {"expression": {"name": {"identifier": "insertEdgeEnd"}, "arguments": [{"name": {"identifier": "e"}}, {"name": {"identifier": "eb"}}]}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "eb"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "eb"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeEnd"}, {"VariableDeclarator": "ee"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"IdentifierName": "ee"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertEdgeEnd"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeEndBundle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "EdgeEndBundle"}, {"IdentifierName": "ee"}]}]}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "sym"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}}]}}, {"expression": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "setDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "setDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "SetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "GetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "SetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "GetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "wktExpected"}}, "value": {"name": {"identifier": "wktExpected"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_wktExpected"}, {"IdentifierName": "wktExpected"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}], "selector": {"name": {"identifier": "ordinateIndex"}}}, {"expression": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "NaN"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Z"}]}]}]}, {"SwitchSection": [{"DefaultSwitchLabel": "default:"}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "NaN"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Edge"}}, "name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "label"}}, {"name": {"identifier": "im"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Edge"}, {"IdentifierName": "UpdateIM"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Label"}]}, {"Argument": [{"IdentifierName": "im"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "createParentBoundables"}, "arguments": [{"name": {"identifier": "verticalSlice"}}, {"name": {"identifier": "newLevel"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "CreateParentBoundables"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "verticalSlice"}]}, {"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistancePolygonRings"}, "arguments": [{"name": {"identifier": "poly0"}}, {"name": {"identifier": "poly1"}}, {"name": {"identifier": "flip"}}]}}, {"thenStmt": {}, "condition": {"name": {"identifier": "isDone"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PlanarPolygon3D"}}, "name": {"identifier": "polyPlane1"}, "initializer": {"type": {"name": {"identifier": "PlanarPolygon3D"}}, "arguments": [{"name": {"identifier": "poly1"}}]}}]}}, {"expression": {"name": {"identifier": "computeMinDistancePolygonRings"}, "arguments": [{"name": {"identifier": "polyPlane1"}}, {"scope": {"name": {"identifier": "poly0"}}, "name": {"identifier": "getPolygon"}}, {"name": {"identifier": "flip"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistancePolygonRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly0"}]}, {"Argument": [{"IdentifierName": "poly1"}]}, {"Argument": [{"IdentifierName": "flip"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isDone"}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PlanarPolygon3D"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistancePolygonRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyPlane1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly0"}, {"IdentifierName": "Polygon"}]}]}, {"Argument": [{"IdentifierName": "flip"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pt"}, "initializer": {}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pt"}}, "value": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"value": "0"}]}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getNumPoints"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "RING_NOT_CLOSED"}}, {"name": {"identifier": "pt"}}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "isClosed"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "IsClosed"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "RingNotClosed"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "geometryLinesMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "geometry"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValidPts"}, "initializer": {"name": {"identifier": "isValidSize"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "geometry"}}]}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValidPts"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "condition": {"scope": {"name": {"identifier": "geometryLinesMap"}}, "name": {"identifier": "containsKey"}, "arguments": [{"name": {"identifier": "geometry"}}]}}, {"expression": {"name": {"identifier": "coordSeq"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryLinesMap"}, {"IdentifierName": "ContainsKey"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_geometryLinesMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IsValidSize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isValidPts"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "targetFactory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coordSeq"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "getCSFactory"}}, "name": {"identifier": "create"}, "arguments": [{"value": "0"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq2"}, "initializer": {"scope": {"name": {"identifier": "getCSFactory"}}, "name": {"identifier": "create"}, "arguments": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "seq2"}}, "name": {"identifier": "size"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CsFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CsFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq2"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "iterator"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "i"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "eSearch"}}, "left": {"name": {"identifier": "e"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "GetEnumerator"}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "edgeList"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeEnd"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "edgeList"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "e"}, {"IdentifierName": "eSearch"}]}, {"ReturnStatement": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compareDoubles"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"name": {"identifier": "o1"}}}}, "name": {"identifier": "getBounds"}}}}, "name": {"identifier": "getCentre"}}, {"scope": {"inner": {"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"name": {"identifier": "o2"}}}}, "name": {"identifier": "getBounds"}}}}, "name": {"identifier": "getCentre"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "o1"}, {"IdentifierName": "Bounds"}]}, {"IdentifierName": "Centre"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "o2"}, {"IdentifierName": "Bounds"}]}, {"IdentifierName": "Centre"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "length"}, "initializer": {"name": {"identifier": "length"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "divide"}, "arguments": [{"name": {"identifier": "length"}}]}}, "condition": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "length"}}}}, {"expression": {"name": {"identifier": "create"}, "arguments": [{"value": "0.0"}, {"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Length"}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "length"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Divide"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "length"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "bufParams"}, "initializer": {"type": {"name": {"identifier": "BufferParameters"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "setSingleSided"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"name": {"identifier": "BufferOp"}}, "name": {"identifier": "bufferOp"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "bufParams"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IBufferParameters"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferParameters"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsSingleSided"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferOp"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "bufParams"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "getNodedSubstrings"}, "arguments": [{"name": {"identifier": "nodedSegStrings"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_nodedSegStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "snapPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HotPixel"}}, "name": {"identifier": "hotPixel"}, "initializer": {"type": {"name": {"identifier": "HotPixel"}}, "arguments": [{"name": {"identifier": "snapPt"}}, {"name": {"identifier": "scaleFactor"}}, {"name": {"identifier": "li"}}]}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "hotPixel"}}, "name": {"identifier": "addSnappedNode"}, "arguments": [{"name": {"identifier": "ss"}}, {"name": {"identifier": "i"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "size"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "snapPts"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "snapPts"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HotPixel"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HotPixel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "snapPt"}]}, {"Argument": [{"IdentifierName": "_scaleFactor"}]}, {"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hotPixel"}, {"IdentifierName": "AddSnappedNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "20"}, {"value": "20"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NonRobustCGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "comp"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "comp"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "comp"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tokens"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}, {"Argument": [{"IdentifierName": "hasZ"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hasZ"}]}, {"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "getReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "GetReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getExtremalPoints"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumBoundingCircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "GetExtremalPoints"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferResultValidator"}}, "name": {"identifier": "bufValidator"}, "initializer": {"type": {"name": {"identifier": "BufferResultValidator"}}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "buffer"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "errorMsg"}, "initializer": {"scope": {"name": {"identifier": "bufValidator"}}, "name": {"identifier": "getErrorMessage"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "errorLoc"}, "initializer": {"scope": {"name": {"identifier": "bufValidator"}}, "name": {"identifier": "getErrorLocation"}}}]}}, {"expression": {"name": {"identifier": "reportError"}, "arguments": [{"name": {"identifier": "errorMsg"}}, {"name": {"identifier": "errorLoc"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "bufValidator"}}, "name": {"identifier": "isValid"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferResultValidator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "buffer"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufValidator"}, {"IdentifierName": "IsValid"}]}, {"ArgumentList": "()"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufValidator"}, {"IdentifierName": "ErrorMessage"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufValidator"}, {"IdentifierName": "ErrorLocation"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ReportError"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "errorMsg"}]}, {"Argument": [{"IdentifierName": "errorLoc"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "pt"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coord"}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "c"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "ee"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "ee"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "e"}}, "left": {"scope": {"name": {"identifier": "ee"}}, "name": {"identifier": "getEdge"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeEnd"}, {"IdentifierName": "edgeEndList"}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ee"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "e"}]}, {"ReturnStatement": [{"IdentifierName": "ee"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonInvalidHoleRemover"}}, "name": {"identifier": "pihr"}, "initializer": {"type": {"name": {"identifier": "PolygonInvalidHoleRemover"}}, "arguments": [{"name": {"identifier": "poly"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "pihr"}}, "name": {"identifier": "getResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonInvalidHoleRemover"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PolygonInvalidHoleRemover"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pihr"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "start"}, "initializer": {"value": "0"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "startIndexList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "startIndexList"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "start"}}]}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "last"}, "initializer": {"name": {"identifier": "findChainEnd"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "start"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "startIndexList"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "last"}}]}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "start"}}, "value": {"name": {"identifier": "last"}}}}]}, "condition": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "start"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "startIndex"}, "initializer": {"name": {"identifier": "toIntArray"}, "arguments": [{"name": {"identifier": "startIndexList"}}]}}]}}, {"expression": {"name": {"identifier": "startIndex"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}]}]}]}, {"DoStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindChainEnd"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "start"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "last"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "start"}, {"IdentifierName": "last"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "start"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndexList"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "location"}}}, "value": {"name": {"identifier": "locValue"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "location"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "locValue"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "PolygonCleaner"}}, "name": {"identifier": "clean"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PolygonCleaner"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "loc"}}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "location"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "loc"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "locateOnLineString"}, "arguments": [{"name": {"identifier": "p"}}, {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "locateInPolygon"}, "arguments": [{"name": {"identifier": "p"}}, {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}]}}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isIn"}}, "value": {"value": "false"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "numBoundaries"}}, "value": {"value": "0"}}}, {"expression": {"name": {"identifier": "computeLocation"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "geom"}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}}, "condition": {"scope": {"name": {"identifier": "boundaryRule"}}, "name": {"identifier": "isInBoundary"}, "arguments": [{"name": {"identifier": "numBoundaries"}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}}, "condition": {"operator": "OR", "right": {"name": {"identifier": "isIn"}}, "left": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "numBoundaries"}}}}}, {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "Shell"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "LocateInPolygonRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "shell"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "shellLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "shellLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "InteriorRings"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "LocateInPolygonRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "hole"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "holeLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "holeLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistance"}}}, {"expression": {"name": {"identifier": "minDistanceLocation"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_minDistanceLocation"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "exemplar"}}, "name": {"identifier": "getPrecisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "coord"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "exemplar"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exemplar"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exemplar"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setVisitedEdge"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isCovered"}}}, "left": {"operator": "AND", "right": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "isResultOfOp"}, "arguments": [{"name": {"identifier": "label"}}, {"name": {"identifier": "opCode"}}]}, "left": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isVisited"}}}}}}]}, "condition": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isLineEdge"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsLineEdge"}]}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsVisited"}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "IsResultOfOp"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "label"}]}, {"Argument": [{"IdentifierName": "opCode"}]}]}]}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsCovered"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "VisitedEdge"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "intPt"}, "initializer": {"name": {"identifier": "intersectionWithNormalization"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q1"}}, {"name": {"identifier": "q2"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "intPt"}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "nearestEndpoint"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q1"}}, {"name": {"identifier": "q2"}}]}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isInSegmentEnvelopes"}, "arguments": [{"name": {"identifier": "intPt"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "precisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "intPt"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "precisionModel"}}}}, {"expression": {"name": {"identifier": "intPt"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IntersectionWithNormalization"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q1"}]}, {"Argument": [{"IdentifierName": "q2"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsInSegmentEnvelopes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPt"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "intPt"}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "NearestEndpoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q1"}]}, {"Argument": [{"IdentifierName": "q2"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "PrecisionModel"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModel"}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPt"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "intPt"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"name": {"identifier": "radius"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_radius"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"name": {"identifier": "minClearance"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_minClearance"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "addToIndex"}, "arguments": [{"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "build"}}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segStrings"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddToIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segmentString"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Build"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "funList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFunction"}}, "name": {"identifier": "fun"}, "initializer": {"type": {"name": {"identifier": "GeometryFunction"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "funList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "fun"}}]}}, "condition": {"name": {"identifier": "hasGeometryResult"}, "arguments": [{"name": {"identifier": "fun"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "sortedFunctions"}}, "name": {"identifier": "values"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "funList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometryFunction"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_sortedFunctions"}, {"IdentifierName": "Values"}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasGeometryResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fun"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "funList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fun"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "funList"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "leaves"}}, {"type": {"scope": {"name": {"identifier": "IntervalRTreeNode"}}, "name": {"identifier": "NodeComparator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "src"}, "initializer": {"name": {"identifier": "leaves"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "temp"}, "initializer": {}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "dest"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "buildLevel"}, "arguments": [{"name": {"identifier": "src"}}, {"name": {"identifier": "dest"}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "IntervalRTreeNode"}}, "expression": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "size"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "temp"}}, "value": {"name": {"identifier": "src"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "src"}}, "value": {"name": {"identifier": "dest"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "dest"}}, "value": {"name": {"identifier": "temp"}}}}]}, "condition": {"value": "true"}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_leaves"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"IdentifierName": "NodeComparator"}]}, {"IdentifierName": "Instance"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "_leaves"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"WhileStatement": [{"TrueLiteralExpression": "true"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildLevel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "src"}]}, {"Argument": [{"IdentifierName": "dest"}]}, {"Argument": [{"IdentifierName": "level"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dest"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "dest"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "src"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "src"}, {"IdentifierName": "dest"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "dest"}, {"IdentifierName": "temp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "compareSign0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "compareSign0"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "compareSign1"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "compareSign1"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "compareSign0"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "compareSign0"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "compareSign1"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "compareSign1"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "numLines"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "AND", "right": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "currentLine"}}, "name": {"identifier": "getNumPoints"}}, "left": {"name": {"identifier": "vertexIndex"}}}, "left": {"operator": "EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "numLines"}}}, "left": {"name": {"identifier": "componentIndex"}}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_componentIndex"}, {"IdentifierName": "_numLines"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_componentIndex"}, {"SubtractExpression": [{"IdentifierName": "_numLines"}, {"NumericLiteralExpression": "1"}]}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "_vertexIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_currentLine"}, {"IdentifierName": "NumPoints"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"value": "0.0"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "ee"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeEnd"}, {"IdentifierName": "ee"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "location"}}}, "value": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "locFinder"}}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "pt"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "location"}}}, "value": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "locFinder"}}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "pt"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "2"}, "name": {"name": {"identifier": "location"}}}, "value": {"scope": {"index": {"value": "2"}, "name": {"name": {"identifier": "locFinder"}}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "pt"}}]}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "hasLocation"}, "arguments": [{"name": {"identifier": "location"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}]}}, {"expression": {"name": {"identifier": "isValidResult"}, "arguments": [{"name": {"identifier": "overlayOp"}}, {"name": {"identifier": "location"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_locFinder"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_locFinder"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_locFinder"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_location"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsValidResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "overlayOp"}]}, {"Argument": [{"IdentifierName": "_location"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom0"}}]}}]}}, {"expression": {"name": {"identifier": "computeResultPrecision"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResultPrecision"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "orig"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "350.2"}, {"value": "4566.8"}, {"value": "5266.3"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "orig"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, {"value": "350.2"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, {"value": "4566.8"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "z"}}, {"value": "5266.3"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "350.2"}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "350.2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Z"}]}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HashMap"}}, "name": {"identifier": "ptsMap"}, "initializer": {"type": {"name": {"identifier": "HashMap"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "nss"}, "initializer": {"type": {"name": {"identifier": "NodedSegmentString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "nss"}}, "name": {"identifier": "size"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"scope": {"name": {"identifier": "nss"}}, "name": {"identifier": "getNodeList"}}, "name": {"identifier": "getSplitCoordinates"}}}]}}, {"expression": {"scope": {"name": {"identifier": "ptsMap"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "nss"}}, "name": {"identifier": "getData"}}, {"name": {"identifier": "pts"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "ptsMap"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}, {"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "segStrings"}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nss"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}, {"ContinueStatement": "continue;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nss"}, {"IdentifierName": "NodeList"}]}, {"IdentifierName": "GetSplitCoordinates"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptsMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "nss"}, {"IdentifierName": "Context"}]}]}]}, {"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ptsMap"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "original"}}, "value": {"scope": {"name": {"identifier": "wktReader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "original"}}}}, {"expression": {"name": {"identifier": "original"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CoalesceExpression": [{"IdentifierName": "_original"}, {"ParenthesizedExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "_original"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_wktReader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_wkt"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeDistance"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "ptDist"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "computeDistance"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "ptDist"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeDistance"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "ptDist"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeDistance"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "ptDist"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "PlanarGraph"}}, "name": {"identifier": "linkResultDirectedEdges"}, "arguments": [{"name": {"identifier": "nodes"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "maxEdgeRings"}, "initializer": {"name": {"identifier": "buildMaximalEdgeRings"}, "arguments": [{"name": {"identifier": "dirEdges"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "freeHoleList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edgeRings"}, "initializer": {"name": {"identifier": "buildMinimalEdgeRings"}, "arguments": [{"name": {"identifier": "maxEdgeRings"}}, {"name": {"identifier": "shellList"}}, {"name": {"identifier": "freeHoleList"}}]}}]}}, {"expression": {"name": {"identifier": "sortShellsAndHoles"}, "arguments": [{"name": {"identifier": "edgeRings"}}, {"name": {"identifier": "shellList"}}, {"name": {"identifier": "freeHoleList"}}]}}, {"expression": {"name": {"identifier": "placeFreeHoles"}, "arguments": [{"name": {"identifier": "shellList"}}, {"name": {"identifier": "freeHoleList"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PlanarGraph"}, {"IdentifierName": "LinkResultDirectedEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodes"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildMaximalEdgeRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdges"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildMinimalEdgeRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "maxEdgeRings"}]}, {"Argument": [{"IdentifierName": "_shellList"}]}, {"Argument": [{"IdentifierName": "freeHoleList"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SortShellsAndHoles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edgeRings"}]}, {"Argument": [{"IdentifierName": "_shellList"}]}, {"Argument": [{"IdentifierName": "freeHoleList"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "PlaceFreeHoles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_shellList"}]}, {"Argument": [{"IdentifierName": "freeHoleList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "covers"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "SimplePointInAreaLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Locate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "_geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "RectangleIntersects"}}, "name": {"identifier": "intersects"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {}}, {"name": {"identifier": "g"}}]}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "RectangleIntersects"}}, "name": {"identifier": "intersects"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}, {}]}}]}, "condition": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isRectangle"}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "r"}, "initializer": {"value": "false"}}]}}, {"body": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "j"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isGeometryCollection"}}, "left": {"name": {"identifier": "isGeometryCollection"}}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isIntersects"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "IsRectangle"}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RectangleIntersects"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"ThisExpression": "this"}]}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsRectangle"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RectangleIntersects"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "g"}]}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsIntersects"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g1"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g0"}}}}}, {"thenStmt": {"expression": {"name": {"identifier": "g0"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g1"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "g1"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g0"}}}}, {"expression": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "g0"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"IdentifierName": "g1"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "g1"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "g0"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "g0"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "g1"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "runNum"}}, "name": {"name": {"identifier": "runTime"}}}, "value": {"name": {"identifier": "time"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_runTime"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "runNum"}]}]}]}, {"IdentifierName": "time"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"scope": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "equals2D"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}]}, "left": {"scope": {"scope": {"name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "equals2D"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}]}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orig"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dest"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "mask"}, "initializer": {"inner": {"operator": "LEFT_SHIFT", "right": {"name": {"identifier": "i"}}, "left": {"value": "1L"}}}}]}}, {"expression": {"thenExpr": {"value": "1"}, "elseExpr": {"value": "0"}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"inner": {"operator": "BINARY_AND", "right": {"name": {"identifier": "mask"}}, "left": {"name": {"identifier": "xBits"}}}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"LeftShiftExpression": [{"NumericLiteralExpression": "1L"}, {"IdentifierName": "i"}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"NotEqualsExpression": [{"ParenthesizedExpression": [{"BitwiseAndExpression": [{"IdentifierName": "_xBits"}, {"IdentifierName": "mask"}]}]}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "1"}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonHoleRemover"}}, "name": {"identifier": "pihr"}, "initializer": {"type": {"name": {"identifier": "PolygonHoleRemover"}}, "arguments": [{"name": {"identifier": "poly"}}, {"name": {"identifier": "isRemoved"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "pihr"}}, "name": {"identifier": "getResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonHoleRemover"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PolygonHoleRemover"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}, {"Argument": [{"IdentifierName": "isRemoved"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pihr"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "computeResult"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "result"}}}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_result"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResult"}, {"ArgumentList": "()"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_result"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "createNaN"}}}, "condition": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "y"}}]}}, {"expression": {"scope": {"name": {"identifier": "copy"}, "arguments": [{}]}, "name": {"identifier": "selfMultiply"}, "arguments": [{"name": {"identifier": "y"}}, {"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"MultiplyExpression": [{"ThisExpression": "this"}, {"IdentifierName": "y"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg2"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "s0x"}}, {"name": {"identifier": "s0y"}}, {"name": {"identifier": "s1x"}}, {"name": {"identifier": "s1y"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "orient"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "orientationIndex"}, "arguments": [{"name": {"identifier": "seg2"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expectedOrient"}}, "left": {"name": {"identifier": "orient"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "s0x"}]}, {"Argument": [{"IdentifierName": "s0y"}]}, {"Argument": [{"IdentifierName": "s1x"}]}, {"Argument": [{"IdentifierName": "s1y"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "orient"}, {"IdentifierName": "expectedOrient"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "e"}}, "value": {"type": {"name": {"identifier": "DissolveHalfEdge"}}, "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}}}}, {"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isStart"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isStart"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "ringStartEdge"}}, "value": {"name": {"identifier": "e"}}}}, {}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "ringStartEdge"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "ringStartEdge"}}, "value": {"name": {"identifier": "e"}}}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "ringStartEdge"}}, "name": {"identifier": "orig"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsStart"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "e"}, {"CastExpression": [{"IdentifierName": "DissolveHalfEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsStart"}]}]}, {"ReturnStatement": "return;"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_ringStartEdge"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_ringStartEdge"}, {"IdentifierName": "e"}]}]}, {"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ringStartEdge"}, {"IdentifierName": "Orig"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "eOrig"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rseOrig"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "compareTo"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_ringStartEdge"}, {"IdentifierName": "e"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "level"}, "initializer": {"name": {"identifier": "recursionLevelForSize"}, "arguments": [{"name": {"identifier": "numPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "baseLine"}, "initializer": {"name": {"identifier": "getSquareBaseLine"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "getBoundary"}, "arguments": [{"name": {"identifier": "level"}}, {"scope": {"name": {"identifier": "baseLine"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "baseLine"}}, "name": {"identifier": "getLength"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "pts"}}]}, {}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RecursionLevelForSize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "NumPoints"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSquareBaseLine"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetBoundary"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "baseLine"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "baseLine"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "minSize"}, "initializer": {"name": {"identifier": "minimumNonEmptyCoordinatesSize"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minSize"}}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "MinimumNonEmptyCoordinatesSize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "minSize"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "Vertex"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "insertSite"}, "arguments": [{"name": {"identifier": "v"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "vertices"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "vertices"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertSite"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "normalize"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "Arrays"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "geometries"}}]}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_geometries"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geometries"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "DistanceOp"}}, "name": {"identifier": "distance"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DistanceOp"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "inputPts"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newPts"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newPts"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "0"}}]}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newPts"}}, "value": {"scope": {"name": {"identifier": "VWLineSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "inputPts"}}, {"name": {"identifier": "distanceTolerance"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "newPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": "newPts"}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newPts"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newPts"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "VWLineSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}, {"Argument": [{"IdentifierName": "_distanceTolerance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "quadEdges"}, "initializer": {"name": {"identifier": "getPrimaryEdges"}, "arguments": [{"value": "false"}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "name": {"identifier": "edges"}, "initializer": {"elementType": {"name": {"identifier": "LineString"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "quadEdges"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "qe"}, "initializer": {"type": {"name": {"identifier": "QuadEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "edges"}}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"scope": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}]}}]}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "quadEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiLineString"}, "arguments": [{"name": {"identifier": "edges"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetPrimaryEdges"}, {"ArgumentList": [{"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILineString"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "LineString"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "quadEdges"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "quadEdges"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "edges"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateMultiLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edges"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "UniqueCoordinateArrayFilter"}}, "name": {"identifier": "filter"}, "initializer": {"type": {"name": {"identifier": "UniqueCoordinateArrayFilter"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}, {"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "getCoordinates"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "UniqueCoordinateArrayFilter"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Coordinates"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "actual"}, "initializer": {"scope": {"name": {"identifier": "InvalidHoleRemover"}}, "name": {"identifier": "clean"}, "arguments": [{"name": {"identifier": "input"}}]}}]}}, {"expression": {"name": {"identifier": "checkEqual"}, "arguments": [{"name": {"identifier": "expected"}}, {"name": {"identifier": "actual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "InvalidHoleRemover"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"IdentifierName": "actual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MultiPoint"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "expression": {}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Point"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts2"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1.0000000000004998"}, {"operator": "MINUS", "expression": {"value": "7.989685402102996"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10.0"}, {"operator": "MINUS", "expression": {"value": "7.004368924503866"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1.0000000000005"}, {"operator": "MINUS", "expression": {"value": "7.989685402102996"}}]}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isAllOrientationsEqual"}, "arguments": [{"name": {"identifier": "pts2"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0000000000004998"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.989685402102996"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10.0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.004368924503866"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0000000000005"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.989685402102996"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IsAllOrientationsEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts2"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}]}}, {"expression": {"name": {"identifier": "buildEdgeStringsStartingAt"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "setMarked"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "isMarked"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "IsMarked"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsStartingAt"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Marked"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "size"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"ElementAccessExpression": [{"IdentifierName": "nodes"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodes"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "convArg"}}}, "value": {}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "convertArgFromString"}, "arguments": [{"name": {"identifier": "destClass"}}, {"type": {"name": {"identifier": "String"}}, "expression": {"name": {"identifier": "srcValue"}}}, {"name": {"identifier": "convArg"}}]}}]}, "condition": {"type": {"name": {"identifier": "String"}}, "expression": {"name": {"identifier": "srcValue"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "convArg"}}}, "value": {"name": {"identifier": "srcValue"}}}}, {"expression": {"value": "true"}}]}, "condition": {"scope": {"name": {"identifier": "destClass"}}, "name": {"identifier": "isAssignableFrom"}, "arguments": [{"scope": {"name": {"identifier": "srcValue"}}, "name": {"identifier": "getClass"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "convArg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "srcValue"}, {"PredefinedType": "string"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "convertArgFromString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "destClass"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "String"}, {"IdentifierName": "srcValue"}]}]}, {"Argument": [{"IdentifierName": "convArg"}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "destClass"}, {"IdentifierName": "IsAssignableFrom"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "srcValue"}, {"IdentifierName": "GetType"}]}, {"ArgumentList": "()"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "convArg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "srcValue"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "checkValid"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nv"}, {"IdentifierName": "CheckValid"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "matchSS"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "ocaMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "oca"}}]}}}]}}, {"expression": {"name": {"identifier": "matchSS"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ISegmentString"}, {"VariableDeclarator": "ret"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ocaMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}, {"Argument": [{"IdentifierName": "ret"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ret"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "compare0"}, "initializer": {"scope": {"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p0"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p0"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "compare0"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "compare0"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P0"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "compare0"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "compare0"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P1"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "basePt"}, "initializer": {"name": {"identifier": "averagePoint"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Vector3D"}}, "name": {"identifier": "normal"}, "initializer": {"name": {"identifier": "averageNormal"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}}, {"expression": {"type": {"name": {"identifier": "Plane3D"}}, "arguments": [{"name": {"identifier": "normal"}}, {"name": {"identifier": "basePt"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "AveragePoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "AverageNormal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Plane3D"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "normal"}]}, {"Argument": [{"IdentifierName": "basePt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "transGeomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "transformGeom"}, "initializer": {"name": {"identifier": "transformPoint"}, "arguments": [{"type": {"name": {"identifier": "Point"}}, "expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}, {"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "transformGeom"}}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "transformGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"name": {"identifier": "transGeomList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "transformGeom"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "transGeomList"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "TransformPoint"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "transformGeom"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transGeomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transformGeom"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transGeomList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "InteriorIntersectionFinderAdder"}}, "name": {"identifier": "intFinderAdder"}, "initializer": {"type": {"name": {"identifier": "InteriorIntersectionFinderAdder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setSegmentIntersector"}, "arguments": [{"name": {"identifier": "intFinderAdder"}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"expression": {"scope": {"name": {"identifier": "intFinderAdder"}}, "name": {"identifier": "getInteriorIntersections"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "InteriorIntersectionFinderAdder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinderAdder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_noder"}, {"IdentifierName": "SegmentIntersector"}]}, {"IdentifierName": "intFinderAdder"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intFinderAdder"}, {"IdentifierName": "InteriorIntersections"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKTFile"}, "arguments": [{"name": {"identifier": "filename"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "test"}, "arguments": [{"name": {"identifier": "geoms"}}, {"name": {"identifier": "minimumMeasure"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKTFile"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "stream"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Tester"}, {"IdentifierName": "Test"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"IdentifierName": "minimumMeasure"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"name": {"identifier": "getRing"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isHole"}}, "value": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "isCCW"}, "arguments": [{"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinates"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Ring"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isHole"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsCCW"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getSegment"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "inputIndex"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "seg"}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "end"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "start"}}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "start"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "end"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TaggedLineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "GetSegment"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputIndex"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "snapClean"}, "arguments": [{"name": {"identifier": "geomA"}}, {"name": {"identifier": "geomB"}}, {"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "intersection"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "SnapClean"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomA"}]}, {"Argument": [{"IdentifierName": "geomB"}]}, {"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "nonNullItemCount"}, "arguments": [{"name": {"identifier": "args"}}]}, "left": {"scope": {"name": {"identifier": "parameterTypes"}}, "name": {"identifier": "length"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isCompatible"}, "initializer": {"name": {"identifier": "convertArg"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "parameterTypes"}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "args"}}}, {"name": {"identifier": "convArg"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isCompatible"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "actualArgs"}}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "convArg"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "args"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parameterTypes"}, {"IdentifierName": "Length"}]}, {"InvocationExpression": [{"IdentifierName": "NonNullItemCount"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "args"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "args"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ConvertArg"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "parameterTypes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "ParameterType"}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "_convArg"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isCompatible"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "actualArgs"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "_convArg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "UnaryUnionOp"}}, "name": {"identifier": "union"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "UnaryUnionOp"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "collectStats"}, "arguments": [{"name": {"identifier": "itemInterval"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Interval"}}, "name": {"identifier": "insertInterval"}, "initializer": {"name": {"identifier": "ensureExtent"}, "arguments": [{"name": {"identifier": "itemInterval"}}, {"name": {"identifier": "minExtent"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "insertInterval"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CollectStats"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemInterval"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnsureExtent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemInterval"}]}, {"Argument": [{"IdentifierName": "_minExtent"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "insertInterval"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "copy"}}}, "condition": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DPTransformer"}}, "arguments": [{"name": {"identifier": "isEnsureValidTopology"}}, {"name": {"identifier": "distanceTolerance"}}]}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DPTransformer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DPTransformer"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "EnsureValidTopology"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformer"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "intersectsScaled"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, "condition": {"operator": "EQUALS", "right": {"value": "1.0"}, "left": {"name": {"identifier": "scaleFactor"}}}}, {"expression": {"name": {"identifier": "copyScaled"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p0Scaled"}}]}}, {"expression": {"name": {"identifier": "copyScaled"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p1Scaled"}}]}}, {"expression": {"name": {"identifier": "intersectsScaled"}, "arguments": [{"name": {"identifier": "p0Scaled"}}, {"name": {"identifier": "p1Scaled"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_scaleFactor"}, {"NumericLiteralExpression": "1.0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IntersectsScaled"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CopyScaled"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "_p0Scaled"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CopyScaled"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "_p1Scaled"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IntersectsScaled"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0Scaled"}]}, {"Argument": [{"IdentifierName": "_p1Scaled"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "size"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "queue"}]}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p1"}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "isInteriorIntersection"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P1"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "IsInteriorIntersection"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LineStringExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygonizer"}}, "name": {"identifier": "polygonizer"}, "initializer": {"type": {"name": {"identifier": "Polygonizer"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "lines"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getCutEdges"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineStringExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetCutEdges"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}, {"IdentifierName": "IGeometry"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "visitItem"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_items"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "VisitItem"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "CGAlgorithmsDD"}}, "name": {"identifier": "orientationIndex"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithmsDD"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g1"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g0"}}}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "copy"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g0"}}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "copy"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "g1"}}}}, {"expression": {"name": {"identifier": "unionOptimized"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "g0"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"IdentifierName": "g1"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "g0"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "g1"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "UnionOptimized"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "AxisPlaneCoordinateSequence"}}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "XY_INDEX"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AxisPlaneCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "XYIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "AxisPlaneCoordinateSequence"}}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "XZ_INDEX"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AxisPlaneCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "XZIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "ringPts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"scope": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "e"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "e"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"scope": {"index": {"value": "2"}, "name": {"name": {"identifier": "e"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "e"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "fact"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "ringPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "tri"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "ring"}}]}}]}}, {"expression": {"name": {"identifier": "tri"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ringPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "tri"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "locations"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "GeometryLocation"}}, "arguments": [{"name": {"identifier": "geom"}}, {"value": "0"}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinate"}}]}]}}, "condition": {"operator": "OR", "right": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}, "left": {"operator": "OR", "right": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}, "left": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPoint"}]}, {"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}]}, {"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_locations"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "newGeom"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "operation"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "targetFactory"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {}}]}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "geom"}}, "left": {"name": {"identifier": "newGeom"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "newGeom"}}}}, {"expression": {"name": {"identifier": "newGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_operation"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_targetFactory"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"IdentifierName": "geom"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreateGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}}, {"expression": {"name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, {"name": {"identifier": "p0"}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "p1"}}]}}, {"expression": {"scope": {"name": {"identifier": "rcc"}}, "name": {"identifier": "countSegment"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"IdentifierName": "p0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rcc"}, {"IdentifierName": "CountSegment"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "actual"}, "initializer": {"scope": {"name": {"identifier": "SmallHoleRemover"}}, "name": {"identifier": "clean"}, "arguments": [{"name": {"identifier": "input"}}, {"value": "100"}]}}]}}, {"expression": {"name": {"identifier": "checkEqual"}, "arguments": [{"name": {"identifier": "expected"}}, {"name": {"identifier": "actual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SmallHoleRemover"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"IdentifierName": "actual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "covers"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineIntersector"}}, "name": {"identifier": "li"}, "initializer": {"type": {"name": {"identifier": "RobustLineIntersector"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "p1"}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersection"}, "arguments": [{"value": "0"}]}}, "condition": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "hasIntersection"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "_p0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "_p1"}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "HasIntersection"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "GetIntersection"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "collapsedVertexIndex"}, "initializer": {"elementType": {"type": "INT"}, "levels": [{"dimension": {"value": "1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "eiPrev"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isCollapsed"}, "initializer": {"name": {"identifier": "findCollapseIndex"}, "arguments": [{"name": {"identifier": "eiPrev"}}, {"name": {"identifier": "ei"}}, {"name": {"identifier": "collapsedVertexIndex"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "collapsedVertexIndexes"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "collapsedVertexIndex"}}}]}]}}, "condition": {"name": {"identifier": "isCollapsed"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eiPrev"}}, "value": {"name": {"identifier": "ei"}}}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEnumerator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindCollapseIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eiPrev"}]}, {"Argument": [{"IdentifierName": "ei"}]}, {"Argument": [{"IdentifierName": "collapsedVertexIndex"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isCollapsed"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "collapsedVertexIndexes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "collapsedVertexIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eiPrev"}, {"IdentifierName": "ei"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "subnodeIndex"}, "initializer": {"operator": "MINUS", "expression": {"value": "1"}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subnodeIndex"}}, "value": {"value": "3"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "centrey"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinY"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subnodeIndex"}}, "value": {"value": "1"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "centrey"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMaxY"}}}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "centrex"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinX"}}}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subnodeIndex"}}, "value": {"value": "2"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "centrey"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinY"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subnodeIndex"}}, "value": {"value": "0"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "centrey"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMaxY"}}}}]}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "centrex"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMaxX"}}}}, {"expression": {"name": {"identifier": "subnodeIndex"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinX"}]}, {"IdentifierName": "centreX"}]}, {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinY"}]}, {"IdentifierName": "centreY"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "subnodeIndex"}, {"NumericLiteralExpression": "3"}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MaxY"}]}, {"IdentifierName": "centreY"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "subnodeIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MaxX"}]}, {"IdentifierName": "centreX"}]}, {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinY"}]}, {"IdentifierName": "centreY"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "subnodeIndex"}, {"NumericLiteralExpression": "2"}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MaxY"}]}, {"IdentifierName": "centreY"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "subnodeIndex"}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "subnodeIndex"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "PolygonInvalidHoleRemover"}}, "name": {"identifier": "clean"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "geom"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PolygonInvalidHoleRemover"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopeCovers"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "RectangleContains"}}, "name": {"identifier": "contains"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "getGeometry"}}}, {"name": {"identifier": "g"}}]}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"expression": {"scope": {"name": {"identifier": "PreparedPolygonContains"}}, "name": {"identifier": "contains"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCovers"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "_isRectangle"}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RectangleContains"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "Geometry"}]}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedPolygonContains"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "xStr"}, "initializer": {"scope": {"name": {"identifier": "x"}}, "name": {"identifier": "toStandardNotation"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedStr"}}, {"name": {"identifier": "xStr"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "String"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x"}, {"IdentifierName": "ToStandardNotation"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedStr"}]}, {"Argument": [{"IdentifierName": "xStr"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"type": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "isAssignableFrom"}, "arguments": [{"name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "name"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"TypeOfExpression": [{"IdentifierName": "IGeometry"}]}, {"IdentifierName": "IsAssignableFrom"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetGeometryReturnType"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTestCreateParentsFromVerticalSlice"}, "arguments": [{"value": "3"}, {"value": "2"}, {"value": "2"}, {"value": "1"}]}}, {"expression": {"name": {"identifier": "doTestCreateParentsFromVerticalSlice"}, "arguments": [{"value": "4"}, {"value": "2"}, {"value": "2"}, {"value": "2"}]}}, {"expression": {"name": {"identifier": "doTestCreateParentsFromVerticalSlice"}, "arguments": [{"value": "5"}, {"value": "2"}, {"value": "2"}, {"value": "1"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestCreateParentsFromVerticalSlice"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestCreateParentsFromVerticalSlice"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestCreateParentsFromVerticalSlice"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "indexOfFromStart"}, "arguments": [{"name": {"identifier": "inputPt"}}, {"operator": "MINUS", "expression": {"value": "1.0"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IndexOfFromStart"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "getEdges"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "degree"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "degree"}}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isMarked"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "degree"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"IdentifierName": "Edges"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "edges"}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsMarked"}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "degree"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "degree"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "del"}, "initializer": {"scope": {"name": {"identifier": "interval"}}, "name": {"identifier": "getWidth"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minExtent"}}, "value": {"name": {"identifier": "del"}}}}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "del"}}}, "left": {"operator": "LESS", "right": {"name": {"identifier": "minExtent"}}, "left": {"name": {"identifier": "del"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "interval"}, {"IdentifierName": "Width"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "del"}, {"IdentifierName": "_minExtent"}]}, {"GreaterThanExpression": [{"IdentifierName": "del"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minExtent"}, {"IdentifierName": "del"}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "hasRepeatedPoint"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasRepeatedPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "index"}, "initializer": {"type": {"name": {"identifier": "KdTree"}}, "arguments": [{"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"scope": {"name": {"identifier": "IOUtil"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktInput"}}]}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IOUtil"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktInput"}]}]}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"name": {"identifier": "max"}}, {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "max"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "min"}}, {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "min"}}]}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_max"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_max"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_max"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_min"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_min"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_min"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "savePt"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "4"}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "savePt"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineIntersector"}}, "name": {"identifier": "li"}, "initializer": {"type": {"name": {"identifier": "RobustLineIntersector"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "setPrecisionModel"}, "arguments": [{"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "3"}, "name": {"name": {"identifier": "pt"}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"operator": "PLUS", "right": {"value": " was altered - "}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "i"}}, "left": {"value": "Input point "}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "savePt"}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}]}}]}, "compare": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt2"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l1"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l1"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l2"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l2"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInputNotAltered"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "PLUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "getSegmentIndex"}}}}, "condition": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "getSegmentFraction"}}}}, {"expression": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "getSegmentIndex"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "SegmentFraction"}]}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "SegmentIndex"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "SegmentIndex"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "geometries"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "read"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "wkt"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "wkt"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "geometries"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "wkt"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "wkt"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometries"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "wkt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geometries"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "GeometryEditor"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "newPM"}}, "left": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "getPrecisionModel"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "newFactory"}, "initializer": {"name": {"identifier": "createFactory"}, "arguments": [{"name": {"identifier": "geomFactory"}}, {"name": {"identifier": "newPM"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryEditor"}}, "name": {"identifier": "geomEdit"}, "initializer": {"type": {"name": {"identifier": "GeometryEditor"}}, "arguments": [{"name": {"identifier": "newFactory"}}]}}]}}, {"expression": {"name": {"identifier": "geomEdit"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFactory"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "newPrecModel"}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": "()"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFactory"}]}, {"Argument": [{"IdentifierName": "newPrecModel"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newFactory"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geomEdit"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "execute"}}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "TopologyException"}}, "arguments": [{"name": {"identifier": "getErrorMessage"}}, {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "getInteriorIntersection"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "IsValid"}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "TopologyException"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetErrorMessage"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segInt"}, {"IdentifierName": "InteriorIntersection"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "nearestPoints"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "NearestPoints"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaA"}, "initializer": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaAdiffB"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "g1"}}]}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaAintB"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "g1"}}]}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"operator": "MINUS", "right": {"name": {"identifier": "areaAintB"}}, "left": {"operator": "MINUS", "right": {"name": {"identifier": "areaAdiffB"}}, "left": {"name": {"identifier": "areaA"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Area"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}, {"IdentifierName": "Area"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}, {"IdentifierName": "Area"}]}]}]}]}]}, {"ReturnStatement": [{"SubtractExpression": [{"SubtractExpression": [{"IdentifierName": "areaA"}, {"IdentifierName": "areaAdiffB"}]}, {"IdentifierName": "areaAintB"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "invalidGeoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IsValidOp"}}, "name": {"identifier": "ivop"}, "initializer": {"type": {"name": {"identifier": "IsValidOp"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "err"}, "initializer": {"scope": {"name": {"identifier": "ivop"}}, "name": {"identifier": "getValidationError"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "invalidGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "err"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "invalidGeoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IsValidOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ivop"}, {"IdentifierName": "ValidationError"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "err"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invalidGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "invalidGeoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"scope": {"name": {"identifier": "extentLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "extentLocator"}}}}, {"expression": {"scope": {"name": {"identifier": "getExtent"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_extentLocator"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_extentLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Extent"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "createEmptyResult"}, "arguments": [{"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "DIFFERENCE"}}, {}, {"name": {"identifier": "other"}}, {"name": {"identifier": "factory"}}]}}, "condition": {"scope": {}, "name": {"identifier": "isEmpty"}}}, {"thenStmt": {"expression": {"name": {"identifier": "copy"}}}, "condition": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{}]}}, {"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{"name": {"identifier": "other"}}]}}, {"expression": {"scope": {"name": {"identifier": "SnapIfNeededOverlayOp"}}, "name": {"identifier": "overlayOp"}, "arguments": [{}, {"name": {"identifier": "other"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "DIFFERENCE"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "IsEmpty"}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "CreateEmptyResult"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Difference"}]}]}, {"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"IdentifierName": "_factory"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "other"}, {"NullLiteralExpression": "null"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"IdentifierName": "Clone"}, {"ArgumentList": "()"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SnapIfNeededOverlayOp"}, {"IdentifierName": "Overlay"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Difference"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Distance3DOp"}}, "name": {"identifier": "distOp"}, "initializer": {"type": {"name": {"identifier": "Distance3DOp"}}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "distOp"}}, "name": {"identifier": "distance"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedDistance"}}, {"name": {"identifier": "dist"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Distance3DOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distOp"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedDistance"}]}, {"Argument": [{"IdentifierName": "dist"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"name": {"identifier": "geometries"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToPolygonArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometries"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getBoundary"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Boundary"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "label"}}, "value": {"type": {"name": {"identifier": "Label"}}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "onLocation"}}]}}}]}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "onLocation"}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "label"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "Label"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Label"}, {"ObjectCreationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "onLocation"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "onLocation"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "rcc"}, "initializer": {"type": {"name": {"identifier": "RayCrossingCounter"}}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentVisitor"}}, "name": {"identifier": "visitor"}, "initializer": {"type": {"name": {"identifier": "SegmentVisitor"}}, "arguments": [{"name": {"identifier": "rcc"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"name": {"identifier": "visitor"}}]}}, {"expression": {"scope": {"name": {"identifier": "rcc"}}, "name": {"identifier": "getLocation"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "RayCrossingCounter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RayCrossingCounter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SegmentVisitor"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentVisitor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rcc"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rcc"}, {"IdentifierName": "Location"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "reducePW"}, "initializer": {"name": {"identifier": "reducePointwise"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "reducePW"}}}, "condition": {"name": {"identifier": "isPointwise"}}}, {"thenStmt": {"expression": {"name": {"identifier": "reducePW"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "reducePW"}}}}}}, {"thenStmt": {"expression": {"name": {"identifier": "reducePW"}}}, "condition": {"scope": {"name": {"identifier": "reducePW"}}, "name": {"identifier": "isValid"}}}, {"expression": {"name": {"identifier": "fixPolygonalTopology"}, "arguments": [{"name": {"identifier": "reducePW"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReducePointwise"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isPointwise"}, {"ReturnStatement": [{"IdentifierName": "reducePointwise"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "reducePointwise"}, {"IdentifierName": "IPolygonal"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "reducePointwise"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reducePointwise"}, {"IdentifierName": "IsValid"}]}, {"ReturnStatement": [{"IdentifierName": "reducePointwise"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "FixPolygonalTopology"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reducePointwise"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "isNull"}}}, {"expression": {"scope": {}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "itemEnv"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "IsNull"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedValue"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getArea"}}, {"name": {"identifier": "TOLERANCE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedValue"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Area"}]}]}, {"Argument": [{"IdentifierName": "TOLERANCE"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "mergeSymLabels"}}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "MergeSymLabels"}]}, {"ArgumentList": "()"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "26.2"}}, {"value": "188.7"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "37.0"}, {"value": "290.7"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "21.2"}, {"value": "265.2"}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "26.2"}]}]}, {"Argument": [{"NumericLiteralExpression": "188.7"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "37.0"}]}, {"Argument": [{"NumericLiteralExpression": "290.7"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "21.2"}]}, {"Argument": [{"NumericLiteralExpression": "265.2"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "5.9"}}, {"value": "163.1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "76.1"}, {"value": "250.7"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "14.6"}, {"value": "185"}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5.9"}]}]}, {"Argument": [{"NumericLiteralExpression": "163.1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "76.1"}]}, {"Argument": [{"NumericLiteralExpression": "250.7"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "14.6"}]}, {"Argument": [{"NumericLiteralExpression": "185"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "140.8859438214298"}}, {"value": "140.88594382142983"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "57.309236848216706"}}, {"value": "57.30923684821671"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "190.9188309203678"}}, {"value": "190.91883092036784"}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "140.8859438214298"}]}]}, {"Argument": [{"NumericLiteralExpression": "140.88594382142983"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "57.309236848216706"}]}]}, {"Argument": [{"NumericLiteralExpression": "57.30923684821671"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "190.9188309203678"}]}]}, {"Argument": [{"NumericLiteralExpression": "190.91883092036784"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "0.9575"}}, {"value": "0.4511"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "0.9295"}}, {"value": "0.3291"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "0.8945"}}, {"value": "0.1766"}]}]}}]}}, {"expression": {"name": {"identifier": "checkDD"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "checkShewchuk"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "false"}]}}, {"expression": {"name": {"identifier": "checkOriginalJTS"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "0.9575"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.4511"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "0.9295"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.3291"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "0.8945"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.1766"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckShewchuk"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOriginalJTS"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "219.3649559090992"}, {"value": "140.84159161824724"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "168.9018919682399"}, {"operator": "MINUS", "expression": {"value": "5.713787599646864"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "186.80814046338352"}, {"value": "46.28973405831556"}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "219.3649559090992"}]}, {"Argument": [{"NumericLiteralExpression": "140.84159161824724"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "168.9018919682399"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5.713787599646864"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "186.80814046338352"}]}, {"Argument": [{"NumericLiteralExpression": "46.28973405831556"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "279.56857838488514"}, {"operator": "MINUS", "expression": {"value": "186.3790522565901"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "20.43142161511487"}}, {"value": "13.620947743409914"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "279.56857838488514"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "186.3790522565901"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "20.43142161511487"}]}]}, {"Argument": [{"NumericLiteralExpression": "13.620947743409914"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "a"}}, {"type": {"name": {"identifier": "GeometryPredicate"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getArea"}}}}]}, "type": {"type": "BOOLEAN"}, "name": {"identifier": "isTrue"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleLambdaExpression": [{"Parameter": "g"}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Area"}]}, {"NumericLiteralExpression": "0d"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "forwardLength"}, "initializer": {"name": {"identifier": "length"}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "lineLen"}, "initializer": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getLength"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "forwardLength"}}, "value": {"operator": "PLUS", "right": {"name": {"identifier": "length"}}, "left": {"name": {"identifier": "lineLen"}}}}}]}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "loc"}, "initializer": {"name": {"identifier": "getLocationForward"}, "arguments": [{"name": {"identifier": "forwardLength"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "loc"}}}]}, "condition": {"name": {"identifier": "resolveLower"}}}, {"expression": {"name": {"identifier": "resolveHigher"}, "arguments": [{"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "length"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "length"}, {"NumericLiteralExpression": "0.0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "forwardLength"}, {"AddExpression": [{"IdentifierName": "lineLen"}, {"IdentifierName": "length"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetLocationForward"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "forwardLength"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "resolveLower"}, {"Block": [{"ReturnStatement": [{"IdentifierName": "loc"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ResolveHigher"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "boundablesOfALevel"}}, "name": {"identifier": "isEmpty"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "parentBoundables"}, "initializer": {"name": {"identifier": "createParentBoundables"}, "arguments": [{"name": {"identifier": "boundablesOfALevel"}}, {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "level"}}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"scope": {"name": {"identifier": "parentBoundables"}}, "name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "parentBoundables"}}, "name": {"identifier": "size"}}}}, {"expression": {"name": {"identifier": "createHigherLevels"}, "arguments": [{"name": {"identifier": "parentBoundables"}}, {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "level"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "boundablesOfALevel"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateParentBoundables"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "boundablesOfALevel"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "level"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parentBoundables"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"ElementAccessExpression": [{"IdentifierName": "parentBoundables"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateHigherLevels"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "parentBoundables"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "level"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, "name": {"identifier": "setCoordinate"}, "arguments": [{"name": {"identifier": "p0"}}]}}, {"expression": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}, "name": {"identifier": "setCoordinate"}, "arguments": [{"name": {"identifier": "p1"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "distance"}}, "value": {"name": {"identifier": "distance"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isNull"}}, "value": {"value": "false"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "CoordinateValue"}]}, {"IdentifierName": "p0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "CoordinateValue"}]}, {"IdentifierName": "p1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "distance"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isNull"}, {"FalseLiteralExpression": "false"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getCircle"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumBoundingCircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "GetCircle"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "vertices"}, "initializer": {"type": {"name": {"identifier": "HashSet"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "qe"}, "initializer": {"type": {"name": {"identifier": "QuadEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "orig"}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "vertices"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "v"}}]}}, "condition": {"operator": "OR", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isFrameVertex"}, "arguments": [{"name": {"identifier": "v"}}]}}, "left": {"name": {"identifier": "includeFrame"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "vd"}, "initializer": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "dest"}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "vertices"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "vd"}}]}}, "condition": {"operator": "OR", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isFrameVertex"}, "arguments": [{"name": {"identifier": "vd"}}]}}, "left": {"name": {"identifier": "includeFrame"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "quadEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "vertices"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "_quadEdges"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Vertex"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Orig"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"IdentifierName": "includeFrame"}, {"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsFrameVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vertices"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Vertex"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Dest"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"IdentifierName": "includeFrame"}, {"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsFrameVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vd"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vertices"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vd"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "vertices"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PreparedGeometry"}}, "name": {"identifier": "prepGeom"}, "initializer": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "prepGeom"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepGeom"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "qeTris"}, "initializer": {"scope": {"name": {"identifier": "QuadEdgeTriangle"}}, "name": {"identifier": "createOn"}, "arguments": [{"name": {"identifier": "subdiv"}}]}}]}}, {"expression": {"name": {"identifier": "qeTris"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"IdentifierName": "CreateOn"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subdiv"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "qeTris"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "envelopes"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "envelopes"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "randomRectangle"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "ITEM_COUNT"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "envelopes"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ITEM_COUNT"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelopes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "RandomRectangle"}, {"ArgumentList": "()"}]}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "envelopes"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "fontGlyph"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "text"}}, {"type": {"name": {"identifier": "Font"}}, "arguments": [{"scope": {"name": {"identifier": "FontGlyphReader"}}, "name": {"identifier": "FONT_SERIF"}}, {"scope": {"name": {"identifier": "Font"}}, "name": {"identifier": "PLAIN"}}, {"name": {"identifier": "pointSize"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "FontGlyph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "text"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Font"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontGlyphReader"}, {"IdentifierName": "FontSerif"}]}]}, {"Argument": [{"IdentifierName": "pointSize"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontStyle"}, {"IdentifierName": "Regular"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createGeometryCollection"}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "inputPts"}}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "inputPts"}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "reducedPts"}, "initializer": {"name": {"identifier": "inputPts"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "reducedPts"}}, "value": {"name": {"identifier": "reduce"}, "arguments": [{"name": {"identifier": "inputPts"}}]}}}]}, "condition": {"operator": "GREATER", "right": {"value": "50"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "sortedPts"}, "initializer": {"name": {"identifier": "preSort"}, "arguments": [{"name": {"identifier": "reducedPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Stack"}}, "name": {"identifier": "cHS"}, "initializer": {"name": {"identifier": "grahamScan"}, "arguments": [{"name": {"identifier": "sortedPts"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "cH"}, "initializer": {"name": {"identifier": "toCoordinateArray"}, "arguments": [{"name": {"identifier": "cHS"}}]}}]}}, {"expression": {"name": {"identifier": "lineOrPolygon"}, "arguments": [{"name": {"identifier": "cH"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_inputPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputPts"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "_inputPts"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "50"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "reducedPts"}, {"InvocationExpression": [{"IdentifierName": "Reduce"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputPts"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "PreSort"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reducedPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GrahamScan"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sortedPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "convexHullStack"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "LineOrPolygon"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "convexHull"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ClosestPointExample"}}, "name": {"identifier": "example"}, "initializer": {"type": {"name": {"identifier": "ClosestPointExample"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "example"}}, "name": {"identifier": "run"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ClosestPointExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ClosestPointExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "example"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "eval"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Eval"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}}}, "left": {"name": {"identifier": "segmentLengthFraction"}}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "x"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}}}, "left": {"name": {"identifier": "segmentLengthFraction"}}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "y"}}}}}, {"expression": {"name": {"identifier": "coord"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "X"}]}, {"MultiplyExpression": [{"IdentifierName": "segmentLengthFraction"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "Y"}]}, {"MultiplyExpression": [{"IdentifierName": "segmentLengthFraction"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coord"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "nodesFound"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "nodesFound"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "degree"}}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "nodeIterator"}}}]}]}, {"expression": {"name": {"identifier": "nodesFound"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "Values"}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}, {"IdentifierName": "degree"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodesFound"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "nodesFound"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DouglasPeuckerSimplifier"}}, "name": {"identifier": "tss"}, "initializer": {"type": {"name": {"identifier": "DouglasPeuckerSimplifier"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "tss"}}, "name": {"identifier": "setDistanceTolerance"}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, {"expression": {"scope": {"name": {"identifier": "tss"}}, "name": {"identifier": "getResultGeometry"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DouglasPeuckerSimplifier"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DouglasPeuckerSimplifier"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tss"}, {"IdentifierName": "DistanceTolerance"}]}, {"IdentifierName": "distanceTolerance"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tss"}, {"IdentifierName": "GetResultGeometry"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edgeEnds"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edgeEnds"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "pScaled"}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "scale"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "pScaled"}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "scale"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pScaled"}, {"IdentifierName": "X"}]}, {"InvocationExpression": [{"IdentifierName": "Scale"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pScaled"}, {"IdentifierName": "Y"}]}, {"InvocationExpression": [{"IdentifierName": "Scale"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "invokeBuffer"}, "arguments": [{"name": {"identifier": "geometry"}}]}}}, {"expression": {"name": {"identifier": "validate"}, "arguments": [{"name": {"identifier": "geometry"}}, {"name": {"identifier": "result"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{}]}}}]}, "condition": {"name": {"identifier": "returnEmptyGC"}}}, {"expression": {"type": {"name": {"identifier": "GeometryResult"}}, "arguments": [{"name": {"identifier": "result"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "InvokeBuffer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Validate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "result"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "ReturnEmptyGeometryCollection"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "result"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "contains"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SimpleMethodsExample"}}, "name": {"identifier": "example"}, "initializer": {"type": {"name": {"identifier": "SimpleMethodsExample"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "example"}}, "name": {"identifier": "run"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SimpleMethodsExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SimpleMethodsExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "example"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"expression": {"name": {"identifier": "compareDirection"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "obj"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareDirection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Key"}}, "name": {"identifier": "key"}, "initializer": {"type": {"name": {"identifier": "Key"}}, "arguments": [{"name": {"identifier": "env"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "arguments": [{"scope": {"name": {"identifier": "key"}}, "name": {"identifier": "getEnvelope"}}, {"scope": {"name": {"identifier": "key"}}, "name": {"identifier": "getLevel"}}]}}]}}, {"expression": {"name": {"identifier": "node"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Key"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Key"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "key"}, {"IdentifierName": "Envelope"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "key"}, {"IdentifierName": "Level"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "node"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"typeArguments": [{"name": {"identifier": "String"}}, {"name": {"identifier": "Object"}}], "name": {"identifier": "Map"}}, "name": {"identifier": "map"}, "initializer": {"name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "geometry"}}, {"name": {"identifier": "isEncodeCRS"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "JSONObject"}}, "name": {"identifier": "writeJSONString"}, "arguments": [{"name": {"identifier": "map"}}, {"name": {"identifier": "writer"}}]}}, {"expression": {"scope": {"name": {"identifier": "writer"}}, "name": {"identifier": "flush"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "JsonSerializer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeoJsonSerializer"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "SerializerSettings"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "Default"}]}]}]}]}]}]}]}]}, {"EmptyStatement": ";"}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "StringBuilder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"UsingStatement": [{"VariableDeclaration": [{"IdentifierName": "StringWriter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringWriter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sb"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Serialize"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sw"}]}, {"Argument": [{"IdentifierName": "value"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comp"}, "initializer": {"name": {"identifier": "compareAngularDirection"}, "arguments": [{"name": {"identifier": "e"}}]}}]}}, {"expression": {"name": {"identifier": "comp"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareAngularDirection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "bufferedReader"}}, "name": {"identifier": "mark"}, "arguments": [{"name": {"identifier": "MAX_LOOKAHEAD"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "StreamTokenizer"}}, "name": {"identifier": "tokenizer"}, "initializer": {"type": {"name": {"identifier": "StreamTokenizer"}}, "arguments": [{"name": {"identifier": "bufferedReader"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "type"}, "initializer": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "nextToken"}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "StreamTokenizer"}}, "name": {"identifier": "TT_EOF"}}, "left": {"name": {"identifier": "type"}}}}, {"expression": {"scope": {"name": {"identifier": "bufferedReader"}}, "name": {"identifier": "reset"}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufferedReader"}, {"IdentifierName": "EndOfStream"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "OR", "right": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "contains"}, "arguments": [{"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "env"}}]}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "env"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "getSubnodeIndex"}, "arguments": [{"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "env"}}, {"name": {"identifier": "centrex"}}, {"name": {"identifier": "centrey"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "subnode"}}}, "value": {"name": {"identifier": "node"}}}}]}, "elseStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "childNode"}, "initializer": {"name": {"identifier": "createSubnode"}, "arguments": [{"name": {"identifier": "index"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "childNode"}}, "name": {"identifier": "insertNode"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "subnode"}}}, "value": {"name": {"identifier": "childNode"}}}}]}, "condition": {"operator": "EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "level"}}}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "level"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "_env"}, {"NullLiteralExpression": "null"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_env"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Envelope"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSubnodeIndex"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "_env"}]}]}, {"Argument": [{"IdentifierName": "_centreX"}]}, {"Argument": [{"IdentifierName": "_centreY"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "_level"}]}, {"SubtractExpression": [{"IdentifierName": "_level"}, {"NumericLiteralExpression": "1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "node"}]}]}, {"ElseClause": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSubnode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childNode"}, {"IdentifierName": "InsertNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "childNode"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkIntersection"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "4348433.262114629"}, {"value": "5552595.478385733"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "4348440.849387404"}, {"value": "5552599.272022122"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "4348433.26211463"}, {"value": "5552595.47838573"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "4348440.8493874"}, {"value": "5552599.27202212"}]}]}}, {"value": "1"}, {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "4348440.8493874"}, {"value": "5552599.27202212"}]}]}}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckIntersection"}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4348433.262114629"}]}, {"Argument": [{"NumericLiteralExpression": "5552595.478385733"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4348440.849387404"}]}, {"Argument": [{"NumericLiteralExpression": "5552599.272022122"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4348433.26211463"}]}, {"Argument": [{"NumericLiteralExpression": "5552595.47838573"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4348440.8493874"}]}, {"Argument": [{"NumericLiteralExpression": "5552599.27202212"}]}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4348440.8493874"}]}, {"Argument": [{"NumericLiteralExpression": "5552599.27202212"}]}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "comp"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "AND", "right": {"operator": "LESS", "right": {"name": {"identifier": "n"}}, "left": {"name": {"identifier": "i"}}}, "left": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "comp"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "NumGeometries"}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "n"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "comp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tokens"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}, {"Argument": [{"IdentifierName": "hasZ"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hasZ"}]}, {"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "BoundaryOp"}}, "name": {"identifier": "getBoundary"}, "arguments": [{"name": {"identifier": "g"}}, {"scope": {"name": {"identifier": "BoundaryNodeRule"}}, "name": {"identifier": "MOD2_BOUNDARY_RULE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryOp"}, {"IdentifierName": "GetBoundary"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryNodeRules"}, {"IdentifierName": "Mod2BoundaryRule"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "nss"}, "initializer": {"type": {"name": {"identifier": "NodedSegmentString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "nss"}}, "name": {"identifier": "size"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"scope": {"name": {"identifier": "nss"}}, "name": {"identifier": "getNodeList"}}, "name": {"identifier": "getSplitCoordinates"}}}]}}, {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "pts"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "segStrings"}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nss"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}, {"ContinueStatement": "continue;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nss"}, {"IdentifierName": "NodeList"}]}, {"IdentifierName": "GetSplitCoordinates"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"scope": {"name": {"identifier": "Octant"}}, "name": {"identifier": "octant"}, "arguments": [{"name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "index"}}]}, {"name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "index"}}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "index"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Octants"}, {"IdentifierName": "Null"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Octant"}, {"IdentifierName": "GetOctant"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MultiLineString"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiLineString"}, "arguments": [{}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isClosed"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateMultiLineString"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsClosed"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "remGeom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "snapGeom"}, "initializer": {"scope": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "snap"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "remGeom"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "remGeom"}}}, {"name": {"identifier": "snapTolerance"}}]}}]}}, {"expression": {"name": {"identifier": "snapGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometrySnapper"}, {"IdentifierName": "Snap"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "remGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "remGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"IdentifierName": "_snapTolerance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"scope": {"name": {"identifier": "vertex"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_vertex"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dest"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChainOverlapAction"}}, "name": {"identifier": "overlapAction"}, "initializer": {"type": {"name": {"identifier": "SegmentOverlapAction"}}, "arguments": [{"name": {"identifier": "segInt"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "queryChain"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "overlapChains"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryChain"}}, "name": {"identifier": "getEnvelope"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "testChain"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "queryChain"}}, "name": {"identifier": "computeOverlaps"}, "arguments": [{"name": {"identifier": "testChain"}}, {"name": {"identifier": "overlapAction"}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "isDone"}}}]}, "compare": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "j"}, "initializer": {"scope": {"name": {"identifier": "overlapChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "monoChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MonotoneChainOverlapAction"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentOverlapAction"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segmentIntersector"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "monoChains"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryChain"}, {"IdentifierName": "Envelope"}]}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "overlapChains"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryChain"}, {"IdentifierName": "ComputeOverlaps"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testChain"}]}, {"Argument": [{"IdentifierName": "overlapAction"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segmentIntersector"}, {"IdentifierName": "IsDone"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "bdyNodes"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isBoundaryPointInternal"}, "arguments": [{"name": {"identifier": "li"}}, {"index": {"value": "0"}, "name": {"name": {"identifier": "bdyNodes"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isBoundaryPointInternal"}, "arguments": [{"name": {"identifier": "li"}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "bdyNodes"}}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"IdentifierName": "bdyNodes"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "IsIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "labelIsolatedEdge"}, "arguments": [{"name": {"identifier": "e"}}, {"name": {"identifier": "targetIndex"}}, {"scope": {"index": {"name": {"identifier": "targetIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}]}}, {"expression": {"scope": {"name": {"identifier": "isolatedEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "condition": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isIsolated"}}}]}, "compare": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "ei"}, "initializer": {"scope": {"index": {"name": {"identifier": "thisIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getEdgeIterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "thisIndex"}]}]}]}, {"IdentifierName": "Edges"}]}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsIsolated"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LabelIsolatedEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}]}]}, {"IdentifierName": "Geometry"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_isolatedEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compose"}, "arguments": [{"name": {"identifier": "shearInstance"}, "arguments": [{"name": {"identifier": "xShear"}}, {"name": {"identifier": "yShear"}}]}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compose"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ShearInstance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xShear"}]}, {"Argument": [{"IdentifierName": "yShear"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "y"}}}}}, "left": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "x"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Y"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "selected"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "selected"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "condition": {"scope": {"name": {"identifier": "pred"}}, "name": {"identifier": "isTrue"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "selected"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "predicate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "selected"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "selected"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "FLOATING"}}, "left": {"name": {"identifier": "modelType"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "makePrecise"}, "arguments": [{"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "makePrecise"}, "arguments": [{"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_modelType"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModels"}, {"IdentifierName": "Floating"}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"InvocationExpression": [{"IdentifierName": "MakePrecise"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"InvocationExpression": [{"IdentifierName": "MakePrecise"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkEndPtVertexIntersections"}}}, {"expression": {"name": {"identifier": "checkInteriorIntersections"}}}, {"expression": {"name": {"identifier": "checkCollapses"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEndPtVertexIntersections"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInteriorIntersections"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckCollapses"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"name": {"identifier": "ring"}}}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IPolygon"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "g"}]}]}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ring"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "holePolys"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "GeometryFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "hole"}, "initializer": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}, {}]}}]}}, {"expression": {"scope": {"name": {"identifier": "holePolys"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "hole"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}}]}]}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "holePolys"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "InternalGeometryFilterImpl"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holePolys"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holePolys"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "size"}, "initializer": {"scope": {"name": {"identifier": "dis"}}, "name": {"identifier": "readInt"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "readCoordinateSequenceLineString"}, "arguments": [{"name": {"identifier": "size"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryServices"}, {"IdentifierName": "CreateGeometryFactory"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_precisionModel"}]}, {"Argument": [{"IdentifierName": "srid"}]}, {"Argument": [{"IdentifierName": "_sequenceFactory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "ReadInt32"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReadCoordinateSequenceLineString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "numPoints"}]}, {"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sequence"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "Envelope"}}}}]}, "condition": {"name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "expandEnvelope"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "IsEmpty"}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Y"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Y"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minx"}, {"ConditionalExpression": [{"LessThanExpression": [{"IdentifierName": "minx"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "X"}]}]}, {"IdentifierName": "minx"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "X"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "maxx"}, {"ConditionalExpression": [{"GreaterThanExpression": [{"IdentifierName": "maxx"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "X"}]}]}, {"IdentifierName": "maxx"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "X"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "miny"}, {"ConditionalExpression": [{"LessThanExpression": [{"IdentifierName": "miny"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Y"}]}]}, {"IdentifierName": "miny"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Y"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "maxy"}, {"ConditionalExpression": [{"GreaterThanExpression": [{"IdentifierName": "maxy"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Y"}]}]}, {"IdentifierName": "maxy"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "minx"}]}, {"Argument": [{"IdentifierName": "maxx"}]}, {"Argument": [{"IdentifierName": "miny"}]}, {"Argument": [{"IdentifierName": "maxy"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistance"}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "nearestPts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "name": {"identifier": "getCoordinate"}}]}}}]}}, {"expression": {"name": {"identifier": "nearestPts"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "nearestPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "xdd"}, "initializer": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"name": {"identifier": "x"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "rr"}, "initializer": {"scope": {"scope": {"name": {"identifier": "xdd"}}, "name": {"identifier": "reciprocal"}}, "name": {"identifier": "reciprocal"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "err"}, "initializer": {"scope": {"scope": {"name": {"identifier": "xdd"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "rr"}}]}, "name": {"identifier": "doubleValue"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS_EQUALS", "right": {"name": {"identifier": "errBound"}}, "left": {"name": {"identifier": "err"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "xdd"}, {"IdentifierName": "Reciprocal"}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "Reciprocal"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "xdd"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rr"}]}]}]}, {"IdentifierName": "ToDoubleValue"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LessThanOrEqualExpression": [{"IdentifierName": "err"}, {"IdentifierName": "errBound"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"name": {"identifier": "item"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "item"}}]}}, "condition": {"scope": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "querySeg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "querySeg"}}, "name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "item"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Envelope"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_querySeg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_querySeg"}, {"IdentifierName": "P1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_items"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "bufParams"}, "initializer": {"type": {"name": {"identifier": "BufferParameters"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "setJoinStyle"}, "arguments": [{"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "JOIN_MITRE"}}]}}, {"expression": {"scope": {"name": {"identifier": "BufferOp"}}, "name": {"identifier": "bufferOp"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "bufParams"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "BufferParameters"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferParameters"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufParams"}, {"IdentifierName": "JoinStyle"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "JoinStyle"}, {"IdentifierName": "Mitre"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferOp"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "bufParams"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeConvexHull"}}}, {"expression": {"name": {"identifier": "insertSites"}, "arguments": [{"name": {"identifier": "segVertices"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeConvexHull"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertSites"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segVertices"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}]}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}]}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "z"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "2"}]}}}, "condition": {"operator": "GREATER", "right": {"value": "2"}, "left": {"name": {"identifier": "dimension"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}, {"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}, {"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xmag"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"scope": {"name": {"identifier": "normal"}}, "name": {"identifier": "getX"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ymag"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"scope": {"name": {"identifier": "normal"}}, "name": {"identifier": "getY"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "zmag"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"scope": {"name": {"identifier": "normal"}}, "name": {"identifier": "getZ"}}]}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "YZ_PLANE"}}}, "elseStmt": {"expression": {"name": {"identifier": "XY_PLANE"}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "zmag"}}, "left": {"name": {"identifier": "xmag"}}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "XY_PLANE"}}}]}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "ymag"}}, "left": {"name": {"identifier": "zmag"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "ymag"}}, "left": {"name": {"identifier": "xmag"}}}}, {"expression": {"name": {"identifier": "XZ_PLANE"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_normal"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_normal"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_normal"}, {"IdentifierName": "Z"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "xmag"}, {"IdentifierName": "ymag"}]}, {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "xmag"}, {"IdentifierName": "zmag"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Plane"}, {"IdentifierName": "YZ"}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Plane"}, {"IdentifierName": "XY"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "zmag"}, {"IdentifierName": "ymag"}]}, {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Plane"}, {"IdentifierName": "XY"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Plane"}, {"IdentifierName": "XZ"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"name": {"identifier": "dx"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"name": {"identifier": "dy"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"IdentifierName": "dx"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"IdentifierName": "dy"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "geometryChangedAction"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GeometryChangedAction"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "getNodedSubstrings"}, "arguments": [{"name": {"identifier": "nodedSegStrings"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_nodedSegStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "simpLines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "lines"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"scope": {"name": {"identifier": "simpLines"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "BufferInputLineSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "distance"}}]}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "simpGeom"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "simpLines"}}]}}]}}, {"expression": {"name": {"identifier": "simpGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "lines"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "simpLines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferInputLineSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "simpLines"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "simpGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MarkHalfEdge"}}, "expression": {"name": {"identifier": "e"}}}}, "name": {"identifier": "mark"}}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MarkHalfEdge"}}, "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}}}, "name": {"identifier": "mark"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "e"}]}]}, {"IdentifierName": "Mark"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "MarkHalfEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}]}]}, {"IdentifierName": "Mark"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "locator"}}, "value": {"name": {"identifier": "locator"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_locator"}, {"IdentifierName": "locator"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Stopwatch"}}, "name": {"identifier": "sw"}, "initializer": {"type": {"name": {"identifier": "Stopwatch"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "runBuffer"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dist"}}]}}, {"expression": {"name": {"identifier": "runBuffer"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "reverse"}}, {"name": {"identifier": "dist"}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}, {"thenStmt": {}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "MAX_FEATURE"}}, "left": {"name": {"identifier": "count"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Stopwatch"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Stopwatch"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sw"}, {"IdentifierName": "Start"}]}, {"ArgumentList": "()"}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunBuffer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sw"}, {"IdentifierName": "Stop"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RotatedRectangleFactory"}}, "name": {"identifier": "rrFact"}, "initializer": {"type": {"name": {"identifier": "RotatedRectangleFactory"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "basex"}, "initializer": {"operator": "MINUS", "right": {"inner": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"name": {"identifier": "MAX_DISPLACEMENT"}}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "MAX_DISPLACEMENT"}}, "left": {"name": {"identifier": "angle2"}}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "base"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "basex"}}, {"name": {"identifier": "basex"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "rr1"}, "initializer": {"scope": {"name": {"identifier": "rrFact"}}, "name": {"identifier": "createRectangle"}, "arguments": [{"value": "100"}, {"value": "20"}, {"name": {"identifier": "angle1"}}, {"name": {"identifier": "base"}}]}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "geomCount"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomCount"}}, "value": {"value": "0"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "BATCH_SIZE"}}, "left": {"name": {"identifier": "geomCount"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "baseAccum"}}, "value": {}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "geomCount"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "baseAccum"}}, "value": {"name": {"identifier": "rr1"}}}}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "baseAccum"}}, "value": {"scope": {"name": {"identifier": "rr1"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "baseAccum"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "baseAccum"}}}}, {"expression": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "baseAccum"}}, {"name": {"identifier": "rr1"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RotatedRectangleFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "angle2"}, {"IdentifierName": "MAX_DISPLACEMENT"}]}, {"ParenthesizedExpression": [{"DivideExpression": [{"IdentifierName": "MAX_DISPLACEMENT"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "basex"}]}, {"Argument": [{"IdentifierName": "basex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rrFact"}, {"IdentifierName": "CreateRectangle"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"IdentifierName": "angle1"}]}, {"Argument": [{"IdentifierName": "baseCoord"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_geomCount"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_geomCount"}, {"IdentifierName": "BATCH_SIZE"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_geomCount"}, {"NumericLiteralExpression": "0"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_geomCount"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_baseAccum"}, {"NullLiteralExpression": "null"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_baseAccum"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_baseAccum"}, {"IdentifierName": "rr1"}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_baseAccum"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rr1"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_baseAccum"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "_baseAccum"}, {"IdentifierName": "rr1"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss1"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "mc1"}}, "name": {"identifier": "getContext"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss2"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "mc2"}}, "name": {"identifier": "getContext"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "processIntersections"}, "arguments": [{"name": {"identifier": "ss1"}}, {"name": {"identifier": "start1"}}, {"name": {"identifier": "ss2"}}, {"name": {"identifier": "start2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ISegmentString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mc1"}, {"IdentifierName": "Context"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ISegmentString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mc2"}, {"IdentifierName": "Context"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_si"}, {"IdentifierName": "ProcessIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss1"}]}, {"Argument": [{"IdentifierName": "start1"}]}, {"Argument": [{"IdentifierName": "ss2"}]}, {"Argument": [{"IdentifierName": "start2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "deStar"}}, "name": {"identifier": "getIndex"}, "arguments": [{"name": {"identifier": "edge"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "deStar"}, {"IdentifierName": "GetIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "isInResult"}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"name": {"identifier": "getEdges"}}, "name": {"identifier": "getEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Edges"}, {"IdentifierName": "Edges"}]}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "IsInResult"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "polygonize"}}}, {"expression": {"name": {"identifier": "invalidRingLines"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Polygonize"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_invalidRingLines"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "intersectingEnvelopes"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "candidate"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "intersectingEnvelopes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "candidate"}}]}}]}, "condition": {"scope": {"name": {"identifier": "candidate"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "queryEnvelope"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "envelopes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "intersectingEnvelopes"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "envelopes"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "candidate"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "queryEnvelope"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intersectingEnvelopes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "candidate"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "intersectingEnvelopes"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentIntersector"}}, "name": {"identifier": "si"}, "initializer": {"type": {"name": {"identifier": "SegmentIntersector"}}, "arguments": [{"name": {"identifier": "li"}}, {"name": {"identifier": "includeProper"}}, {"value": "true"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "setBoundaryNodes"}, "arguments": [{"scope": {}, "name": {"identifier": "getBoundaryNodes"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getBoundaryNodes"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeSetIntersector"}}, "name": {"identifier": "esi"}, "initializer": {"name": {"identifier": "createEdgeSetIntersector"}}}]}}, {"expression": {"scope": {"name": {"identifier": "esi"}}, "name": {"identifier": "computeIntersections"}, "arguments": [{"name": {"identifier": "edges"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "edges"}}, {"name": {"identifier": "si"}}]}}, {"expression": {"name": {"identifier": "si"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SegmentIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentIntersector"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}, {"Argument": [{"IdentifierName": "includeProper"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "SetBoundaryNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "BoundaryNodes"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "BoundaryNodes"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeSetIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateEdgeSetIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "esi"}, {"IdentifierName": "ComputeIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Edges"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Edges"}]}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "si"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "get"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "ON"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "Get"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "On"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "geometryChangedFilter"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Apply"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryChangedFilter"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "bdyNodes"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "bdyNodes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "geomIndex"}}]}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "bdyNodes"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeMap"}, {"IdentifierName": "Values"}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bdyNodes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "bdyNodes"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "addCommonBits"}, "arguments": [{"name": {"identifier": "geom"}}]}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbr"}, {"IdentifierName": "AddCommonBits"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "buf"}}}, "value": {"scope": {"name": {"identifier": "WKBConstants"}}, "name": {"identifier": "wkbNDR"}}}}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "buf"}}}, "value": {"scope": {"name": {"identifier": "WKBConstants"}}, "name": {"identifier": "wkbXDR"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "ByteOrderValues"}}, "name": {"identifier": "LITTLE_ENDIAN"}}, "left": {"name": {"identifier": "byteOrder"}}}}, {"expression": {"scope": {"name": {"identifier": "os"}}, "name": {"identifier": "write"}, "arguments": [{"name": {"identifier": "buf"}}, {"value": "1"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "writer"}, {"IdentifierName": "Write"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "byte"}, {"IdentifierName": "EncodingType"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "OR", "right": {"name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "other"}}, {"value": "0"}]}, "left": {"operator": "EQUALS", "right": {"name": {"identifier": "other"}}, "left": {}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReferenceEquals"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "other"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LogicalOrExpression": [{"IdentifierName": "sameref"}, {"InvocationExpression": [{"IdentifierName": "EqualsExact"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts0"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HotPixel"}}, "name": {"identifier": "hotPixel"}, "initializer": {"type": {"name": {"identifier": "HotPixel"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts0"}}}, {"name": {"identifier": "scaleFactor"}}, {"name": {"identifier": "li"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isNodeAdded"}, "initializer": {"scope": {"name": {"identifier": "pointSnapper"}}, "name": {"identifier": "snap"}, "arguments": [{"name": {"identifier": "hotPixel"}}, {"name": {"identifier": "e"}}, {"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "addIntersection"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts0"}}}, {"name": {"identifier": "i"}}]}}]}, "condition": {"name": {"identifier": "isNodeAdded"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts0"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts0"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HotPixel"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts0"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "_scaleFactor"}]}, {"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pointSnapper"}, {"IdentifierName": "Snap"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hotPixel"}]}, {"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isNodeAdded"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "AddIntersection"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts0"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputStr"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "testPoint"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "testPtWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "testPt"}, "initializer": {"scope": {"name": {"identifier": "testPoint"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "afterPoint"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "afterPtWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "afterPt"}, "initializer": {"scope": {"name": {"identifier": "afterPoint"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "resultOK"}, "initializer": {"name": {"identifier": "indexOfAfterCheck"}, "arguments": [{"name": {"identifier": "input"}}, {"name": {"identifier": "testPt"}}, {"name": {"identifier": "afterPt"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "resultOK"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputStr"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPtWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testPoint"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IndexOfAfterCheck"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}, {"Argument": [{"IdentifierName": "testPt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultOk"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "setLocation"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "ON"}}, {"name": {"identifier": "locValue"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetLocation"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "On"}]}]}, {"Argument": [{"IdentifierName": "locValue"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "segs"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_segs"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "component"}, {"IdentifierName": "ILineString"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_container"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "component"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktInput"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "envGeomExpected"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktEnvGeomExpected"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "envGeomActual"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"name": {"identifier": "env"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"scope": {"name": {"identifier": "envGeomActual"}}, "name": {"identifier": "equalsNorm"}, "arguments": [{"name": {"identifier": "envGeomExpected"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktInput"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktEnvGeomExpected"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "input"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envGeomActual"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "envGeomExpected"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isEqual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "temp"}, "initializer": {"name": {"identifier": "p0"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "p0"}}, "value": {"name": {"identifier": "p1"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "p1"}}, "value": {"name": {"identifier": "temp"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "_p0"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "_p1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "temp"}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMessage"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "ParseException"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "GeoAPI"}, {"IdentifierName": "IO"}]}, {"IdentifierName": "ParseException"}]}]}, {"Block": [{"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AssertionException"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Message"}]}]}, {"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"operator": "OR", "right": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "intPt"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"value": "1"}, "name": {"index": {"name": {"identifier": "inputLineIndex"}}, "name": {"name": {"identifier": "inputLines"}}}}]}, "left": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "intPt"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"value": "0"}, "name": {"index": {"name": {"identifier": "inputLineIndex"}}, "name": {"name": {"identifier": "inputLines"}}}}]}}}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "result"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Result"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"LogicalOrExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "inputLineIndex"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "inputLineIndex"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "x"}}}, {"operator": "MINUS", "expression": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_x"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segChains"}, "initializer": {"scope": {"name": {"identifier": "MonotoneChainBuilder"}}, "name": {"identifier": "getChains"}, "arguments": [{"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "getCoordinates"}}, {"name": {"identifier": "segStr"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "mc"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "monoChains"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "mc"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MonotoneChainBuilder"}, {"IdentifierName": "GetChains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"IdentifierName": "segStr"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segChains"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "monotoneChains"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mc"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getPolygons"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "ArrayList"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetPolygons"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.0"}, {"value": "200.0"}, {"value": "50.0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "clone"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "clone"}}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "equals3D"}, "arguments": [{"name": {"identifier": "clone"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "200.0"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Equals3D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "clone"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "collectStats"}, "arguments": [{"name": {"identifier": "itemEnv"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "insertEnv"}, "initializer": {"name": {"identifier": "ensureExtent"}, "arguments": [{"name": {"identifier": "itemEnv"}}, {"name": {"identifier": "minExtent"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "insertEnv"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CollectStats"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnsureExtent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}, {"Argument": [{"IdentifierName": "_minExtent"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "insertEnv"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "cmp12"}, "initializer": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "seg2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "cmp21"}, "initializer": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "seg1"}}]}}]}}, {"expression": {"operator": "EQUALS", "right": {"operator": "MINUS", "expression": {"name": {"identifier": "cmp21"}}}, "left": {"name": {"identifier": "cmp12"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"EqualsExpression": [{"IdentifierName": "cmp12"}, {"UnaryMinusExpression": [{"IdentifierName": "cmp21"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "toCoordinateArray"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "array"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ls"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "ll"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "index"}, "initializer": {"scope": {"name": {"identifier": "ll"}}, "name": {"identifier": "project"}, "arguments": [{"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"scope": {"name": {"identifier": "ll"}}, "name": {"identifier": "extractPoint"}, "arguments": [{"name": {"identifier": "index"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ll"}, {"IdentifierName": "Project"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ll"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "StringBuffer"}}, "name": {"identifier": "buf"}, "initializer": {"type": {"name": {"identifier": "StringBuffer"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "BYTE"}, "name": {"identifier": "b"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "bytes"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "toHexDigit"}, "arguments": [{"operator": "BINARY_AND", "right": {"value": "0x0F"}, "left": {"inner": {"operator": "SIGNED_RIGHT_SHIFT", "right": {"value": "4"}, "left": {"name": {"identifier": "b"}}}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "toHexDigit"}, "arguments": [{"operator": "BINARY_AND", "right": {"value": "0x0F"}, "left": {"name": {"identifier": "b"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "bytes"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringBuilder"}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bytes"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "bytes"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "byte"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "bytes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buf"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToHexDigit"}, {"ArgumentList": [{"Argument": [{"BitwiseAndExpression": [{"ParenthesizedExpression": [{"RightShiftExpression": [{"IdentifierName": "b"}, {"NumericLiteralExpression": "4"}]}]}, {"NumericLiteralExpression": "0x0F"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buf"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToHexDigit"}, {"ArgumentList": [{"Argument": [{"BitwiseAndExpression": [{"IdentifierName": "b"}, {"NumericLiteralExpression": "0x0F"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buf"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "inputPt"}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "minIndex"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "endLoc"}, "initializer": {"scope": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "getEndLocation"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "endLoc"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "endLoc"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "minIndex"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "closestAfter"}, "initializer": {"name": {"identifier": "indexOfFromStart"}, "arguments": [{"name": {"identifier": "inputPt"}}, {"name": {"identifier": "minIndex"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "closestAfter"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "minIndex"}}]}}, {"value": "computed location is before specified minimum location"}]}}, {"expression": {"name": {"identifier": "closestAfter"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexOfPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locater"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}, {"Argument": [{"IdentifierName": "minIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiLineString"}}}, "name": {"identifier": "multiLineStringArray"}, "initializer": {"elementType": {"name": {"identifier": "MultiLineString"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "multiLineStrings"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiLineString"}}}, "expression": {"scope": {"name": {"identifier": "multiLineStrings"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "multiLineStringArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IMultiLineString"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IMultiLineString"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "multiLineStrings"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IMultiLineString"}, {"IdentifierName": "multiLineStrings"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "mls"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"type": {"type": "INT"}}, "left": {"name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "name"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetGeometryReturnType"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}]}]}, {"TypeOfExpression": [{"PredefinedType": "int"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}, "arguments": [{"type": {"name": {"identifier": "IntersectionAdder"}}, "arguments": [{"type": {"name": {"identifier": "RobustLineIntersector"}}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getNodedSubstrings"}}, {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "INoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "IntersectionAdder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"scope": {"name": {"identifier": "numberFormatter"}}, "name": {"identifier": "format"}, "arguments": [{"name": {"identifier": "num"}}]}]}}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "num"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "numberFormatter"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "string"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "d"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_format"}]}, {"Argument": [{"IdentifierName": "_formatter"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tos"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "posIndex"}, "initializer": {"name": {"identifier": "positiveIndex"}, "arguments": [{"name": {"identifier": "index"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "startIndex"}, "initializer": {"name": {"identifier": "getStartIndex"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "startIndex"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "startIndex"}}, "left": {"name": {"identifier": "posIndex"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "endIndex"}, "initializer": {"name": {"identifier": "getEndIndex"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "endIndex"}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "endIndex"}}, "left": {"name": {"identifier": "posIndex"}}}}, {"expression": {"name": {"identifier": "posIndex"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "PositiveIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "StartIndex"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "posIndex"}, {"IdentifierName": "startIndex"}]}, {"ReturnStatement": [{"IdentifierName": "startIndex"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "EndIndex"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "posIndex"}, {"IdentifierName": "endIndex"}]}, {"ReturnStatement": [{"IdentifierName": "endIndex"}]}]}, {"ReturnStatement": [{"IdentifierName": "posIndex"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "subnode"}}}, "value": {"name": {"identifier": "createSubnode"}, "arguments": [{"name": {"identifier": "index"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "subnode"}}}}}, {"expression": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "subnode"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "CreateSubnode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "dirEdge"}}, "value": {}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "dirEdge"}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "buildIndex"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "OverlapAction"}}, "name": {"identifier": "action"}, "initializer": {"type": {"name": {"identifier": "OverlapAction"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "sweepLine"}}, "name": {"identifier": "computeOverlaps"}, "arguments": [{"name": {"identifier": "action"}}]}}, {"expression": {"scope": {"name": {"identifier": "action"}}, "name": {"identifier": "isNonNested"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildIndex"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "OverlapAction"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OverlapAction"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sweepLine"}, {"IdentifierName": "ComputeOverlaps"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "action"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "action"}, {"IdentifierName": "IsNonNested"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Distance"}}, "name": {"identifier": "pointToLinePerpendicular"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "DistancePointLinePerpendicular"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SpatialIndexTester"}}, "name": {"identifier": "tester"}, "initializer": {"type": {"name": {"identifier": "SpatialIndexTester"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "setSpatialIndex"}, "arguments": [{"type": {"name": {"identifier": "STRtree"}}, "arguments": [{"value": "4"}]}]}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "init"}}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "run"}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "isSuccess"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SpatialIndexTester"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "SpatialIndex"}, {"ObjectCreationExpression": [{"IdentifierName": "STRtree"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "Init"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "IsSuccess"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"type": "INT"}, "expression": {"inner": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"name": {"identifier": "max"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rnd"}, {"IdentifierName": "Next"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "max"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "bitIndex"}, "initializer": {"operator": "PLUS", "right": {"value": "12"}, "left": {"name": {"identifier": "i"}}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "i"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "db"}}, "name": {"identifier": "getBit"}, "arguments": [{"name": {"identifier": "i"}}]}, "left": {"name": {"identifier": "getBit"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "compare": {"operator": "LESS", "right": {"value": "52"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "52"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "52"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetBit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db"}, {"IdentifierName": "GetBit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "52"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "locatePointInPolygon"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "poly"}}]}, "left": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsPointInRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "shell"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsPointInRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "hole"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "findCoveredLineEdges"}}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"scope": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getGraph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isCovered"}, "initializer": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "isCoveredByA"}, "arguments": [{"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "setCovered"}, "arguments": [{"name": {"identifier": "isCovered"}}]}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isCoveredSet"}}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isLineEdge"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getGraph"}}, "name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "Graph"}]}, {"IdentifierName": "Nodes"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "FindCoveredLineEdges"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "Graph"}]}, {"IdentifierName": "EdgeEnds"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsLineEdge"}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsCoveredSet"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "IsCoveredByA"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Covered"}]}, {"IdentifierName": "isCovered"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "distance"}}, "value": {"name": {"identifier": "distance"}}}}, {"expression": {"name": {"identifier": "computeGeometry"}}}, {"expression": {"name": {"identifier": "resultGeometry"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "distance"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeGeometry"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_resultGeometry"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"value": "0"}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "dist"}}, "value": {"scope": {"name": {"identifier": "distance"}}, "name": {"identifier": "doubleValue"}}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "distance"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "bufParams"}, "initializer": {"type": {"name": {"identifier": "BufferParameters"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "setSimplifyFactor"}, "arguments": [{"scope": {"name": {"identifier": "simplifyFactor"}}, "name": {"identifier": "doubleValue"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "simplifyFactor"}}}}, {"expression": {"scope": {"name": {"identifier": "BufferOp"}}, "name": {"identifier": "bufferOp"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dist"}}, {"name": {"identifier": "bufParams"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "distance"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "dist"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "distance"}, {"IdentifierName": "Value"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IBufferParameters"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferParameters"}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "simplifyFactor"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufParams"}, {"IdentifierName": "SimplifyFactor"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "simplifyFactor"}, {"IdentifierName": "Value"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferOp"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "dist"}]}, {"Argument": [{"IdentifierName": "bufParams"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Subgraph"}}, "name": {"identifier": "subgraph"}, "initializer": {"type": {"name": {"identifier": "Subgraph"}}, "arguments": [{"name": {"identifier": "graph"}}]}}]}}, {"expression": {"name": {"identifier": "addReachable"}, "arguments": [{"name": {"identifier": "node"}}, {"name": {"identifier": "subgraph"}}]}}, {"expression": {"name": {"identifier": "subgraph"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Subgraph"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Subgraph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddReachable"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}, {"Argument": [{"IdentifierName": "subgraph"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "subgraph"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "x2"}}, "left": {"name": {"identifier": "x1"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "x1"}, {"IdentifierName": "x2"}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "testGeoms"}, "initializer": {"name": {"identifier": "getTestGeometries"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "testGeom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentDensifier"}}, "name": {"identifier": "densifier"}, "initializer": {"type": {"name": {"identifier": "SegmentDensifier"}}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "testGeom"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "denseLine"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "densifier"}}, "name": {"identifier": "densify"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "400"}, "left": {"name": {"identifier": "testGeomSize"}}}]}}}]}}, {"expression": {"name": {"identifier": "runRectanglePredicates"}, "arguments": [{"name": {"identifier": "rect"}}, {"name": {"identifier": "denseLine"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "testGeoms"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "getTestGeometries"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "testGeoms"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SegmentDensifier"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentDensifier"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "LineString"}, {"IdentifierName": "testGeom"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "densifier"}, {"IdentifierName": "Densify"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"IdentifierName": "testGeomSize"}, {"NumericLiteralExpression": "400"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "runRectanglePredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rect"}]}, {"Argument": [{"IdentifierName": "denseLine"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "LineString"}}, "arguments": [{"name": {"identifier": "coordinates"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LineString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isMarked"}}, "value": {"value": "true"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Marked"}, {"TrueLiteralExpression": "true"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "maxEdgeRings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaximalEdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "MaximalEdgeRing"}}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "geometryFactory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "maxEdgeRings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}, {"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "setInResult"}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdgeRing"}}}}]}, "condition": {"operator": "AND", "right": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "isArea"}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInResult"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "maxEdgeRings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "dirEdges"}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInResult"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "IsArea"}]}, {"ArgumentList": "()"}]}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "EdgeRing"}]}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaximalEdgeRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "_geometryFactory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "maxEdgeRings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "SetInResult"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "maxEdgeRings"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "name": {"identifier": "lineStringArray"}, "initializer": {"elementType": {"name": {"identifier": "LineString"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "lineStrings"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "expression": {"scope": {"name": {"identifier": "lineStrings"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "lineStringArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILineString"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ILineString"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineStrings"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lineStrings"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "ls"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "sweepLine"}}, "value": {"type": {"name": {"identifier": "SweepLineIndex"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineInterval"}}, "name": {"identifier": "sweepInt"}, "initializer": {"type": {"name": {"identifier": "SweepLineInterval"}}, "arguments": [{"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinX"}}, {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMaxX"}}, {"name": {"identifier": "ring"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "sweepLine"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "sweepInt"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "sweepLine"}, {"ObjectCreationExpression": [{"IdentifierName": "SweepLineIndex"}, {"ArgumentList": "()"}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"IdentifierName": "rings"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineInterval"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineInterval"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MaxX"}]}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sweepLine"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sweepInt"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "graph"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IdentifierName": "graph"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lineSegStr"}, "initializer": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentIntersectionDetector"}}, "name": {"identifier": "intDetector"}, "initializer": {"type": {"name": {"identifier": "SegmentIntersectionDetector"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "intDetector"}}, "name": {"identifier": "setFindAllIntersectionTypes"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getIntersectionFinder"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "lineSegStr"}}, {"name": {"identifier": "intDetector"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hasSegmentIntersection"}}, "value": {"scope": {"name": {"identifier": "intDetector"}}, "name": {"identifier": "hasIntersection"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hasProperIntersection"}}, "value": {"scope": {"name": {"identifier": "intDetector"}}, "name": {"identifier": "hasProperIntersection"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hasNonProperIntersection"}}, "value": {"scope": {"name": {"identifier": "intDetector"}}, "name": {"identifier": "hasNonProperIntersection"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentIntersectionDetector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intDetector"}, {"IdentifierName": "FindAllIntersectionTypes"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "IntersectionFinder"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineSegStr"}]}, {"Argument": [{"IdentifierName": "intDetector"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_hasSegmentIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "intDetector"}, {"IdentifierName": "HasIntersection"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_hasProperIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "intDetector"}, {"IdentifierName": "HasProperIntersection"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_hasNonProperIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "intDetector"}, {"IdentifierName": "HasNonProperIntersection"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "envelope"}, "arguments": [{"name": {"identifier": "COORDS_EMPTY"}}]}, {"type": {"name": {"identifier": "Envelope"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Envelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Empty"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "snapTolerance"}}, "value": {"scope": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "computeOverlaySnapTolerance"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_snapTolerance"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometrySnapper"}, {"IdentifierName": "ComputeOverlaySnapTolerance"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isWithinDist"}, "initializer": {"scope": {"name": {"identifier": "Distance3DOp"}}, "name": {"identifier": "isWithinDistance"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedResult"}}, {"name": {"identifier": "isWithinDist"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Distance3DOp"}, {"IdentifierName": "IsWithinDistance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedResult"}]}, {"Argument": [{"IdentifierName": "isWithinDist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom0"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomFact"}}, "value": {"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "getFactory"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segStrings"}, "initializer": {"name": {"identifier": "toSegmentStrings"}, "arguments": [{"name": {"identifier": "extractLines"}, "arguments": [{"name": {"identifier": "geoms"}}]}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "sr"}, "initializer": {"type": {"name": {"identifier": "MCIndexSnapRounder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "sr"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "nodedLines"}, "initializer": {"scope": {"name": {"identifier": "sr"}}, "name": {"identifier": "getNodedSubstrings"}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "NodingValidator"}}, "name": {"identifier": "nv"}, "initializer": {"type": {"name": {"identifier": "NodingValidator"}}, "arguments": [{"name": {"identifier": "nodedLines"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "checkValid"}}}]}, "condition": {"name": {"identifier": "isValidityChecked"}}}, {"expression": {"name": {"identifier": "toLineStrings"}, "arguments": [{"name": {"identifier": "nodedLines"}}]}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_geomFact"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}]}]}, {"BreakStatement": "break;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ToSegmentStrings"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ExtractLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "INoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexSnapRounder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sr"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sr"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "IsValidityChecked"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "NodingValidator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "NodingValidator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodedLines"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "CheckValid"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToLineStrings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodedLines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "parentLine"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segs"}}, "value": {"elementType": {"name": {"identifier": "TaggedLineSegment"}}, "levels": [{"dimension": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}]}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "TaggedLineSegment"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, {"name": {"identifier": "parentLine"}}, {"name": {"identifier": "i"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "segs"}}}, "value": {"name": {"identifier": "seg"}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_parentLine"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segs"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "TaggedLineSegment"}, {"ArrayRankSpecifier": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TaggedLineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TaggedLineSegment"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "_parentLine"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_segs"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "seg"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"name": {"identifier": "computeEdgeDistance"}, "arguments": [{"index": {"name": {"identifier": "intIndex"}}, "name": {"name": {"identifier": "intPt"}}}, {"index": {"value": "0"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "inputLines"}}}}, {"index": {"value": "1"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "inputLines"}}}}]}}]}}, {"expression": {"name": {"identifier": "dist"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeEdgeDistance"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "intIndex"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "segmentIndex"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "segmentIndex"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "dist"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "b"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "a"}}}}}, {"expression": {"operator": "OR", "right": {"inner": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "b"}}}, "left": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "a"}}}}}, "left": {"inner": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "b"}}}, "left": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "a"}}}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "a"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "b"}, {"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "a"}, {"NumericLiteralExpression": "0"}]}, {"LessThanExpression": [{"IdentifierName": "b"}, {"NumericLiteralExpression": "0"}]}]}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"GreaterThanExpression": [{"IdentifierName": "a"}, {"NumericLiteralExpression": "0"}]}, {"GreaterThanExpression": [{"IdentifierName": "b"}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "ptInAreaLocation"}}}, "value": {"scope": {"name": {"identifier": "SimplePointInAreaLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}, {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "getGeometry"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}, "left": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "ptInAreaLocation"}}}}}, {"expression": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "ptInAreaLocation"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_ptInAreaLocation"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_ptInAreaLocation"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SimplePointInAreaLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "Geometry"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_ptInAreaLocation"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "createSineStar"}, "arguments": [{"name": {"identifier": "basex"}}, {"name": {"identifier": "basey"}}, {"name": {"identifier": "size"}}, {"name": {"identifier": "armLen"}}, {"name": {"identifier": "nArms"}}, {"name": {"identifier": "nPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "ring"}}, {}]}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSineStar"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "basex"}]}, {"Argument": [{"IdentifierName": "basey"}]}, {"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "armLen"}]}, {"Argument": [{"IdentifierName": "nArms"}]}, {"Argument": [{"IdentifierName": "nPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "checkCollapse"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "2"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckCollapse"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "350.2"}, {"value": "4566.8"}, {"value": "5266.3"}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "X"}}]}, {"value": "350.2"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Y"}}]}, {"value": "4566.8"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Z"}}]}, {"value": "5266.3"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "350.2"}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "350.2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "prepGeom"}, "initializer": {"name": {"identifier": "snap"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "overlayOp"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "prepGeom"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "prepGeom"}}}, {"name": {"identifier": "opCode"}}]}}]}}, {"expression": {"name": {"identifier": "prepareResult"}, "arguments": [{"name": {"identifier": "result"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Snap"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "Overlay"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "prepGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "prepGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"IdentifierName": "opCode"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "PrepareResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intNodes"}, "initializer": {"name": {"identifier": "findIntersectionNodes"}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "label"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "intNodes"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "iNode"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "computeNextCCWEdges"}, "arguments": [{"name": {"identifier": "node"}}, {"name": {"identifier": "label"}}]}}]}, "compare": {"scope": {"name": {"identifier": "iNode"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "iNode"}, "initializer": {"scope": {"name": {"identifier": "intNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "ringEdges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "ringEdges"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindIntersectionNodes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "label"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "intNodes"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "intNodes"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeNextCCWEdges"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}, {"Argument": [{"IdentifierName": "label"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "geomFactory"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}, "arguments": [{"type": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}, "arguments": [{"scope": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}, "name": {"identifier": "DOUBLE"}}, {"value": "2"}]}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "WKTReader"}}, "name": {"identifier": "rdr"}, "initializer": {"type": {"name": {"identifier": "WKTReader"}}, "arguments": [{"name": {"identifier": "geomFactory"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "2"}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "2"}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"IdentifierName": "PackedType"}]}, {"IdentifierName": "Double"}]}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKTReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "factory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getStart"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getEnd"}}}]}}, {"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "x"}}}}}, {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "y"}}}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Start"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "End"}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}, {"NumericLiteralExpression": "2"}]}]}, {"Argument": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "2"}, {"value": "0"}, {"value": "0"}, {"value": "2"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"name": {"identifier": "aBounds"}}}}, "name": {"identifier": "intersects"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "expression": {"name": {"identifier": "bBounds"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "aBounds"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bBounds"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "PreparedGeometryFactory"}}}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"ArgumentList": "()"}]}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "insertEdge"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"name": {"identifier": "insertPoint"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"index": {"value": "0"}, "name": {"name": {"identifier": "coord"}}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}]}}, {"expression": {"name": {"identifier": "insertPoint"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}}, "name": {"name": {"identifier": "coord"}}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argIndex"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argIndex"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "segmentIndex"}}, "left": {"scope": {}, "name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "segmentIndex"}}, "left": {"scope": {}, "name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "dist"}}, "left": {"scope": {}, "name": {"identifier": "dist"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "dist"}}, "left": {"scope": {}, "name": {"identifier": "dist"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentIndex"}, {"IdentifierName": "segmentIndex"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_segmentIndex"}, {"IdentifierName": "segmentIndex"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "dist"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "dist"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "comp"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "computeSimple"}, "arguments": [{"name": {"identifier": "comp"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "ComputeSimple"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "comp"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isInCircleDD"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "c"}}, {"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsInCircleDD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "c"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "testGeoms"}, "initializer": {"name": {"identifier": "getTestGeometries"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "testGeom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "runRectanglePredicates"}, "arguments": [{"name": {"identifier": "rect"}}, {"scope": {"name": {"identifier": "testGeom"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "bufferWidth"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "testGeoms"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "getTestGeometries"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "testGeoms"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "runRectanglePredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rect"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testGeom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferWidth"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "obj"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "obj"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "count"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "obj"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "obj"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "count"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "count"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "DIVIDE", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "y"}}}, {"operator": "DIVIDE", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "z"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "d"}]}]}, {"Argument": [{"DivideExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "d"}]}]}, {"Argument": [{"DivideExpression": [{"IdentifierName": "_z"}, {"IdentifierName": "d"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"scope": {"scope": {"scope": {"name": {"identifier": "bx"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ax"}}]}, "name": {"identifier": "multiply"}, "arguments": [{"scope": {"name": {"identifier": "cy"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ay"}}]}]}, "name": {"identifier": "subtract"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "by"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ay"}}]}, "name": {"identifier": "multiply"}, "arguments": [{"scope": {"name": {"identifier": "cx"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ax"}}]}]}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bx"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ax"}]}]}]}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cy"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ay"}]}]}]}]}]}]}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "by"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ay"}]}]}]}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cx"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ax"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "randNum"}, "initializer": {"name": {"identifier": "getRand"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ord"}, "initializer": {"scope": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "getPrecisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "gridWidth"}}, "left": {"name": {"identifier": "randNum"}}}]}}]}}, {"expression": {"name": {"identifier": "ord"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetRand"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_precisionModel"}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "randNum"}, {"IdentifierName": "GridWidth"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ord"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "cbr"}}, "value": {"type": {"name": {"identifier": "CommonBitsRemover"}}}}}, {"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}]}}, {"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}, {"expression": {"variables": [{"type": {"origin": "NAME", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "remGeom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "remGeom"}}}, "value": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "removeCommonBits"}, "arguments": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "copy"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "remGeom"}}}, "value": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "removeCommonBits"}, "arguments": [{"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "copy"}}]}}}, {"expression": {"name": {"identifier": "remGeom"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "cbr"}, {"ObjectCreationExpression": [{"IdentifierName": "CommonBitsRemover"}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbr"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbr"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "remGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbr"}, {"IdentifierName": "RemoveCommonBits"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "remGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbr"}, {"IdentifierName": "RemoveCommonBits"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "remGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "ocaMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "oca"}}, {"name": {"identifier": "segString"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ocaMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}, {"Argument": [{"IdentifierName": "segString"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "addNode"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "lbl"}, "initializer": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "label"}}, "value": {"type": {"name": {"identifier": "Label"}}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "onLocation"}}]}}}]}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "onLocation"}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "lbl"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodeMap"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "lbl"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}, {"ObjectCreationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "onLocation"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "onLocation"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "orientation"}, "initializer": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isConcave"}, "initializer": {"inner": {"operator": "EQUALS", "right": {"name": {"identifier": "angleOrientation"}}, "left": {"name": {"identifier": "orientation"}}}}}]}}, {"expression": {"name": {"identifier": "isConcave"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"EqualsExpression": [{"IdentifierName": "orientation"}, {"IdentifierName": "_angleOrientation"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isConcave"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"name": {"identifier": "computeMergedLocation"}, "arguments": [{"name": {"identifier": "label2"}}, {"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "thisLoc"}, "initializer": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "loc"}}]}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}, "left": {"name": {"identifier": "thisLoc"}}}}]}, "compare": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "2"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeMergedLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "label2"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "thisLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss1"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "mc1"}}, "name": {"identifier": "getContext"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss2"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "mc2"}}, "name": {"identifier": "getContext"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "processIntersections"}, "arguments": [{"name": {"identifier": "ss1"}}, {"name": {"identifier": "start1"}}, {"name": {"identifier": "ss2"}}, {"name": {"identifier": "start2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ISegmentString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mc1"}, {"IdentifierName": "Context"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ISegmentString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mc2"}, {"IdentifierName": "Context"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_si"}, {"IdentifierName": "ProcessIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss1"}]}, {"Argument": [{"IdentifierName": "start1"}]}, {"Argument": [{"IdentifierName": "ss2"}]}, {"Argument": [{"IdentifierName": "start2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "envelope"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "envelope"}}, {"name": {"identifier": "envelope"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "sourceData"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "sourceData"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "envelope"}]}, {"Argument": [{"IdentifierName": "envelope"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "bufferOriginalPrecision"}}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "resultGeometry"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "argPM"}, "initializer": {"scope": {"scope": {"name": {"identifier": "argGeom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "getPrecisionModel"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "bufferFixedPrecision"}, "arguments": [{"name": {"identifier": "argPM"}}]}}, "elseStmt": {"expression": {"name": {"identifier": "bufferReducedPrecision"}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "FIXED"}}, "left": {"scope": {"name": {"identifier": "argPM"}}, "name": {"identifier": "getType"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BufferOriginalPrecision"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_resultGeometry"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPrecisionModel"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_argGeom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "PrecisionModel"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "argPrecModel"}, {"IdentifierName": "PrecisionModelType"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModels"}, {"IdentifierName": "Fixed"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BufferFixedPrecision"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argPrecModel"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BufferReducedPrecision"}, {"ArgumentList": "()"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segs"}, "initializer": {"name": {"identifier": "createSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "fixedPM"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "ScaledNoder"}}, "arguments": [{"type": {"name": {"identifier": "MCIndexSnapRounder"}}, "arguments": [{"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"value": "1.0"}]}]}, {"scope": {"name": {"identifier": "fixedPM"}}, "name": {"identifier": "getScale"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segs"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "nodedSegStrings"}, "initializer": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getNodedSubstrings"}}}]}}, {"expression": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"name": {"identifier": "nodedSegStrings"}}, {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSegmentStrings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ScaledNoder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexSnapRounder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fixedPM"}, {"IdentifierName": "Scale"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segs"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodedSegStrings"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getArgGeometry"}, "arguments": [{"name": {"identifier": "targetIndex"}}]}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "targetIndex"}}, {"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "GetArgGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "factory"}, "initializer": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "getFactory"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gColl"}, "initializer": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "unionAll"}, "initializer": {"scope": {"name": {"identifier": "gColl"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}]}}, {"expression": {"name": {"identifier": "unionAll"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Factory"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "g1"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gColl"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "unionAll"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "testGeoms"}, "initializer": {"name": {"identifier": "getTestGeometries"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "testGeom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "runRectanglePredicates"}, "arguments": [{"name": {"identifier": "rect"}}, {"name": {"identifier": "testGeom"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "testGeoms"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "getTestGeometries"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "testGeoms"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "runRectanglePredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rect"}]}, {"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeDistance"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "ptDist"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "computeDistance"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "ptDist"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeDistance"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "ptDist"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeDistance"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "ptDist"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "inc"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "NUM_PTS_TO_CHECK"}}, "left": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "i0"}}, "left": {"name": {"identifier": "i2"}}}}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "inc"}}, "value": {"value": "1"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "inc"}}}}, {"body": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isShallow"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p2"}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "inputLine"}}}, {"name": {"identifier": "distanceTol"}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "i2"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "i0"}}}]}], "update": [{"operator": "PLUS", "target": {"name": {"identifier": "i"}}, "value": {"name": {"identifier": "inc"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "i2"}, {"IdentifierName": "i0"}]}]}, {"IdentifierName": "NumPtsToCheck"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "inc"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "inc"}, {"NumericLiteralExpression": "1"}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "i0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "i2"}]}, {"AddAssignmentExpression": [{"IdentifierName": "i"}, {"IdentifierName": "inc"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsShallow"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_inputLine"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "distanceTol"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumDiameter"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getDiameter"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumDiameter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "Diameter"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "cmp"}, "initializer": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "orig"}}]}}]}}, {"expression": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "cmp"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dest"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"NotEqualsExpression": [{"IdentifierName": "cmp"}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "coordRef"}}, "name": {"identifier": "get"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "coords"}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordRef"}}, "value": {}}}, {"expression": {}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "coords"}}}}]}, "elseStmt": {"statements": [{"expression": {}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "coordRef"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "CoordRef"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "localCoordRef"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "localCoordRef"}, {"IdentifierName": "Target"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "arr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "arr"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordRef"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "testE"}, "initializer": {"name": {"identifier": "computeEByTaylorSeries"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "err"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "testE"}}, "name": {"identifier": "subtract"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}]}, "name": {"identifier": "doubleValue"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "64"}}, "left": {"name": {"identifier": "err"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeEByTaylorSeries"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testE"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}]}]}, {"IdentifierName": "ToDoubleValue"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LessThanExpression": [{"IdentifierName": "err"}, {"MultiplyExpression": [{"NumericLiteralExpression": "64"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopesIntersect"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"expression": {"name": {"identifier": "isAnyTargetComponentInTest"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopesIntersect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsAnyTargetComponentInTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "get"}, "arguments": [{"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}, {"name": {"identifier": "n"}}]}}, {"expression": {"name": {"identifier": "n"}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "mergeLabel"}, "arguments": [{"name": {"identifier": "n"}}]}}, {"expression": {"name": {"identifier": "node"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_nodeMap"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"IdentifierName": "n"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "n"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "MergeLabel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "node"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"index": {"name": {"identifier": "posIndex"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}}}, {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "posIndex"}]}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p2"}, "initializer": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "PLUS", "right": {"value": "2"}, "left": {"name": {"identifier": "i"}}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "collapsedVertexIndexes"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}]}}]}, "condition": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p2"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "size"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p2"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "collapsedVertexIndexes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "queryPt"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "seg1"}}]}, "left": {"scope": {"name": {"identifier": "queryPt"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "seg0"}}]}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "segDist"}, "initializer": {"scope": {"name": {"identifier": "Distance"}}, "name": {"identifier": "pointToSegment"}, "arguments": [{"name": {"identifier": "queryPt"}}, {"name": {"identifier": "seg1"}}, {"name": {"identifier": "seg0"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "smc"}}, "name": {"identifier": "updateClearance"}, "arguments": [{"name": {"identifier": "segDist"}}, {"name": {"identifier": "queryPt"}}, {"name": {"identifier": "seg1"}}, {"name": {"identifier": "seg0"}}]}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "segDist"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_queryPt"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_queryPt"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg1"}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "DistancePointLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_queryPt"}]}, {"Argument": [{"IdentifierName": "seg1"}]}, {"Argument": [{"IdentifierName": "seg0"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "segDist"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_smc"}, {"IdentifierName": "UpdateClearance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segDist"}]}, {"Argument": [{"IdentifierName": "_queryPt"}]}, {"Argument": [{"IdentifierName": "seg1"}]}, {"Argument": [{"IdentifierName": "seg0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"name": {"identifier": "o1"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p2"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"name": {"identifier": "o2"}}}}]}}, {"expression": {"name": {"identifier": "polarCompare"}, "arguments": [{"name": {"identifier": "origin"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "PolarCompare"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_origin"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "getEndIndex"}}, "left": {"name": {"identifier": "index"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "getStartIndex"}}, "left": {"name": {"identifier": "index"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "index"}, {"IdentifierName": "StartIndex"}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "index"}, {"IdentifierName": "EndIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "subgraphList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferSubgraph"}}, "name": {"identifier": "subgraph"}, "initializer": {"type": {"name": {"identifier": "BufferSubgraph"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "subgraph"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"expression": {"scope": {"name": {"identifier": "subgraphList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "subgraph"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "isVisited"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "subgraphList"}}, {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "reverseOrder"}}]}}, {"expression": {"name": {"identifier": "subgraphList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "BufferSubgraph"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "Nodes"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "IsVisited"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferSubgraph"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraph"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraphList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subgraph"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraphList"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraphList"}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "subgraphList"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"scope": {}, "name": {"identifier": "p0"}}, "name": {"identifier": "x"}}, "value": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"scope": {}, "name": {"identifier": "p0"}}, "name": {"identifier": "y"}}, "value": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "y"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"scope": {}, "name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "value": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"scope": {}, "name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "value": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Y"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts1"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p2"}, "initializer": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}}, "name": {"name": {"identifier": "pts2"}}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "p2"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pts1"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pts2"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "i"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p2"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "EdgeEnds"}]}, {"IfStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "InResult"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "BoundaryOp"}}, "name": {"identifier": "getBoundary"}, "arguments": [{"name": {"identifier": "g"}}, {"scope": {"name": {"identifier": "BoundaryNodeRule"}}, "name": {"identifier": "MULTIVALENT_ENDPOINT_BOUNDARY_RULE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryOp"}, {"IdentifierName": "GetBoundary"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryNodeRules"}, {"IdentifierName": "MultivalentEndpointBoundaryRule"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "testChain"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"name": {"identifier": "item"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "testChain"}}, "name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "pixelEnv"}}, {"name": {"identifier": "hotPixelSnapAction"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "item"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testChain"}, {"IdentifierName": "Select"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_env"}]}, {"Argument": [{"IdentifierName": "_action"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "tri"}, "initializer": {"type": {"name": {"identifier": "Triangle"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "triangleCoord"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "triangleCoord"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "triangleCoord"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "inCentre"}, "initializer": {"scope": {"name": {"identifier": "tri"}}, "name": {"identifier": "inCentre"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distToCentre"}, "initializer": {"scope": {"name": {"identifier": "Distance"}}, "name": {"identifier": "pointToSegment"}, "arguments": [{"name": {"identifier": "inCentre"}}, {"scope": {"name": {"identifier": "tri"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "tri"}}, "name": {"identifier": "p1"}}]}}]}}, {"expression": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "bufferDistance"}}]}, "left": {"name": {"identifier": "distToCentre"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Triangle"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "triangleCoord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "triangleCoord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "triangleCoord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tri"}, {"IdentifierName": "InCentre"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "DistancePointLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inCentre"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tri"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tri"}, {"IdentifierName": "P1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "distToCentre"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferDistance"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "parentLine"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "extractCoordinates"}, "arguments": [{"name": {"identifier": "resultSegs"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_resultSegs"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_parentLine"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "StringBuffer"}}, "name": {"identifier": "buf"}, "initializer": {"type": {"name": {"identifier": "StringBuffer"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "ch"}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "count"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "count"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buf"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ch"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buf"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"operator": "OR", "right": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "input"}}}, "left": {"operator": "OR", "right": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "input"}}}, "left": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "input"}}}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "inputCurve"}, "initializer": {"name": {"identifier": "getPolygonLines"}, "arguments": [{"name": {"identifier": "input"}}]}}]}}, {"expression": {"name": {"identifier": "checkMinimumDistance"}, "arguments": [{"name": {"identifier": "inputCurve"}}, {"name": {"identifier": "result"}}, {"name": {"identifier": "minValidDistance"}}]}}, {"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkMaximumDistance"}, "arguments": [{"name": {"identifier": "inputCurve"}}, {"name": {"identifier": "result"}}, {"name": {"identifier": "maxValidDistance"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"IsExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "IPolygon"}]}, {"IsExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "IMultiPolygon"}]}]}, {"IsExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "IGeometryCollection"}]}]}]}]}, {"Block": [{"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetPolygonLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_input"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMinimumDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputCurve"}]}, {"Argument": [{"IdentifierName": "_result"}]}, {"Argument": [{"IdentifierName": "_minValidDistance"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMaximumDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputCurve"}]}, {"Argument": [{"IdentifierName": "_result"}]}, {"Argument": [{"IdentifierName": "_maxValidDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "rawAreaGeom"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}, "condition": {"name": {"identifier": "isEnsureValidTopology"}}}, {"expression": {"name": {"identifier": "rawAreaGeom"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"IdentifierName": "_isEnsureValidTopology"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rawAreaGeom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}, {"IdentifierName": "rawAreaGeom"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "im"}}, "name": {"identifier": "setAtLeastIfValid"}, "arguments": [{"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "1"}]}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "im"}, {"IdentifierName": "SetAtLeastIfValid"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Point"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "isWithinDistance"}, "arguments": [{"name": {"identifier": "b"}}, {"name": {"identifier": "dist"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "IsWithinDistance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumDiameter"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getDiameter"}}, "name": {"identifier": "getLength"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumDiameter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "Diameter"}]}, {"IdentifierName": "Length"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "coord2"}}, "left": {"name": {"identifier": "coord1"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coord2"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coord1"}}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "coord2"}}, "name": {"identifier": "length"}}, "left": {"scope": {"name": {"identifier": "coord1"}}, "name": {"identifier": "length"}}}}, {"body": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "coordinateComparator"}}, "name": {"identifier": "compare"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord1"}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord2"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coord1"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "coord1"}, {"IdentifierName": "coord2"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "coord1"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"IdentifierName": "coord2"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord1"}, {"IdentifierName": "Length"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coord2"}, {"IdentifierName": "Length"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateComparer"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord1"}]}, {"Argument": [{"IdentifierName": "coord2"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "childBoundables"}}, "name": {"identifier": "isEmpty"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "minLeafCount"}, "initializer": {"type": {"type": "INT"}, "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "ceil"}, "arguments": [{"inner": {"operator": "DIVIDE", "right": {"type": {"type": "DOUBLE"}, "expression": {"name": {"identifier": "getNodeCapacity"}}}, "left": {"scope": {"name": {"identifier": "childBoundables"}}, "name": {"identifier": "size"}}}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "sortedChildBoundables"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}, "arguments": [{"name": {"identifier": "childBoundables"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "sortedChildBoundables"}}, {"name": {"identifier": "xComparator"}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "List"}}}, "name": {"identifier": "verticalSlices"}, "initializer": {"name": {"identifier": "verticalSlices"}, "arguments": [{"name": {"identifier": "sortedChildBoundables"}}, {"type": {"type": "INT"}, "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "ceil"}, "arguments": [{"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"name": {"identifier": "minLeafCount"}}]}]}}]}}]}}, {"expression": {"name": {"identifier": "createParentBoundablesFromVerticalSlices"}, "arguments": [{"name": {"identifier": "verticalSlices"}}, {"name": {"identifier": "newLevel"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundables"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "int"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Ceiling"}]}, {"ArgumentList": [{"Argument": [{"ParenthesizedExpression": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundables"}, {"IdentifierName": "Count"}]}, {"CastExpression": [{"PredefinedType": "double"}, {"IdentifierName": "NodeCapacity"}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "TItem"}]}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundables"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sortedChildBoundables"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "XComparer"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "VerticalSlices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sortedChildBoundables"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Ceiling"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "minLeafCount"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateParentBoundablesFromVerticalSlices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "verticalSlices"}]}, {"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "tempList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "WKTFileReader"}}, "name": {"identifier": "fileRdr"}, "initializer": {"type": {"name": {"identifier": "WKTFileReader"}}, "arguments": [{"name": {"identifier": "rdr"}}, {"name": {"identifier": "reader"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "fileRdr"}}, "name": {"identifier": "read"}}}]}}, {"expression": {"name": {"identifier": "geoms"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTFileReader"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "StreamReader"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "stream"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fileRdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geoms"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"name": {"identifier": "ee"}}}}]}}, {"expression": {"name": {"identifier": "insertEdgeEnd"}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "ee"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertEdgeEnd"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "minClearancePts"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearancePts"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "2"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearance"}}, "value": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "MAX_VALUE"}}}}, {"expression": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "VertexCoordinateFilter"}}, "arguments": [{}]}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_minClearancePts"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearancePts"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearance"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "MaxValue"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "VertexCoordinateFilter"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compose"}, "arguments": [{"name": {"identifier": "scaleInstance"}, "arguments": [{"name": {"identifier": "xScale"}}, {"name": {"identifier": "yScale"}}]}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compose"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ScaleInstance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xScale"}]}, {"Argument": [{"IdentifierName": "yScale"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNext"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Next"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segStrings"}, "initializer": {"name": {"identifier": "extractTaggedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "pm"}}]}}]}}, {"expression": {"name": {"identifier": "snapRound"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "toNodedLines"}, "arguments": [{"name": {"identifier": "segStrings"}}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}]}}]}, "condition": {"name": {"identifier": "isLineworkOnly"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geomSnapped"}, "initializer": {"name": {"identifier": "replaceLines"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "segStrings"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geomClean"}, "initializer": {"name": {"identifier": "ensureValid"}, "arguments": [{"name": {"identifier": "geomSnapped"}}]}}]}}, {"expression": {"name": {"identifier": "geomClean"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractTaggedSegmentStrings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SnapRound"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isLineworkOnly"}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToNodedLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReplaceLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnsureValid"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomSnapped"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geomClean"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "z"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "z"}}}, "left": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"AddExpression": [{"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}]}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Z"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "removeDegenerateRings"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "parent"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "simpResult"}, "initializer": {"scope": {}, "name": {"identifier": "transformLinearRing"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "simpResult"}}}}}, "left": {"name": {"identifier": "removeDegenerateRings"}}}}, {}, {"expression": {"name": {"identifier": "simpResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "removeDegenerateRings"}, {"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "simpResult"}, {"IdentifierName": "ILinearRing"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"IdentifierName": "simpResult"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineMergeDirectedEdge"}}, "name": {"identifier": "directedEdge"}, "initializer": {"type": {"name": {"identifier": "LineMergeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{}]}, "condition": {"scope": {"scope": {"name": {"identifier": "directedEdge"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "isMarked"}}}, {"expression": {"scope": {"name": {"identifier": "edgeStrings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "buildEdgeStringStartingWith"}, "arguments": [{"name": {"identifier": "directedEdge"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "LineMergeDirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "directedEdge"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "IsMarked"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edgeStrings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringStartingWith"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "directedEdge"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "lineLabel"}, "initializer": {"type": {"name": {"identifier": "Label"}}, "arguments": [{"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}]}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "lineLabel"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "i"}}, {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "lineLabel"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "2"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineLabel"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "lineLabel"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "factor"}, "initializer": {"name": {"identifier": "projectionFactor"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "1"}, "left": {"name": {"identifier": "factor"}}}, "left": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "factor"}}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist0"}, "initializer": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist1"}, "initializer": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "p0"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "dist1"}}, "left": {"name": {"identifier": "dist0"}}}}, {"expression": {"name": {"identifier": "p1"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ProjectionFactor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"GreaterThanExpression": [{"IdentifierName": "factor"}, {"NumericLiteralExpression": "0"}]}, {"LessThanExpression": [{"IdentifierName": "factor"}, {"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Project"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"LessThanExpression": [{"IdentifierName": "dist0"}, {"IdentifierName": "dist1"}]}, {"IdentifierName": "_p0"}, {"IdentifierName": "_p1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMaxY"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}, "left": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMinY"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}, "left": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMaxX"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMinX"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MinX"}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MaxX"}]}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MinY"}]}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MaxY"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "tri"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "ring"}}]}}]}}, {"expression": {"name": {"identifier": "tri"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "tri"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "rawGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformMultiPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "rawGeom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rawGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "radius"}, "initializer": {"name": {"identifier": "getRadius"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "getCentre"}}}]}}, {"expression": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Radius"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Centre"}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}, {"IdentifierName": "radius"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}, {"IdentifierName": "radius"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "radius"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "radius"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "shapeFactory"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}, "arguments": [{"name": {"identifier": "geomFactory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "shapeFactory"}}, "name": {"identifier": "setBase"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}}, {"expression": {"scope": {"name": {"identifier": "shapeFactory"}}, "name": {"identifier": "setSize"}, "arguments": [{"value": "1000"}]}}, {"expression": {"scope": {"name": {"identifier": "shapeFactory"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"value": "1000"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "shapeFactory"}}, "name": {"identifier": "createRectangle"}}}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "geom"}}, {"value": "2"}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometricShapeFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "GeomFactory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shapeFactory"}, {"IdentifierName": "Base"}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shapeFactory"}, {"IdentifierName": "Size"}]}, {"NumericLiteralExpression": "1000"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shapeFactory"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1000"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shapeFactory"}, {"IdentifierName": "CreateRectangle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ln"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"name": {"identifier": "x"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "ln"}}}, "condition": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isInfinite"}, "arguments": [{"name": {"identifier": "ln"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "ln"}}}, "condition": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "ln"}}]}}, {"expression": {"operator": "DIVIDE", "right": {"name": {"identifier": "LOG_10"}}, "left": {"name": {"identifier": "ln"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "double"}, {"IdentifierName": "IsInfinity"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ln"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ln"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ln"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ln"}]}]}, {"ReturnStatement": [{"DivideExpression": [{"IdentifierName": "ln"}, {"IdentifierName": "LOG10"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}, "name": {"identifier": "next"}}}}, "name": {"identifier": "getFactory"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomenumerator"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomenumerator"}, {"IdentifierName": "Current"}]}, {"IdentifierName": "Factory"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}]}}, {"expression": {"name": {"identifier": "visitInteriorRing"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getExteriorRing"}}, {"name": {"identifier": "graph"}}]}}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MultiPolygon"}}, "name": {"identifier": "mp"}, "initializer": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "g"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "mp"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"name": {"identifier": "visitInteriorRing"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getExteriorRing"}}, {"name": {"identifier": "graph"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "mp"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "g"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IPolygon"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "g"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitInteriorRing"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Shell"}]}]}, {"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IMultiPolygon"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IMultiPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IMultiPolygon"}, {"IdentifierName": "g"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IPolygon"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mp"}, {"IdentifierName": "Geometries"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitInteriorRing"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Shell"}]}]}, {"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryEditor"}}, "name": {"identifier": "geomEdit"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "newFactory"}, "initializer": {"name": {"identifier": "createFactory"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, {"name": {"identifier": "targetPM"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomEdit"}}, "value": {"type": {"name": {"identifier": "GeometryEditor"}}, "arguments": [{"name": {"identifier": "newFactory"}}]}}}]}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomEdit"}}, "value": {"type": {"name": {"identifier": "GeometryEditor"}}}}}, "condition": {"name": {"identifier": "changePrecisionModel"}}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "finalRemoveCollapsed"}, "initializer": {"name": {"identifier": "removeCollapsed"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "finalRemoveCollapsed"}}, "value": {"value": "true"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getDimension"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "reduceGeom"}, "initializer": {"scope": {"name": {"identifier": "geomEdit"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "PrecisionReducerCoordinateOperation"}}, "arguments": [{"name": {"identifier": "targetPM"}}, {"name": {"identifier": "finalRemoveCollapsed"}}]}]}}]}}, {"expression": {"name": {"identifier": "reduceGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryEditor"}, {"VariableDeclarator": "geomEdit"}]}]}, {"IfStatement": [{"IdentifierName": "_changePrecisionModel"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateFactory"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}, {"Argument": [{"IdentifierName": "_targetPrecModel"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geomEdit"}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newFactory"}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geomEdit"}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "_removeCollapsed"}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Dimension"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "finalRemoveCollapsed"}, {"TrueLiteralExpression": "true"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomEdit"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionReducerCoordinateOperation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_targetPrecModel"}]}, {"Argument": [{"IdentifierName": "finalRemoveCollapsed"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "reduceGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "p0x"}}, {"name": {"identifier": "p0y"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "p1x"}}, {"name": {"identifier": "p1y"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "p2x"}}, {"name": {"identifier": "p2y"}}]}]}}]}}, {"expression": {"name": {"identifier": "isAllOrientationsEqual"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0x"}]}, {"Argument": [{"IdentifierName": "p0y"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1x"}]}, {"Argument": [{"IdentifierName": "p1y"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p2x"}]}, {"Argument": [{"IdentifierName": "p2y"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsAllOrientationsEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ExtractNodedSegmentStrings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.0"}, {"value": "200.0"}, {"value": "50.0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "aBitOff"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.1"}, {"value": "200.1"}, {"value": "50.0"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "aBitOff"}}, {"value": "0.2"}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "200.0"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.1"}]}, {"Argument": [{"NumericLiteralExpression": "200.1"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "aBitOff"}]}, {"Argument": [{"NumericLiteralExpression": "0.2"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "IsValidOp"}}, "name": {"identifier": "validator"}, "initializer": {"type": {"name": {"identifier": "IsValidOp"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expected"}}, "left": {"name": {"identifier": "isValid"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IsValidOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IsValidOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "isValid"}, {"IdentifierName": "expected"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "eiNew"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "arguments": [{"name": {"identifier": "intPt"}}, {"name": {"identifier": "segmentIndex"}}, {"name": {"identifier": "dist"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "eiNew"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "ei"}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "ei"}}}}, {"expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "eiNew"}}, {"name": {"identifier": "eiNew"}}]}}, {"expression": {"name": {"identifier": "eiNew"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeIntersection"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPt"}]}, {"Argument": [{"IdentifierName": "segmentIndex"}]}, {"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeIntersection"}, {"VariableDeclarator": "ei"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eiNew"}]}, {"Argument": [{"IdentifierName": "ei"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ei"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "nodeMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "eiNew"}]}]}]}, {"IdentifierName": "eiNew"}]}]}, {"ReturnStatement": [{"IdentifierName": "eiNew"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "BufferOp"}}, "name": {"identifier": "bufferOp"}, "arguments": [{}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "quadrantSegments"}}, {"name": {"identifier": "endCapStyle"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferOp"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "bufferParameters"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"inner": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}, "left": {"inner": {"operator": "MULTIPLY", "right": {"value": "180"}, "left": {"name": {"identifier": "radians"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "radians"}, {"NumericLiteralExpression": "180"}]}]}, {"ParenthesizedExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "workingNoder"}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "workingNoder"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MCIndexNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineIntersector"}}, "name": {"identifier": "li"}, "initializer": {"type": {"name": {"identifier": "RobustLineIntersector"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "setPrecisionModel"}, "arguments": [{"name": {"identifier": "precisionModel"}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setSegmentIntersector"}, "arguments": [{"type": {"name": {"identifier": "IntersectionAdder"}}, "arguments": [{"name": {"identifier": "li"}}]}]}}, {"expression": {"name": {"identifier": "noder"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_workingNoder"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "_workingNoder"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "IntersectionAdder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "PrecisionModel"}, {"IdentifierName": "precisionModel"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "noder"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isPoint"}, "initializer": {"name": {"identifier": "isPoint"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isPointOther"}, "initializer": {"scope": {"name": {"identifier": "facetSeq"}}, "name": {"identifier": "isPoint"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "pt"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "facetSeq"}}, "name": {"identifier": "pts"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"scope": {"name": {"identifier": "facetSeq"}}, "name": {"identifier": "start"}}, {"name": {"identifier": "seqPt"}}]}}, {"expression": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "seqPt"}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "pt"}}]}}, {"expression": {"name": {"identifier": "computePointLineDistance"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "facetSeq"}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "facetSeq"}}, "name": {"identifier": "pts"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"scope": {"name": {"identifier": "facetSeq"}}, "name": {"identifier": "start"}}, {"name": {"identifier": "seqPt"}}]}}, {"expression": {"name": {"identifier": "computePointLineDistance"}, "arguments": [{"name": {"identifier": "seqPt"}}, {}]}}]}, "condition": {"name": {"identifier": "isPointOther"}}}, "condition": {"name": {"identifier": "isPoint"}}}, "condition": {"operator": "AND", "right": {"name": {"identifier": "isPointOther"}}, "left": {"name": {"identifier": "isPoint"}}}}, {"expression": {"name": {"identifier": "computeLineLineDistance"}, "arguments": [{"name": {"identifier": "facetSeq"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "IsPoint"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "facetSeq"}, {"IdentifierName": "IsPoint"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "isPoint"}, {"IdentifierName": "isPointOther"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_start"}]}, {"Argument": [{"IdentifierName": "_pt"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "facetSeq"}, {"IdentifierName": "_pts"}]}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "facetSeq"}, {"IdentifierName": "_start"}]}]}, {"Argument": [{"IdentifierName": "_seqPt"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_seqPt"}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isPoint"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_start"}]}, {"Argument": [{"IdentifierName": "_pt"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputePointLineDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pt"}]}, {"Argument": [{"IdentifierName": "facetSeq"}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isPointOther"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "facetSeq"}, {"IdentifierName": "_pts"}]}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "facetSeq"}, {"IdentifierName": "_start"}]}]}, {"Argument": [{"IdentifierName": "_seqPt"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputePointLineDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_seqPt"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeLineLineDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "facetSeq"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "checkNoSelfIntersectingRing"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getEdgeIntersectionList"}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeIterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "IEnumerator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "GetEdgeEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Edge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNoSelfIntersectingRing"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "EdgeIntersectionList"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}, "name": {"identifier": "csFactory"}, "initializer": {"type": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "cs3D"}, "initializer": {"name": {"identifier": "createTestSequence"}, "arguments": [{"name": {"identifier": "csFactory"}}, {"value": "10"}, {"value": "3"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "cs2D"}, "initializer": {"scope": {"name": {"identifier": "csFactory"}}, "name": {"identifier": "create"}, "arguments": [{"value": "10"}, {"value": "2"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "cs3D"}}, {"value": "0"}, {"name": {"identifier": "cs2D"}}, {"value": "0"}, {"scope": {"name": {"identifier": "cs2D"}}, "name": {"identifier": "size"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "isEqual"}, "arguments": [{"name": {"identifier": "cs2D"}}, {"name": {"identifier": "cs3D"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateTestSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "csFactory"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "csFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cs3D"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "cs2D"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cs2D"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "IsEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cs2D"}]}, {"Argument": [{"IdentifierName": "cs3D"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "roughAreaGeom"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "roughAreaGeom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "coord"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "hasRepeatedPoints"}, "arguments": [{"name": {"identifier": "coord"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}, "arguments": [{"name": {"identifier": "coord"}}, {"value": "false"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "HasRepeatedPoints"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coord"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CoordinateList"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "intSegStrings"}, "initializer": {"name": {"identifier": "inputSegStrings"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "intSegStrings"}}, "value": {"name": {"identifier": "scale"}, "arguments": [{"name": {"identifier": "inputSegStrings"}}]}}}, "condition": {"name": {"identifier": "isScaled"}}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "intSegStrings"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "inputSegStrings"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isScaled"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "intSegStrings"}, {"InvocationExpression": [{"IdentifierName": "Scale"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputSegStrings"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intSegStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x1"}, "initializer": {"scope": {"index": {"index": {"name": {"identifier": "chainIndex"}}, "name": {"name": {"identifier": "startIndex"}}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "x"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x2"}, "initializer": {"scope": {"index": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "chainIndex"}}}, "name": {"name": {"identifier": "startIndex"}}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "x"}}}]}}, {"expression": {"thenExpr": {"name": {"identifier": "x1"}}, "elseExpr": {"name": {"identifier": "x2"}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "x2"}}, "left": {"name": {"identifier": "x1"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "chainIndex"}]}]}]}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "chainIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"LessThanExpression": [{"IdentifierName": "x1"}, {"IdentifierName": "x2"}]}, {"IdentifierName": "x1"}, {"IdentifierName": "x2"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdgeTriangleBuilderVisitor"}}, "name": {"identifier": "visitor"}, "initializer": {"type": {"name": {"identifier": "QuadEdgeTriangleBuilderVisitor"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "visitTriangles"}, "arguments": [{"name": {"identifier": "visitor"}}, {"value": "false"}]}}, {"expression": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "getTriangles"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "QuadEdgeTriangleBuilderVisitor"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subdiv"}, {"IdentifierName": "VisitTriangles"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "visitor"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "GetTriangles"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isSearchMatch"}, "arguments": [{"name": {"identifier": "searchEnv"}}]}}}, {"expression": {"scope": {"name": {"identifier": "resultItems"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "items"}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}, "name": {"identifier": "addAllItemsFromOverlapping"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "resultItems"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsSearchMatch"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"ForEachStatement": [{"IdentifierName": "T"}, {"IdentifierName": "_items"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultItems"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "4"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "AddAllItemsFromOverlapping"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "resultItems"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"name": {"identifier": "circle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geomFact"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "_origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "_size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "circle"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "getAdjacentTriangleAcrossEdge"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "getEdgeIndex"}, "arguments": [{"scope": {"name": {"identifier": "getEdge"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "sym"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetAdjacentTriangleAcrossEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "GetEdgeIndex"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Sym"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "obj"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "AffineTransformation"}}, "expression": {"name": {"identifier": "obj"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m12"}}, "left": {"name": {"identifier": "m12"}}}, "left": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m11"}}, "left": {"name": {"identifier": "m11"}}}, "left": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m10"}}, "left": {"name": {"identifier": "m10"}}}, "left": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m02"}}, "left": {"name": {"identifier": "m02"}}}, "left": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m01"}}, "left": {"name": {"identifier": "m01"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m00"}}, "left": {"name": {"identifier": "m00"}}}}}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "trans"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_m00"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m00"}]}]}, {"EqualsExpression": [{"IdentifierName": "_m01"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m01"}]}]}]}, {"EqualsExpression": [{"IdentifierName": "_m02"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m02"}]}]}]}, {"EqualsExpression": [{"IdentifierName": "_m10"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m10"}]}]}]}, {"EqualsExpression": [{"IdentifierName": "_m11"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m11"}]}]}]}, {"EqualsExpression": [{"IdentifierName": "_m12"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m12"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "originalEx"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "originalEx"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CommonBitsOp"}}, "name": {"identifier": "cbo"}, "initializer": {"type": {"name": {"identifier": "CommonBitsOp"}}, "arguments": [{"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "resultEP"}, "initializer": {"scope": {"name": {"identifier": "cbo"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "originalEx"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "resultEP"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "resultEP"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "originalEx"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex2"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ApplicationException"}, {"VariableDeclarator": "originalEx"}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom0"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "originalEx"}, {"IdentifierName": "ex"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CommonBitsOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CommonBitsOp"}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbo"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultEP"}, {"IdentifierName": "IsValid"}]}]}, {"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}, {"ReturnStatement": [{"IdentifierName": "resultEP"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "max"}, "initializer": {"name": {"identifier": "v1"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"name": {"identifier": "v2"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "v2"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"name": {"identifier": "v3"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "v3"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"name": {"identifier": "v4"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "v4"}}}}, {"expression": {"name": {"identifier": "max"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "v1"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "max"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "max"}, {"IdentifierName": "v2"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "v3"}, {"IdentifierName": "max"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "max"}, {"IdentifierName": "v3"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "v4"}, {"IdentifierName": "max"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "max"}, {"IdentifierName": "v4"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "max"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "SYMDIFFERENCE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "SymDifference"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toLineString"}, "arguments": [{"type": {"name": {"identifier": "CoordinateArraySequence"}}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateArraySequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "locatePointInRing"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "ring"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RayCrossingCounter"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiPoint"}}}, "name": {"identifier": "multiPointArray"}, "initializer": {"elementType": {"name": {"identifier": "MultiPoint"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "multiPoints"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiPoint"}}}, "expression": {"scope": {"name": {"identifier": "multiPoints"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "multiPointArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IMultiPoint"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IMultiPoint"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "multiPoints"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IMultiPoint"}, {"IdentifierName": "multiPoints"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "mp"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "extremalPts"}}}}, {"expression": {"name": {"identifier": "computeCirclePoints"}}}, {"expression": {"name": {"identifier": "computeCentre"}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "radius"}}, "value": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "distance"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}]}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "centre"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_extremalPts"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeCirclePoints"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeCentre"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_centre"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_radius"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_centre"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {}}]}}, {"tryBlock": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geom"}}, "value": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "queryMin"}}, {"name": {"identifier": "queryMax"}}]}}}, {"expression": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "visitItem"}, "arguments": [{"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "Intersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "queryMin"}]}, {"Argument": [{"IdentifierName": "queryMax"}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "VisitItem"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkVertexDistance"}, "arguments": [{"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "checkSegmentDistance"}, "arguments": [{"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}, {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckVertexDistance"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegmentDistance"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getSimplifyFactor"}}, "left": {"name": {"identifier": "bufDistance"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"MultiplyExpression": [{"IdentifierName": "bufDistance"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "SimplifyFactor"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "linework"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "linework"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "g"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IPolygon"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "g"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linework"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linework"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "InteriorRings"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "computeResultPrecision"}, "arguments": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "intersection"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResultPrecision"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MULTIPLY", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}}, {"expression": {"name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "snapClean"}, "arguments": [{"name": {"identifier": "geomA"}}, {"name": {"identifier": "geomB"}}, {"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "difference"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "SnapClean"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomA"}]}, {"Argument": [{"IdentifierName": "geomB"}]}, {"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "label"}}, "value": {"type": {"name": {"identifier": "Label"}}, "arguments": [{"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getLabel"}}]}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "flip"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isForward"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Label"}, {"ObjectCreationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Edge"}, {"IdentifierName": "Label"}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isForward"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "Flip"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nQuad"}, "initializer": {"operator": "REMAINDER", "right": {"value": "4"}, "left": {"name": {"identifier": "numQuarters"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nQuad"}}, "value": {"operator": "PLUS", "right": {"value": "4"}, "left": {"name": {"identifier": "nQuad"}}}}}]}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "nQuad"}}}, "left": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "numQuarters"}}}}}, {"entries": [{"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}], "label": {"value": "0"}}, {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "y"}}}, {"name": {"identifier": "x"}}]}}], "label": {"value": "1"}}, {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "x"}}}, {"operator": "MINUS", "expression": {"name": {"identifier": "y"}}}]}}], "label": {"value": "2"}}, {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "y"}}, {"operator": "MINUS", "expression": {"name": {"identifier": "x"}}}]}}], "label": {"value": "3"}}], "selector": {"name": {"identifier": "nQuad"}}}, {"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ModuloExpression": [{"IdentifierName": "numQuarters"}, {"NumericLiteralExpression": "4"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "numQuarters"}, {"NumericLiteralExpression": "0"}]}, {"NotEqualsExpression": [{"IdentifierName": "nQuad"}, {"NumericLiteralExpression": "0"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "nQuad"}, {"AddExpression": [{"IdentifierName": "nQuad"}, {"NumericLiteralExpression": "4"}]}]}]}]}]}, {"SwitchStatement": [{"IdentifierName": "nQuad"}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_x"}]}, {"Argument": [{"IdentifierName": "_y"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_y"}]}]}, {"Argument": [{"IdentifierName": "_x"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "2"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_x"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_y"}]}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "3"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_y"}]}, {"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_x"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "ShouldNeverReachHere"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Method"}}}, "name": {"identifier": "methods"}, "initializer": {"scope": {"type": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "getMethods"}}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Class"}}, "name": {"identifier": "returnClass"}, "initializer": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "methods"}}}, "name": {"identifier": "getReturnType"}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "returnClass"}}}]}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"type": {"type": "INT"}}, "left": {"name": {"identifier": "returnClass"}}}, "left": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"type": {"type": "DOUBLE"}}, "left": {"name": {"identifier": "returnClass"}}}, "left": {"operator": "OR", "right": {"scope": {"type": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "isAssignableFrom"}, "arguments": [{"name": {"identifier": "returnClass"}}]}, "left": {"operator": "EQUALS", "right": {"type": {"type": "BOOLEAN"}}, "left": {"name": {"identifier": "returnClass"}}}}}}}]}, "condition": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "methods"}}}, "name": {"identifier": "getName"}}, "name": {"identifier": "equalsIgnoreCase"}, "arguments": [{"name": {"identifier": "functionName"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "methods"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Name"}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "functionName"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "StringComparison"}, {"IdentifierName": "InvariantCultureIgnoreCase"}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Type"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "ReturnType"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "returnClass"}, {"TypeOfExpression": [{"PredefinedType": "bool"}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"TypeOfExpression": [{"IdentifierName": "IGeometry"}]}, {"IdentifierName": "IsAssignableFrom"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "returnClass"}]}]}]}]}, {"EqualsExpression": [{"IdentifierName": "returnClass"}, {"TypeOfExpression": [{"PredefinedType": "double"}]}]}]}, {"EqualsExpression": [{"IdentifierName": "returnClass"}, {"TypeOfExpression": [{"PredefinedType": "int"}]}]}]}, {"Block": [{"ReturnStatement": [{"IdentifierName": "returnClass"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addReachable"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"expression": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "findEdge"}, "arguments": [{"name": {"identifier": "dirEdgeList"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "rightMostCoord"}}, "value": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "getCoordinate"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddReachable"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_finder"}, {"IdentifierName": "FindEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_dirEdgeList"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_rightMostCoord"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_finder"}, {"IdentifierName": "Coordinate"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "coordinates"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IdentifierName": "Coordinates"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setVisited"}, "arguments": [{"value": "false"}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "dirEdgeList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "_dirEdgeList"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Visited"}]}, {"FalseLiteralExpression": "false"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "q"}, "initializer": {"scope": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "makeEdge"}, "arguments": [{"name": {"identifier": "o"}}, {"name": {"identifier": "d"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "quadEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "q"}}]}}, {"expression": {"name": {"identifier": "q"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "QuadEdge"}, {"IdentifierName": "MakeEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}, {"Argument": [{"IdentifierName": "d"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_quadEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "q"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "q"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"name": {"identifier": "pt"}}]}}, {"expression": {"name": {"identifier": "addDirectedFillet"}, "arguments": [{"name": {"identifier": "p"}}, {"value": "0.0"}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"value": "2.0"}}, {"operator": "MINUS", "expression": {"value": "1"}}, {"name": {"identifier": "distance"}}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "closeRing"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "_distance"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddFillet"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "2.0"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "CloseRing"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}, "arguments": [{"name": {"identifier": "srcPts"}}]}}]}}, {"expression": {"name": {"identifier": "snapVertices"}, "arguments": [{"name": {"identifier": "coordList"}}, {"name": {"identifier": "snapPts"}}]}}, {"expression": {"name": {"identifier": "snapSegments"}, "arguments": [{"name": {"identifier": "coordList"}}, {"name": {"identifier": "snapPts"}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newPts"}, "initializer": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"name": {"identifier": "newPts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CoordinateList"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_srcPts"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SnapVertices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordList"}]}, {"Argument": [{"IdentifierName": "snapPts"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SnapSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordList"}]}, {"Argument": [{"IdentifierName": "snapPts"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e0"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "arguments": [{"name": {"identifier": "p0"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e1"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "arguments": [{"name": {"identifier": "p1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "init"}, "arguments": [{"name": {"identifier": "e1"}}]}}, {"expression": {"name": {"identifier": "e0"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HalfEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HalfEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "Init"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e1"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "rawAreaGeom"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}, "condition": {"name": {"identifier": "isEnsureValidTopology"}}}, {"expression": {"name": {"identifier": "rawAreaGeom"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_ensureValidTopology"}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rawAreaGeom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "rawAreaGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LineDissolver"}}, "name": {"identifier": "dissolve"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineDissolver"}, {"IdentifierName": "Dissolve"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}}, "condition": {"name": {"identifier": "isWithinToleranceOfBoundary"}, "arguments": [{"name": {"identifier": "pt"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsWithinToleranceOfBoundary"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "_g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "ll"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "ll"}}, "name": {"identifier": "extractLine"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ll"}, {"IdentifierName": "ExtractLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}, {"Argument": [{"IdentifierName": "end"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {}, "left": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "ptNotInList"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "2"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "3"}, {"value": "3"}]}]}}, {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "2"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "3"}, {"value": "3"}]}]}}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "PointNotInList"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}, {"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "list"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "ptNotInList"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "2"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "3"}, {"value": "3"}]}]}}, {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "3"}]}]}}]}, "name": {"identifier": "equals2D"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "2"}]}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "PointNotInList"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}, {"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "list"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isSearchMatch"}, "arguments": [{"name": {"identifier": "searchEnv"}}]}}}, {"expression": {"name": {"identifier": "visitItems"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "visitor"}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}, "name": {"identifier": "visit"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "visitor"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsSearchMatch"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitItems"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "4"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Visit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "visitTriangles"}, "arguments": [{"type": {"name": {"identifier": "TriangleCircumcentreVisitor"}}}, {"value": "true"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "cells"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "edges"}, "initializer": {"name": {"identifier": "getVertexUniqueEdges"}, "arguments": [{"value": "false"}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "qe"}, "initializer": {"type": {"name": {"identifier": "QuadEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "cells"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "getVoronoiCellPolygon"}, "arguments": [{"name": {"identifier": "qe"}}, {"name": {"identifier": "geomFact"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "cells"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitTriangles"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "TriangleCircumcentreVisitor"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetVertexUniqueEdges"}, {"ArgumentList": [{"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "edges"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cells"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetVoronoiCellPolygon"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "qe"}]}, {"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "cells"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getToNode"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "node"}}, "left": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getFromNode"}}}}, {"thenStmt": {"expression": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getToNode"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "node"}}, "left": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getFromNode"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "node"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "ToNode"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "node"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "ToNode"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "itemWrappers"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "itemWrappers"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "ItemBoundable"}}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Object"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "itemWrappers"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"PredefinedType": "object"}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "size"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemWrappers"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"PredefinedType": "object"}]}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Object"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "itemWrappers"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"operator": "PLUS", "right": {"value": " ==========="}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "testName"}}, "left": {"value": "======= Union Algorithm: "}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Stopwatch"}}, "name": {"identifier": "sw"}, "initializer": {"type": {"name": {"identifier": "Stopwatch"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union"}, "initializer": {}}]}}, {"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "union"}}, "value": {"name": {"identifier": "unionCascaded"}, "arguments": [{"name": {"identifier": "polys"}}]}}}, {}], "label": {"name": {"identifier": "CASCADED"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "union"}}, "value": {"name": {"identifier": "unionAllSimple"}, "arguments": [{"name": {"identifier": "polys"}}]}}}, {}], "label": {"name": {"identifier": "ITERATED"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "union"}}, "value": {"name": {"identifier": "unionAllBuffer"}, "arguments": [{"name": {"identifier": "polys"}}]}}}, {}], "label": {"name": {"identifier": "BUFFER0"}}}], "selector": {"name": {"identifier": "testType"}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "MAX_ITER"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "sw"}}, "name": {"identifier": "getTimeString"}}, "left": {"value": "Finished in "}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "UnionPerfTester"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "UnionPerfTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "test"}, {"IdentifierName": "run"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testName"}]}, {"Argument": [{"IdentifierName": "testType"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LocationIndexOfLine"}}, "name": {"identifier": "indicesOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "subLine"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationIndexOfLine"}, {"IdentifierName": "IndicesOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "subLine"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "b"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "a"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "a"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"MultiplyExpression": [{"IdentifierName": "b"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "index"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "index"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "list"}, {"IdentifierName": "Count"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "base"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"name": {"identifier": "circle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometricShapeFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "circle"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "190"}, {"value": "50"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "120"}, {"value": "100"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "120"}, {"value": "100"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "50"}, {"value": "150"}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasIntersection"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersectionNum"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "120"}, {"value": "100"}]}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersection"}, "arguments": [{"value": "1"}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "190"}]}, {"Argument": [{"NumericLiteralExpression": "50"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "120"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "120"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "50"}]}, {"Argument": [{"NumericLiteralExpression": "150"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "HasIntersection"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "120"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "GetIntersection"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "posIndex"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}, "value": {"name": {"identifier": "depthValue"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "posIndex"}]}]}]}]}, {"IdentifierName": "depthValue"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "GeometryMethodOperation"}}, "name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryMethodOperation"}, {"IdentifierName": "GetGeometryReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "z"}}, "left": {"name": {"identifier": "z"}}}, "left": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"AddExpression": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}, {"MultiplyExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "_z"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_z"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edgeRingStarts"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "currLabel"}, "initializer": {"value": "1"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isMarked"}}}, {"thenStmt": {}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}}, {"expression": {"scope": {"name": {"identifier": "edgeRingStarts"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "findDirEdgesInRing"}, "arguments": [{"name": {"identifier": "de"}}]}}]}}, {"expression": {"name": {"identifier": "label"}, "arguments": [{"name": {"identifier": "edges"}}, {"name": {"identifier": "currLabel"}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "currLabel"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "edgeRingStarts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "dirEdges"}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsMarked"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}, {"NumericLiteralExpression": "0"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeRingStarts"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "FindDirEdgesInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edges"}]}, {"Argument": [{"IdentifierName": "currLabel"}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "currLabel"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "edgeRingStarts"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runDelaunay"}, "arguments": [{"name": {"identifier": "sitesWKT"}}, {"value": "false"}, {"name": {"identifier": "expectedWKT"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunDelaunay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sitesWKT"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}, {"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "n"}}}, "name": {"name": {"identifier": "pts"}}}, "value": {"name": {"identifier": "coord"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "_n"}]}]}]}]}, {"IdentifierName": "coord"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segStrings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "arguments": [{"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}, {}]}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "segStrings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStrings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "NodedSegmentString"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segStrings"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "side"}, "initializer": {"name": {"identifier": "getRightmostSideOfSegment"}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "index"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "side"}}, "value": {"name": {"identifier": "getRightmostSideOfSegment"}, "arguments": [{"name": {"identifier": "de"}}, {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "index"}}}]}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "side"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minCoord"}}, "value": {}}}, {"expression": {"name": {"identifier": "checkForRightmostCoordinate"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "side"}}}}, {"expression": {"name": {"identifier": "side"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Positions"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetRightmostSideOfSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "side"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "side"}, {"InvocationExpression": [{"IdentifierName": "GetRightmostSideOfSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"SubtractExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "side"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minCoord"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckForRightmostCoordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "side"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "labelIsolatedLine"}, "arguments": [{"name": {"identifier": "e"}}, {"value": "0"}]}}, "elseStmt": {"expression": {"name": {"identifier": "labelIsolatedLine"}, "arguments": [{"name": {"identifier": "e"}}, {"value": "1"}]}}, "condition": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "isNull"}, "arguments": [{"value": "0"}]}}]}, "condition": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isIsolated"}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "edgesList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edgesList"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsIsolated"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "IsNull"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LabelIsolatedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LabelIsolatedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "expression": {"scope": {"name": {"identifier": "nodeEdgeStack"}}, "name": {"identifier": "pop"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "MarkHalfEdge"}}, "name": {"identifier": "isMarked"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"name": {"identifier": "buildLine"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "nodeEdgeStack"}}, "name": {"identifier": "empty"}}}}]}, "cs_ast": {"Block": [{"WhileStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeEdgeStack"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeEdgeStack"}, {"IdentifierName": "Pop"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "IsMarked"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "len"}, "initializer": {"name": {"identifier": "length"}, "arguments": [{"name": {"identifier": "v"}}]}}]}}, {"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "len"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}}, {"operator": "DIVIDE", "right": {"name": {"identifier": "len"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}}, {"operator": "DIVIDE", "right": {"name": {"identifier": "len"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "z"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Length"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}, {"IdentifierName": "len"}]}]}, {"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "len"}]}]}, {"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Z"}]}, {"IdentifierName": "len"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "min"}}, "value": {"name": {"identifier": "min"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "max"}}, "value": {"name": {"identifier": "max"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "min"}}, "value": {"name": {"identifier": "max"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "max"}}, "value": {"name": {"identifier": "min"}}}}]}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "min"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Min"}, {"IdentifierName": "min"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Max"}, {"IdentifierName": "max"}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "min"}, {"IdentifierName": "max"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Min"}, {"IdentifierName": "max"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Max"}, {"IdentifierName": "min"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toLineString"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "min"}}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "max"}}, {"value": "0"}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Min"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Max"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "singletonList"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "condition": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"name": {"identifier": "getPoints"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "ArrayList"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetPoints"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "cmp0"}, "initializer": {"scope": {"name": {"identifier": "ds0"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "ds1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "cmp1"}, "initializer": {"scope": {"name": {"identifier": "ds1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "ds0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isFail"}, "initializer": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "cmp1"}}, "left": {"name": {"identifier": "cmp0"}}}, "left": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "cmp0"}}}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isFail"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ds0"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ds1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ds1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ds0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "cmp0"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "cmp0"}, {"IdentifierName": "cmp1"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"IdentifierName": "isFail"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "getEmptyMultiPoint"}}}]}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "bdyPts"}, "initializer": {"name": {"identifier": "computeBoundaryCoordinates"}, "arguments": [{"name": {"identifier": "mLine"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPoint"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "bdyPts"}}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "bdyPts"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiPointFromCoords"}, "arguments": [{"name": {"identifier": "bdyPts"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geom"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetEmptyMultiPoint"}, {"ArgumentList": "()"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeBoundaryCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mLine"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bdyPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "bdyPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bdyPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "clz"}}, {"type": {"name": {"identifier": "ArrayList"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEquivalentClass"}, "arguments": [{"name": {"identifier": "other"}}]}}}, {"expression": {"scope": {}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "other"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsEquivalentClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TestTree"}}, "name": {"identifier": "t"}, "initializer": {"type": {"name": {"identifier": "TestTree"}}, "arguments": [{"value": "2"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "build"}}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "getRoot"}}, "name": {"identifier": "getLevel"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "boundablesAtLevel"}, "arguments": [{"value": "0"}]}, "name": {"identifier": "size"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "boundablesAtLevel"}, "arguments": [{"value": "1"}]}, "name": {"identifier": "size"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "boundablesAtLevel"}, "arguments": [{"operator": "MINUS", "expression": {"value": "1"}}]}, "name": {"identifier": "size"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "query"}, "arguments": [{"value": "0.5"}, {"value": "0.5"}]}, "name": {"identifier": "size"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TestTree"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TestTree"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Build"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Root"}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "Level"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "BoundablesAtLevel"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "BoundablesAtLevel"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "BoundablesAtLevel"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.5"}]}, {"Argument": [{"NumericLiteralExpression": "0.5"}]}]}]}, {"IdentifierName": "Count"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "Q"}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "eindex"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "Q"}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "e"}}}}}, {"body": {"statements": [{"expression": {"operator": "PLUS", "target": {"name": {"identifier": "Q"}}, "value": {"index": {"name": {"identifier": "eindex"}}, "name": {"name": {"identifier": "e"}}}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "elen"}}, "left": {"name": {"identifier": "eindex"}}}, "initialization": [{"operator": "ASSIGN", "target": {"name": {"identifier": "eindex"}}, "value": {"value": "1"}}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "eindex"}}}]}, {"expression": {"name": {"identifier": "Q"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": "Q"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": "eindex"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Q"}, {"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ForStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eindex"}, {"NumericLiteralExpression": "1"}]}, {"LessThanExpression": [{"IdentifierName": "eindex"}, {"IdentifierName": "elen"}]}, {"PostIncrementExpression": [{"IdentifierName": "eindex"}]}, {"Block": [{"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "Q"}, {"ElementAccessExpression": [{"IdentifierName": "e"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "eindex"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "Q"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "dim0"}, "initializer": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "getDimension"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "dim1"}, "initializer": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "getDimension"}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "GREATER", "right": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "getNumPoints"}}, "left": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "getNumPoints"}}}}, {"expression": {"value": "1"}}]}, "condition": {"operator": "AND", "right": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "dim1"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "dim0"}}}}}, {"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "dim0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "dim1"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Dimension"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Dimension"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "dim0"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "dim1"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}]}, {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "NumPoints"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "NumPoints"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "dim0"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "dim1"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isPointContainedInBoundary"}, "arguments": [{"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isLineStringContainedInBoundary"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "comp"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isContainedInBoundary"}, "arguments": [{"name": {"identifier": "comp"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPoint"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsPointContainedInBoundary"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsLineStringContainedInBoundary"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsContainedInBoundary"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "comp"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childToRemove"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "childToRemove"}}, "value": {"name": {"identifier": "childBoundable"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "item"}}, "left": {"scope": {"inner": {"type": {"name": {"identifier": "ItemBoundable"}}, "expression": {"name": {"identifier": "childBoundable"}}}}, "name": {"identifier": "getItem"}}}}]}, "condition": {"type": {"name": {"identifier": "ItemBoundable"}}, "expression": {"name": {"identifier": "childBoundable"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "childToRemove"}}]}}, {"expression": {"value": "true"}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "childToRemove"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "ChildBoundables"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "childBoundable"}, {"NullLiteralExpression": "null"}]}, {"InvocationExpression": [{"IdentifierName": "ReferenceEquals"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundable"}, {"IdentifierName": "Item"}]}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "childToRemove"}, {"IdentifierName": "childBoundable"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "childToRemove"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "ChildBoundables"}]}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childToRemove"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "index"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "size"}}}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "index"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "copy"}, "arguments": [{}]}, "name": {"identifier": "selfAdd"}, "arguments": [{"name": {"identifier": "y"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"AddExpression": [{"ThisExpression": "this"}, {"IdentifierName": "y"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "a"}}, {"type": {"name": {"identifier": "GeometryPredicate"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "within"}, "arguments": [{"name": {"identifier": "mask"}}]}}]}, "type": {"type": "BOOLEAN"}, "name": {"identifier": "isTrue"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mask"}, {"IdentifierName": "Within"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryCollection"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"operator": "MINUS", "expression": {"value": "1"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isSimple"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsSimple"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "quadtree"}}, "value": {"type": {"name": {"identifier": "Quadtree"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"scope": {"name": {"identifier": "quadtree"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "env"}}, {"name": {"identifier": "ring"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_quadtree"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILinearRing"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_rings"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_rings"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_quadtree"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "g"}}}}, "name": {"identifier": "isClosed"}}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "g"}}}}, {"thenStmt": {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MultiLineString"}}, "expression": {"name": {"identifier": "g"}}}}, "name": {"identifier": "isClosed"}}}, "condition": {"type": {"name": {"identifier": "MultiLineString"}}, "expression": {"name": {"identifier": "g"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "ILineString"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "g"}]}]}, {"IdentifierName": "IsClosed"}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IMultiLineString"}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IMultiLineString"}, {"IdentifierName": "g"}]}]}, {"IdentifierName": "IsClosed"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "posEnv"}, "initializer": {"name": {"identifier": "ensureExtent"}, "arguments": [{"name": {"identifier": "itemEnv"}}, {"name": {"identifier": "minExtent"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "posEnv"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnsureExtent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}, {"Argument": [{"IdentifierName": "_minExtent"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "posEnv"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "transformCoordinates"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "TransformCoordinates"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "writeRepeatedSqrt"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "1.0"}]}]}}, {"expression": {"name": {"identifier": "writeRepeatedSqrt"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": ".999999999999"}]}]}}, {"expression": {"name": {"identifier": "writeRepeatedSqrt"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}, "name": {"identifier": "divide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "10"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteRepeatedSqrt"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteRepeatedSqrt"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": ".999999999999"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteRepeatedSqrt"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}, {"IdentifierName": "Divide"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "atomicGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, {}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "g"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryCollectionIterator"}}, "name": {"identifier": "it"}, "initializer": {"type": {"name": {"identifier": "GeometryCollectionIterator"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gi"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "atomicGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "gi"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "gi"}}}}}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IGeometryCollection"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "atomicGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"CastExpression": [{"IdentifierName": "IGeometryCollection"}, {"IdentifierName": "g"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "gi"}, {"IdentifierName": "IGeometryCollection"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "atomicGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "gi"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "restrictToPolygons"}, "arguments": [{"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "g1"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "RestrictToPolygons"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "checkLoc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "checkPt"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "testLoc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOfAfter"}, "arguments": [{"name": {"identifier": "testPt"}}, {"name": {"identifier": "checkLoc"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "checkLoc"}}, "left": {"name": {"identifier": "testLoc"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LengthIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}, {"Argument": [{"IdentifierName": "loc1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "loc2"}, {"IdentifierName": "loc1"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc2"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt1"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt2"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "e1"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "3"}, {"value": "4"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "e2"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"name": {"identifier": "e1"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "e2"}}, "name": {"identifier": "getMinX"}}, {"value": "1E-5"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "2"}, {"scope": {"name": {"identifier": "e2"}}, "name": {"identifier": "getMaxX"}}, {"value": "1E-5"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "3"}, {"scope": {"name": {"identifier": "e2"}}, "name": {"identifier": "getMinY"}}, {"value": "1E-5"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "4"}, {"scope": {"name": {"identifier": "e2"}}, "name": {"identifier": "getMaxY"}}, {"value": "1E-5"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e2"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"NumericLiteralExpression": "1E-5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e2"}, {"IdentifierName": "MaxX"}]}]}, {"Argument": [{"NumericLiteralExpression": "1E-5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e2"}, {"IdentifierName": "MinY"}]}]}, {"Argument": [{"NumericLiteralExpression": "1E-5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e2"}, {"IdentifierName": "MaxY"}]}]}, {"Argument": [{"NumericLiteralExpression": "1E-5"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "last"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "mid"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"name": {"identifier": "last"}}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "swap"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "i"}}, {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "last"}}}]}}]}, "compare": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "mid"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "last"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "i"}, {"IdentifierName": "mid"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Swap"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SubtractExpression": [{"IdentifierName": "last"}, {"IdentifierName": "i"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "orig"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "save"}, "initializer": {"name": {"identifier": "oNext"}}}]}}, {"expression": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "setNext"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}, "name": {"identifier": "setNext"}, "arguments": [{"name": {"identifier": "save"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsEquals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Orig"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "ONext"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Sym"}, {"IdentifierName": "Next"}]}, {"IdentifierName": "e"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "Next"}]}, {"IdentifierName": "save"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"index": {"name": {"identifier": "targetIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "targetIndex"}}, {"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}]}]}, {"IdentifierName": "Geometry"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "Y"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "X"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopesIntersect"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"expression": {"scope": {"name": {"identifier": "PreparedLineStringIntersects"}}, "name": {"identifier": "intersects"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopesIntersect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedLineStringIntersects"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "LinearComponentExtracter"}}, "arguments": [{"name": {"identifier": "lines"}}, {"name": {"identifier": "forceToLineString"}}]}]}}, {"expression": {"name": {"identifier": "lines"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}, {"Argument": [{"IdentifierName": "forceToLineString"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "lines"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "copy"}}}]}}, {"expression": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "clamp"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}, {"expression": {"name": {"identifier": "loc"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LinearLocation"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "Clamp"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "loc"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PreparedGeometry"}}, "name": {"identifier": "prepGeom"}, "initializer": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "prepGeom"}}, "name": {"identifier": "containsProperly"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepGeom"}, {"IdentifierName": "ContainsProperly"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "buildKdTree"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "queryEnv"}}, "value": {"name": {"identifier": "pts"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "queryEnv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryEnv"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "resultCoords"}, "initializer": {"scope": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "toCoordinates"}, "arguments": [{"name": {"identifier": "result"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "resultCoords"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildKdTree"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "query"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"IdentifierName": "ToCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultCoords"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktExpected"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BoundaryOp"}}, "name": {"identifier": "op"}, "initializer": {"type": {"name": {"identifier": "BoundaryOp"}}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "bnRule"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "boundary"}, "initializer": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getBoundary"}}}]}}, {"expression": {"scope": {"name": {"identifier": "boundary"}}, "name": {"identifier": "normalize"}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "boundary"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "expected"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktExpected"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "BoundaryOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BoundaryOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "bnRule"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "op"}, {"IdentifierName": "GetBoundary"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "boundary"}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "boundary"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "avg"}, "arguments": [{"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMinX"}}, {"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMaxX"}}]}, {"name": {"identifier": "avg"}, "arguments": [{"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMinY"}}, {"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMaxY"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "Avg"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MaxX"}]}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "Avg"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MinY"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MaxY"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "visit"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "visitor"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Visit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "JSONParser"}}, "name": {"identifier": "parser"}, "initializer": {"type": {"name": {"identifier": "JSONParser"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"typeArguments": [{"name": {"identifier": "String"}}, {"name": {"identifier": "Object"}}], "name": {"identifier": "Map"}}, "name": {"identifier": "geometryMap"}, "initializer": {"type": {"typeArguments": [{"name": {"identifier": "String"}}, {"name": {"identifier": "Object"}}], "name": {"identifier": "Map"}}, "expression": {"scope": {"name": {"identifier": "parser"}}, "name": {"identifier": "parse"}, "arguments": [{"name": {"identifier": "reader"}}]}}}], "annotations": [{"memberValue": {"value": "unchecked"}, "name": {"identifier": "SuppressWarnings"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "geometryFactory"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geometryFactory"}}, "value": {"scope": {}, "name": {"identifier": "getGeometryFactory"}, "arguments": [{"name": {"identifier": "geometryMap"}}]}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geometryFactory"}}, "value": {"scope": {}, "name": {"identifier": "gf"}}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"scope": {}, "name": {"identifier": "gf"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "geometryMap"}}, {"name": {"identifier": "geometryFactory"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"type": {"name": {"identifier": "ParseException"}}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"scope": {"scope": {"scope": {"scope": {"name": {"identifier": "org"}}, "name": {"identifier": "json"}}, "name": {"identifier": "simple"}}, "name": {"identifier": "parser"}}, "name": {"identifier": "ParseException"}}, "name": {"identifier": "e"}}}, {"body": {"statements": [{"expression": {"type": {"name": {"identifier": "ParseException"}}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "IOException"}}, "name": {"identifier": "e"}}}]}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "JsonSerializer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeoJsonSerializer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"UsingStatement": [{"VariableDeclaration": [{"IdentifierName": "StringReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringReader"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "json"}]}]}]}]}]}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "TObject"}]}]}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "JsonTextReader"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sr"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "g"}}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "g"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "ILineString"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "lineString"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_container"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineString"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SineStarFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "SineStarFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setArmLengthRatio"}, "arguments": [{"value": "0.1"}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumArms"}, "arguments": [{"value": "20"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createSineStar"}}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SineStarFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geomFact"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "_origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "_size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "ArmLengthRatio"}]}, {"NumericLiteralExpression": "0.1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumArms"}]}, {"NumericLiteralExpression": "20"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateSineStar"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "rand"}}, "value": {"type": {"name": {"identifier": "Random"}}, "arguments": [{"name": {"identifier": "seed"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "rand"}}}}, {"expression": {"scope": {"name": {"identifier": "rand"}}, "name": {"identifier": "nextDouble"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_rand"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_rand"}, {"ObjectCreationExpression": [{"IdentifierName": "Random"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_seed"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rand"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "arguments": [{"name": {"identifier": "factory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "build"}, "arguments": [{"name": {"identifier": "startDE"}}]}}, {"expression": {"name": {"identifier": "er"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_factory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "Build"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startDE"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "er"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LengthIndexOfPoint"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthIndexOfPoint"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "result"}}]}}, {"tryBlock": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "method"}}, "name": {"identifier": "invoke"}, "arguments": [{"name": {"identifier": "target"}}, {"name": {"identifier": "args"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Throwable"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "getCause"}}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "expression": {"name": {"identifier": "t"}}}}, "condition": {"type": {"name": {"identifier": "RuntimeException"}}, "expression": {"name": {"identifier": "t"}}}}, {"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"name": {"identifier": "invocationErrMsg"}, "arguments": [{"name": {"identifier": "ex"}}]}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "InvocationTargetException"}}, "name": {"identifier": "ex"}}}, {"body": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "getMessage"}}]}}, {"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "getMessage"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Object"}, {"VariableDeclarator": "result"}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "method"}, {"IdentifierName": "Invoke"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "target"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "TargetInvocationException"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "InnerException"}]}]}]}]}]}, {"ThrowStatement": [{"IdentifierName": "t"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "Message"}]}]}]}]}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Exception"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "Message"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "QuadEdgeTriangle"}}}, "name": {"identifier": "neigh"}, "initializer": {"elementType": {"name": {"identifier": "QuadEdgeTriangle"}}, "levels": [{"dimension": {"value": "3"}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "neigh"}}}, "value": {"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "expression": {"scope": {"scope": {"name": {"identifier": "getEdge"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "sym"}}, "name": {"identifier": "getData"}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "neigh"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "QuadEdgeTriangle"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "neigh"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"CastExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "Data"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "neigh"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "coll"}, "initializer": {"name": {"identifier": "getBoundaryNodes"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "coll"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, "value": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "copy"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "coll"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "BoundaryNodes"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coll"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Node"}, {"IdentifierName": "coll"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"CastExpression": [{"IdentifierName": "Coordinate"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "graphNode"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "newNode"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "addNode"}, "arguments": [{"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "newNode"}}, "name": {"identifier": "setLabel"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"scope": {"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"index": {"name": {"identifier": "argIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getNodeIterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}, {"IdentifierName": "Nodes"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "newNode"}, {"IdentifierName": "SetLabel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "nodedSegStrings"}}, "value": {"name": {"identifier": "inputSegmentStrings"}}}}, {"expression": {"name": {"identifier": "snapRound"}, "arguments": [{"name": {"identifier": "inputSegmentStrings"}}, {"name": {"identifier": "li"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nodedSegStrings"}, {"IdentifierName": "inputSegmentStrings"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SnapRound"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputSegmentStrings"}]}, {"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "lLoc"}, "initializer": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "rLoc"}, "initializer": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}}]}}, {"thenStmt": {"expression": {"value": "1"}}, "elseStmt": {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "rLoc"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "lLoc"}}}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "rLoc"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "lLoc"}}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "lLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"EqualsExpression": [{"IdentifierName": "rLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "lLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"EqualsExpression": [{"IdentifierName": "rLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compose"}, "arguments": [{"name": {"identifier": "reflectionInstance"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compose"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ReflectionInstance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t0"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t0"}}, "name": {"identifier": "reflect"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "0"}, {"operator": "MINUS", "expression": {"value": "1"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t1"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "rotationInstance"}, "arguments": [{"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"name": {"identifier": "t0"}}, {"name": {"identifier": "t1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t0"}, {"IdentifierName": "Reflect"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "RotationInstance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "t0"}]}, {"Argument": [{"IdentifierName": "t1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t0"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "0"}, {"value": "10"}, {"value": "10"}, {"value": "0"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t0"}}, "name": {"identifier": "translate"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t1"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "0"}, {"value": "0"}, {"operator": "MINUS", "expression": {"value": "1"}}, {"value": "1"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"name": {"identifier": "t0"}}, {"name": {"identifier": "t1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t0"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "t0"}]}, {"Argument": [{"IdentifierName": "t1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t0"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"value": "10"}, {"value": "0"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t0"}}, "name": {"identifier": "rotate"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}]}}, {"expression": {"scope": {"name": {"identifier": "t0"}}, "name": {"identifier": "translate"}, "arguments": [{"value": "0"}, {"operator": "MINUS", "expression": {"value": "10"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t1"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"value": "0"}, {"value": "0"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t1"}}, "name": {"identifier": "rotate"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"name": {"identifier": "t0"}}, {"name": {"identifier": "t1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t0"}, {"IdentifierName": "Rotate"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t0"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t1"}, {"IdentifierName": "Rotate"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "t0"}]}, {"Argument": [{"IdentifierName": "t1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ConsistentAreaTester"}}, "name": {"identifier": "cat"}, "initializer": {"type": {"name": {"identifier": "ConsistentAreaTester"}}, "arguments": [{"name": {"identifier": "graph"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValidArea"}, "initializer": {"scope": {"name": {"identifier": "cat"}}, "name": {"identifier": "isNodeConsistentArea"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "SELF_INTERSECTION"}}, {"scope": {"name": {"identifier": "cat"}}, "name": {"identifier": "getInvalidPoint"}}]}}}, {}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValidArea"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "DUPLICATE_RINGS"}}, {"scope": {"name": {"identifier": "cat"}}, "name": {"identifier": "getInvalidPoint"}}]}}}]}, "condition": {"scope": {"name": {"identifier": "cat"}}, "name": {"identifier": "hasDuplicateRings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConsistentAreaTester"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConsistentAreaTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cat"}, {"IdentifierName": "IsNodeConsistentArea"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isValidArea"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "SelfIntersection"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cat"}, {"IdentifierName": "InvalidPoint"}]}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cat"}, {"IdentifierName": "HasDuplicateRings"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "DuplicateRings"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cat"}, {"IdentifierName": "InvalidPoint"}]}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "AND", "right": {"scope": {"index": {"value": "1"}, "name": {"scope": {}, "name": {"identifier": "elt"}}}, "name": {"identifier": "isEqualOnSide"}, "arguments": [{"index": {"value": "1"}, "name": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "elt"}}}, {"name": {"identifier": "side"}}]}, "left": {"scope": {"index": {"value": "0"}, "name": {"scope": {}, "name": {"identifier": "elt"}}}, "name": {"identifier": "isEqualOnSide"}, "arguments": [{"index": {"value": "0"}, "name": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "elt"}}}, {"name": {"identifier": "side"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "IsEqualOnSide"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "side"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "IsEqualOnSide"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"IdentifierName": "side"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"type": {"type": "DOUBLE"}}, "left": {"name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "name"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetGeometryReturnType"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}]}]}, {"TypeOfExpression": [{"PredefinedType": "double"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Vector2D"}}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Vector2D"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "SimpleMCSweepLineIntersector"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "SimpleMCSweepLineIntersector"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "merge"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}, "name": {"identifier": "getLabel"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "Edges"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "Merge"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "Label"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "siteCoords"}}, "value": {"name": {"identifier": "unique"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "toCoordinateArray"}, "arguments": [{"name": {"identifier": "coords"}}]}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_siteCoords"}, {"InvocationExpression": [{"IdentifierName": "Unique"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "writeAndReadSqrt"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "compare": {"operator": "LESS", "right": {"value": "10000"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "10000"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteAndReadSqrt"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "segLen"}, "initializer": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ptLen"}, "initializer": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dz"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "z"}}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "z"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "pz"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "DIVIDE", "right": {"name": {"identifier": "segLen"}}, "left": {"name": {"identifier": "ptLen"}}}}, "left": {"name": {"identifier": "dz"}}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "z"}}}}]}}, {"expression": {"name": {"identifier": "pz"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Z"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Z"}]}, {"MultiplyExpression": [{"IdentifierName": "dz"}, {"ParenthesizedExpression": [{"DivideExpression": [{"IdentifierName": "ptLen"}, {"IdentifierName": "segLen"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pz"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkDivideMultiply"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}, {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkDivideMultiply"}, "arguments": [{"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "39.4"}]}, {"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "10"}]}, {"value": "1e-30"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDivideMultiply"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDivideMultiply"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "39.4"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "envelope"}, "initializer": {"scope": {"name": {"identifier": "geometry"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bisectY"}, "initializer": {"scope": {"name": {"identifier": "SafeBisectorFinder"}}, "name": {"identifier": "getBisectorY"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geometry"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMinX"}}, {"name": {"identifier": "bisectY"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "getMaxX"}}, {"name": {"identifier": "bisectY"}}]}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometry"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SafeBisectorFinder"}, {"IdentifierName": "GetBisectorY"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "geometry"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"IdentifierName": "bisectY"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "MaxX"}]}]}, {"Argument": [{"IdentifierName": "bisectY"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TopologyPreservingSimplifier"}}, "name": {"identifier": "tss"}, "initializer": {"type": {"name": {"identifier": "TopologyPreservingSimplifier"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "tss"}}, "name": {"identifier": "setDistanceTolerance"}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, {"expression": {"scope": {"name": {"identifier": "tss"}}, "name": {"identifier": "getResultGeometry"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TopologyPreservingSimplifier"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TopologyPreservingSimplifier"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tss"}, {"IdentifierName": "DistanceTolerance"}]}, {"IdentifierName": "distanceTolerance"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tss"}, {"IdentifierName": "GetResultGeometry"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "factory"}}, "value": {"scope": {"name": {"identifier": "lineString"}}, "name": {"identifier": "getFactory"}}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "factory"}}}}, {"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addEdge"}, "arguments": [{"name": {"identifier": "lineString"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_factory"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_factory"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "lineString"}, {"IdentifierName": "Factory"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "AddEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineString"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "shell"}, "initializer": {"name": {"identifier": "getLinearRing"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "shell"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "p"}}]}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "PointLocation"}}, "name": {"identifier": "isInRing"}, "arguments": [{"name": {"identifier": "p"}}, {"scope": {"name": {"identifier": "shell"}}, "name": {"identifier": "getCoordinates"}}]}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "hole"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"scope": {"name": {"identifier": "hole"}}, "name": {"identifier": "containsPoint"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "LinearRing"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shell"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsPointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shell"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "_holes"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hole"}, {"IdentifierName": "ContainsPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "ConstraintVertex"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "constraintVertexMap"}}, "name": {"identifier": "put"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, {"name": {"identifier": "v"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Vertex"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConstraintVertex"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_constraintVertexMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "v"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "containsPoint"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "_shellList"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "ContainsPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "indexOfFromStart"}, "arguments": [{"name": {"identifier": "inputPt"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IndexOfFromStart"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"name": {"identifier": "o"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"operator": "AND", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "p1"}}]}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "p0"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "o"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "LineSegment"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineSegment"}, {"IdentifierName": "o"}]}]}]}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_p0"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_p1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "siteCoords"}}, "value": {"scope": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "extractUniqueCoordinates"}, "arguments": [{"name": {"identifier": "geom"}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_siteCoords"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"IdentifierName": "ExtractUniqueCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sites"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "writer"}, "initializer": {"type": {"name": {"identifier": "WKTWriter"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "writer"}}, "name": {"identifier": "writeFormatted"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKTWriter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTWriter"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "writer"}, {"IdentifierName": "WriteFormatted"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edgeRings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaximalEdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "MaximalEdgeRing"}}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "geometryFactory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "linkDirectedEdgesForMinimalEdgeRings"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "minEdgeRings"}, "initializer": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "buildMinimalRings"}}}]}}, {"expression": {"scope": {"name": {"identifier": "edgeRings"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "minEdgeRings"}}]}}]}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdgeRing"}}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInResult"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "edgeRings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "dirEdges"}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInResult"}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "EdgeRing"}]}, {"NullLiteralExpression": "null"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MaximalEdgeRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaximalEdgeRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "_geometryFactory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "LinkDirectedEdgesForMinimalEdgeRings"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "BuildMinimalRings"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "minEdgeRings"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeRings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "edgeRings"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getEdges"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}, "name": {"identifier": "csFactory"}, "initializer": {"type": {"name": {"identifier": "PackedCoordinateSequenceFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "cs2D"}, "initializer": {"name": {"identifier": "createTestSequence"}, "arguments": [{"name": {"identifier": "csFactory"}}, {"value": "10"}, {"value": "2"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "cs3D"}, "initializer": {"scope": {"name": {"identifier": "csFactory"}}, "name": {"identifier": "create"}, "arguments": [{"value": "10"}, {"value": "3"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "cs2D"}}, {"value": "0"}, {"name": {"identifier": "cs3D"}}, {"value": "0"}, {"scope": {"name": {"identifier": "cs3D"}}, "name": {"identifier": "size"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "isEqual"}, "arguments": [{"name": {"identifier": "cs2D"}}, {"name": {"identifier": "cs3D"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PackedCoordinateSequenceFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateTestSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "csFactory"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "csFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cs2D"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "cs3D"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cs3D"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "IsEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cs2D"}]}, {"Argument": [{"IdentifierName": "cs3D"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "sign"}, "initializer": {"thenExpr": {"value": "1.0"}, "elseExpr": {"operator": "MINUS", "expression": {"value": "1.0"}}, "condition": {"inner": {"name": {"identifier": "isPositiveArea"}}}}}]}}, {"expression": {"name": {"identifier": "centroid3"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "triangleCent3"}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "area2"}, "initializer": {"name": {"identifier": "area2"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}]}}, {"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "cg3"}}, "name": {"identifier": "x"}}, "value": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "triangleCent3"}}, "name": {"identifier": "x"}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "area2"}}, "left": {"name": {"identifier": "sign"}}}}}}, {"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "cg3"}}, "name": {"identifier": "y"}}, "value": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "triangleCent3"}}, "name": {"identifier": "y"}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "area2"}}, "left": {"name": {"identifier": "sign"}}}}}}, {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "areasum2"}}, "value": {"operator": "MULTIPLY", "right": {"name": {"identifier": "area2"}}, "left": {"name": {"identifier": "sign"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"ParenthesizedExpression": [{"IdentifierName": "isPositiveArea"}]}, {"NumericLiteralExpression": "1.0"}, {"UnaryMinusExpression": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Centroid3"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "_triangleCent3"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Area2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cg3"}, {"IdentifierName": "X"}]}, {"MultiplyExpression": [{"MultiplyExpression": [{"IdentifierName": "sign"}, {"IdentifierName": "area2"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_triangleCent3"}, {"IdentifierName": "X"}]}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cg3"}, {"IdentifierName": "Y"}]}, {"MultiplyExpression": [{"MultiplyExpression": [{"IdentifierName": "sign"}, {"IdentifierName": "area2"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_triangleCent3"}, {"IdentifierName": "Y"}]}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "_areasum2"}, {"MultiplyExpression": [{"IdentifierName": "sign"}, {"IdentifierName": "area2"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "c"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MULTIPLY", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "splitter"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "abig"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "c"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ahi"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "abig"}}, "left": {"name": {"identifier": "c"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "alo"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "ahi"}}, "left": {"name": {"identifier": "a"}}}}]}}, {"expression": {"name": {"identifier": "alo"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "splitter"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "c"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "c"}, {"IdentifierName": "abig"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "a"}, {"IdentifierName": "ahi"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "alo"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "itemEnv"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "o"}, "initializer": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "printItemEnvelopes"}, "arguments": [{"type": {"name": {"identifier": "List"}}, "expression": {"name": {"identifier": "o"}}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "condition": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}, "condition": {"type": {"name": {"identifier": "List"}}, "expression": {"name": {"identifier": "o"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "tree"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"name": {"identifier": "itemEnv"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"PredefinedType": "object"}, {"IdentifierName": "tree"}, {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "IList"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "printItemEnvelopes"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IList"}, {"IdentifierName": "o"}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "IGeometry"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "o"}]}]}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_factory"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}]}]}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "innerRing"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "s0"}}, "name": {"identifier": "getItem"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "searchRing"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "s1"}}, "name": {"identifier": "getItem"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "searchRing"}}, "left": {"name": {"identifier": "innerRing"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isNonNested"}}, "value": {"value": "false"}}}, "condition": {"name": {"identifier": "isInside"}, "arguments": [{"name": {"identifier": "innerRing"}}, {"name": {"identifier": "searchRing"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "s0"}, {"IdentifierName": "Item"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "s1"}, {"IdentifierName": "Item"}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "innerRing"}, {"IdentifierName": "searchRing"}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "container"}, {"IdentifierName": "IsInside"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "innerRing"}]}, {"Argument": [{"IdentifierName": "searchRing"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isNonNested"}, {"FalseLiteralExpression": "false"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "anglePrev"}, "initializer": {"scope": {"name": {"identifier": "Angle"}}, "name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "angleNext"}, "initializer": {"scope": {"name": {"identifier": "Angle"}}, "name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "anglePrev"}}, "left": {"name": {"identifier": "angleNext"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "angleNext"}, {"IdentifierName": "anglePrev"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "kml"}, "initializer": {"scope": {"name": {"identifier": "kmlWriter"}}, "name": {"identifier": "write"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "kmlNorm"}, "initializer": {"name": {"identifier": "normalizeKML"}, "arguments": [{"name": {"identifier": "kml"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "expectedKMLNorm"}, "initializer": {"name": {"identifier": "normalizeKML"}, "arguments": [{"name": {"identifier": "expectedKML"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"scope": {"name": {"identifier": "kmlNorm"}}, "name": {"identifier": "equalsIgnoreCase"}, "arguments": [{"name": {"identifier": "expectedKMLNorm"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "expectedKMLNorm"}}, "left": {"operator": "PLUS", "right": {"value": "\n  Expected KML: "}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "kmlNorm"}}, "left": {"value": "\nGenerated KML:  "}}}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEqual"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": "()"}]}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "writer"}]}, {"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistance"}}}, {"expression": {"name": {"identifier": "minDistanceLocation"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_minDistanceLocation"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptDist"}}, "name": {"identifier": "getDistance"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_g0"}]}, {"Argument": [{"IdentifierName": "_g1"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptDist"}, {"IdentifierName": "Distance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "stabbedSegments"}, "initializer": {"name": {"identifier": "findStabbedSegments"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "stabbedSegments"}}, "name": {"identifier": "size"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DepthSegment"}}, "name": {"identifier": "ds"}, "initializer": {"type": {"name": {"identifier": "DepthSegment"}}, "expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "stabbedSegments"}}]}}}]}}, {"expression": {"scope": {"name": {"identifier": "ds"}}, "name": {"identifier": "leftDepth"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DepthSegment"}]}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "FindStabbedSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "stabbedSegments"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "stabbedSegments"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "stabbedSegments"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ds"}, {"IdentifierName": "LeftDepth"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistancePolygonLine"}, "arguments": [{"name": {"identifier": "poly"}}, {"scope": {"name": {"identifier": "ringPoly"}}, "name": {"identifier": "getExteriorRing"}}, {"name": {"identifier": "flip"}}]}}, {"thenStmt": {}, "condition": {"name": {"identifier": "isDone"}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nHole"}, "initializer": {"scope": {"name": {"identifier": "ringPoly"}}, "name": {"identifier": "getNumInteriorRing"}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "computeMinDistancePolygonLine"}, "arguments": [{"name": {"identifier": "poly"}}, {"scope": {"name": {"identifier": "ringPoly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "flip"}}]}}, {"thenStmt": {}, "condition": {"name": {"identifier": "isDone"}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "nHole"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistancePolygonLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ringPoly"}, {"IdentifierName": "ExteriorRing"}]}]}, {"Argument": [{"IdentifierName": "flip"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isDone"}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ringPoly"}, {"IdentifierName": "NumInteriorRings"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "nHole"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistancePolygonLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ringPoly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "flip"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isDone"}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "sorted"}}, "value": {"value": "false"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_sorted"}, {"FalseLiteralExpression": "false"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "CHAR"}, "name": {"identifier": "ch"}, "initializer": {"scope": {"name": {"identifier": "str"}}, "name": {"identifier": "charAt"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isHexDigit"}, "arguments": [{"name": {"identifier": "ch"}}]}}}]}, "compare": {"operator": "AND", "right": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "str"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "left": {"operator": "LESS", "right": {"name": {"identifier": "maxCharsToTest"}}, "left": {"name": {"identifier": "i"}}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "maxCharsToTest"}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "str"}, {"IdentifierName": "Length"}]}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "str"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsHexDigit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ch"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dx"}, "initializer": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getWidth"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dy"}, "initializer": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getHeight"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dMax"}, "initializer": {"thenExpr": {"name": {"identifier": "dx"}}, "elseExpr": {"name": {"identifier": "dy"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "dy"}}, "left": {"name": {"identifier": "dx"}}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "level"}, "initializer": {"operator": "PLUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"name": {"identifier": "dMax"}}]}}}]}}, {"expression": {"name": {"identifier": "level"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Width"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Height"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"GreaterThanExpression": [{"IdentifierName": "dx"}, {"IdentifierName": "dy"}]}, {"IdentifierName": "dx"}, {"IdentifierName": "dy"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dMax"}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "level"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Node"}}, "arguments": [{"name": {"identifier": "coord"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Node"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "currentLine"}}, "value": {}}}, {}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "numLines"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "currentLine"}}, "value": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_componentIndex"}, {"IdentifierName": "_numLines"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_currentLine"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": "return;"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_currentLine"}, {"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"thenExpr": {"name": {"identifier": "c"}}, "elseExpr": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "n"}}, "left": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "length"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "n"}]}, {"IdentifierName": "c"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": "{ }"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "boundable1"}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"name": {"identifier": "boundable2"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"IdentifierName": "_boundable1"}, {"IdentifierName": "_boundable2"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "1"}, {"operator": "MINUS", "expression": {"value": "1"}}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "0"}, {"operator": "MINUS", "expression": {"value": "10"}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "10"}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"value": "10"}, {"value": "10"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "3"}}, {"operator": "MINUS", "expression": {"value": "4"}}, {"name": {"identifier": "t"}}, {"value": "4"}, {"value": "3"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "4"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "1"}, {"value": "1"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "0"}, {"value": "10"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "10"}, {"name": {"identifier": "t"}}, {"value": "10"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "3"}}, {"operator": "MINUS", "expression": {"value": "4"}}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "4"}}, {"operator": "MINUS", "expression": {"value": "3"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "4"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "4"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryEditor"}}, "name": {"identifier": "editor"}, "initializer": {"type": {"name": {"identifier": "GeometryEditor"}}, "arguments": [{}]}}]}}, {"expression": {"scope": {"name": {"identifier": "editor"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "g"}}, {"type": {"scope": {"name": {"identifier": "GeometryEditor"}}, "name": {"identifier": "CoordinateSequenceOperation"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "coordSeq"}}]}}]}, "type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "edit"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "coordSeq"}}, {"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geometry"}}]}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"QualifiedName": [{"IdentifierName": "GeometryEditor"}, {"IdentifierName": "CoordinateSequenceOperation"}]}, {"ArgumentList": [{"Argument": [{"ParenthesizedLambdaExpression": [{"ParameterList": [{"Parameter": "x"}, {"Parameter": "y"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordinateSequenceFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryEditor"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "editor"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "operation"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "testcase"}}, "name": {"identifier": "setup"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Runnable"}}, "name": {"identifier": "runnable"}, "initializer": {"scope": {"name": {"identifier": "testcase"}}, "name": {"identifier": "getRunnable"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Thread"}}, "name": {"identifier": "t"}, "initializer": {"type": {"name": {"identifier": "Thread"}}, "arguments": [{"name": {"identifier": "runnable"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "start"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "testcase"}}, "name": {"identifier": "getThreadCount"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "Setup"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "ThreadCount"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "GetRunnable"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Thread"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "runnable"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Start"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "Argument"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "WaitHandles"}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WaitHandle"}, {"IdentifierName": "WaitAll"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testcase"}, {"IdentifierName": "WaitHandles"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"name": {"identifier": "isHole"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "deList"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "adjShell"}, "initializer": {"scope": {"scope": {"inner": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}}}, "name": {"identifier": "getRing"}}, "name": {"identifier": "getShell"}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "setIncluded"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "adjShell"}}, "name": {"identifier": "isIncluded"}}}]}}, {}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "adjShell"}}, "name": {"identifier": "isIncludedSet"}}, "left": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "adjShell"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "deList"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "IsHole"}, {"ReturnStatement": "return;"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_deList"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"ElementAccessExpression": [{"IdentifierName": "_deList"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}]}]}, {"IdentifierName": "Ring"}]}, {"IdentifierName": "Shell"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "adjShell"}, {"NullLiteralExpression": "null"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "adjShell"}, {"IdentifierName": "IsIncludedSet"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsIncluded"}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "adjShell"}, {"IdentifierName": "IsIncluded"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "execute"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coll"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"PredefinedType": "object"}, {"IdentifierName": "coll"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "func"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "segIndex"}, "initializer": {"name": {"identifier": "segmentIndex"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segIndex"}}, "value": {"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"name": {"identifier": "segIndex"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segIndex"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "_segmentIndex"}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "segIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "segIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "build"}}}, {"thenStmt": {"statements": [{}]}, "condition": {"name": {"identifier": "isEmpty"}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "queryInternal"}, "arguments": [{"name": {"identifier": "searchBounds"}}, {"name": {"identifier": "root"}}, {"name": {"identifier": "visitor"}}]}}]}, "condition": {"scope": {"name": {"identifier": "getIntersectsOp"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "getBounds"}}, {"name": {"identifier": "searchBounds"}}]}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "ChildBoundables"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IntersectsOp"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundable"}, {"IdentifierName": "Bounds"}]}]}, {"Argument": [{"IdentifierName": "searchBounds"}]}]}]}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "childBoundable"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Query"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchBounds"}]}, {"Argument": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "childBoundable"}]}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "childBoundable"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "VisitItem"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "childBoundable"}]}]}, {"IdentifierName": "Item"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "ShouldNeverReachHere"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "testE"}, "initializer": {"name": {"identifier": "computePiByMachin"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "err"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "testE"}}, "name": {"identifier": "subtract"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}]}, "name": {"identifier": "doubleValue"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "8"}}, "left": {"name": {"identifier": "err"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputePiByMachin"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testE"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}]}]}]}, {"IdentifierName": "ToDoubleValue"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LessThanExpression": [{"IdentifierName": "err"}, {"MultiplyExpression": [{"NumericLiteralExpression": "8"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "next"}, "initializer": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "index"}}}}]}}, {"body": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "next"}}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "DELETE"}}, "left": {"index": {"name": {"identifier": "next"}}, "name": {"name": {"identifier": "isDeleted"}}}}, "left": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "inputLine"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "next"}}}}}, {"expression": {"name": {"identifier": "next"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"WhileStatement": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "next"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputLine"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_isDeleted"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "next"}]}]}]}, {"IdentifierName": "Delete"}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "next"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "next"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getInteriorPoint"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "InteriorPoint"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord"}, "initializer": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "resultPointList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "isCoveredByLA"}, "arguments": [{"name": {"identifier": "coord"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "IsCoveredByLA"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryFactory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_resultPointList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "5"}, {"value": "6"}, {"value": "6"}, {"value": "6"}, {"value": "5"}, {"value": "7"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "6"}]}, {"Argument": [{"NumericLiteralExpression": "6"}]}, {"Argument": [{"NumericLiteralExpression": "6"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "7"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "IntersectionAdder"}}, "name": {"identifier": "si"}, "initializer": {"type": {"name": {"identifier": "IntersectionAdder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MCIndexNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setSegmentIntersector"}, "arguments": [{"name": {"identifier": "si"}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nodedSegStrings"}}, "value": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getNodedSubstrings"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "numInteriorIntersections"}}}, "value": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "numInteriorIntersections"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IntersectionAdder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "si"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nodedSegStrings"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "numInteriorIntersections"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "NumInteriorIntersections"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PointLocator"}}, "name": {"identifier": "pointLocator"}, "initializer": {"type": {"name": {"identifier": "PointLocator"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "pointLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expected"}}, {"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PointLocator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PointLocator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pointLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "holeArea"}, "initializer": {"scope": {"name": {"identifier": "Area"}}, "name": {"identifier": "ofRing"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "area"}}, "left": {"name": {"identifier": "holeArea"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "SignedArea"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "holeArea"}, {"IdentifierName": "_area"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "i2"}}, "left": {"name": {"identifier": "i1"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i1"}, {"IdentifierName": "i2"}]}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTest"}, "arguments": [{"elementType": {"name": {"identifier": "String"}}, "levels": [{}], "initializer": {}}, {"elementType": {"name": {"identifier": "String"}}, "levels": [{}], "initializer": {}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTest"}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "String"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": "{ }"}]}]}, {"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "String"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": "{ }"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeOrientedDistance"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "ptDist"}}]}}, {"expression": {"name": {"identifier": "computeOrientedDistance"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g0"}}, {"name": {"identifier": "ptDist"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOrientedDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "_ptDist"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOrientedDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "_ptDist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coordinates"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "createParentBoundables"}, "arguments": [{"name": {"identifier": "childBoundables"}}, {"name": {"identifier": "newLevel"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "CreateParentBoundables"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundables"}]}, {"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "SIGNED_RIGHT_SHIFT", "right": {"value": "52"}, "left": {"name": {"identifier": "num"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"RightShiftExpression": [{"IdentifierName": "num"}, {"NumericLiteralExpression": "52"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "width"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "min"}}, "left": {"name": {"identifier": "max"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "width"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "maxAbs"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "min"}}]}, {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "max"}}]}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "scaledInterval"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "maxAbs"}}, "left": {"name": {"identifier": "width"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "level"}, "initializer": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"name": {"identifier": "scaledInterval"}}]}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "MIN_BINARY_EXPONENT"}}, "left": {"name": {"identifier": "level"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "max"}, {"IdentifierName": "min"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "width"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "min"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "max"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "width"}, {"IdentifierName": "maxAbs"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaledInterval"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "level"}, {"IdentifierName": "MinBinaryExponent"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "x"}}]}, "name": {"identifier": "selfMultiply"}, "arguments": [{"name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"MultiplyExpression": [{"InvocationExpression": [{"IdentifierName": "ValueOf"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}, {"IdentifierName": "x"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "AND", "right": {"scope": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "orig"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p1"}}]}, "left": {"scope": {"name": {"identifier": "orig"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p0"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orig"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Sym"}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LocationIndexedLine"}}, "name": {"identifier": "lil"}, "initializer": {"type": {"name": {"identifier": "LocationIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "startIndex2"}, "initializer": {"name": {"identifier": "clampIndex"}, "arguments": [{"name": {"identifier": "startIndex"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "endIndex2"}, "initializer": {"name": {"identifier": "clampIndex"}, "arguments": [{"name": {"identifier": "endIndex"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "resolveStartLower"}, "initializer": {"operator": "EQUALS", "right": {"name": {"identifier": "endIndex2"}}, "left": {"name": {"identifier": "startIndex2"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "startLoc"}, "initializer": {"name": {"identifier": "locationOf"}, "arguments": [{"name": {"identifier": "startIndex2"}}, {"name": {"identifier": "resolveStartLower"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "endLoc"}, "initializer": {"name": {"identifier": "locationOf"}, "arguments": [{"name": {"identifier": "endIndex2"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "ExtractLineByLocation"}}, "name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "startLoc"}}, {"name": {"identifier": "endLoc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LocationIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ClampIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ClampIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "endIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"EqualsExpression": [{"IdentifierName": "startIndex2"}, {"IdentifierName": "endIndex2"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "LocationOf"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startIndex2"}]}, {"Argument": [{"IdentifierName": "resolveStartLower"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "LocationOf"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "endIndex2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ExtractLineByLocation"}, {"IdentifierName": "Extract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "startLoc"}]}, {"Argument": [{"IdentifierName": "endLoc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "computeResultPrecision"}, "arguments": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "union"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResultPrecision"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}, {"MultiplyExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "name": {"identifier": "oca"}, "initializer": {"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "matchEdge"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "ocaMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "oca"}}]}}}]}}, {"expression": {"name": {"identifier": "matchEdge"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OrientedCoordinateArray"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": "matchEdge"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ocaMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}, {"Argument": [{"IdentifierName": "matchEdge"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "matchEdge"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "LONG"}}, "name": {"identifier": "runTime"}, "initializer": {"name": {"identifier": "getRunTime"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "timeFactor"}, "initializer": {"elementType": {"type": "DOUBLE"}, "levels": [{"dimension": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "runTime"}}, "name": {"identifier": "length"}}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "timeFactor"}}}, "value": {"operator": "DIVIDE", "right": {"type": {"type": "DOUBLE"}, "expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "runTime"}}}}, "left": {"type": {"type": "DOUBLE"}, "expression": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "runTime"}}}}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "runTime"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "timeFactor"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "RunTime"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "runTime"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "runTime"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "timeFactor"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"DivideExpression": [{"CastExpression": [{"PredefinedType": "double"}, {"ElementAccessExpression": [{"IdentifierName": "runTime"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"CastExpression": [{"PredefinedType": "double"}, {"ElementAccessExpression": [{"IdentifierName": "runTime"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "timeFactor"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "wktReader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "bufferedReader"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "offset"}}, "left": {"name": {"identifier": "count"}}}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isAtLimit"}, "arguments": [{"name": {"identifier": "geoms"}}]}}, "left": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isAtEndOfFile"}, "arguments": [{"name": {"identifier": "bufferedReader"}}]}}}}, {"expression": {"name": {"identifier": "geoms"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_wktReader"}, {"IdentifierName": "Tokenizer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferedReader"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tokens"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"WhileStatement": [{"LogicalAndExpression": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsAtEndOfTokens"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tokens"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsAtLimit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_wktReader"}, {"IdentifierName": "ReadGeometryTaggedText"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tokens"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_count"}, {"IdentifierName": "Offset"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_count"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geoms"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"name": {"identifier": "xScale"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"name": {"identifier": "yScale"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"value": "0.0"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"IdentifierName": "xScale"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"IdentifierName": "yScale"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "GREATER", "right": {"value": "0"}, "left": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, "left": {"scope": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "p"}}, "name": {"identifier": "x"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, "left": {"scope": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "p"}}, "name": {"identifier": "y"}}}}}, "left": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, "left": {"scope": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "p"}}, "name": {"identifier": "y"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, "left": {"scope": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "p"}}, "name": {"identifier": "x"}}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"GreaterThanExpression": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "_p"}]}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "_p"}]}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "_p"}]}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "_p"}]}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}]}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "componentIndex"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "linear"}}, "name": {"identifier": "getNumGeometries"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lastLine"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linear"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentIndex"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lastLine"}}, "name": {"identifier": "getNumPoints"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "1.0"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_componentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linear"}, {"IdentifierName": "NumGeometries"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linear"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lastLine"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "isMarked"}}, "value": {"name": {"identifier": "isMarked"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "e"}]}]}, {"IdentifierName": "Marked"}]}, {"IdentifierName": "isMarked"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "translate"}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "x"}}}, {"operator": "MINUS", "expression": {"name": {"identifier": "y"}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "scale"}, "arguments": [{"name": {"identifier": "xScale"}}, {"name": {"identifier": "yScale"}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "translate"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}, {"expression": {"name": {"identifier": "trans"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "x"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "y"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Scale"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xScale"}]}, {"Argument": [{"IdentifierName": "yScale"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "trans"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_i"}, "initializer": {"name": {"identifier": "Two_Diff_Head"}, "arguments": [{"name": {"identifier": "a0"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x2"}, "initializer": {"name": {"identifier": "Two_Sum_Head"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "_i"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x1"}, "initializer": {"name": {"identifier": "Two_Sum_Tail"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "_i"}}, {"name": {"identifier": "x2"}}]}}]}}, {"expression": {"name": {"identifier": "x1"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Diff_Head"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Sum_Head"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "_i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Sum_Tail"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "_i"}]}, {"Argument": [{"IdentifierName": "x2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x1"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_i"}, "initializer": {"name": {"identifier": "Two_Diff_Head"}, "arguments": [{"name": {"identifier": "a0"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x0"}, "initializer": {"name": {"identifier": "Two_Diff_Tail"}, "arguments": [{"name": {"identifier": "a0"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "_i"}}]}}]}}, {"expression": {"name": {"identifier": "x0"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Diff_Head"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Diff_Tail"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "_i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_i"}, "initializer": {"name": {"identifier": "Two_Diff_Head"}, "arguments": [{"name": {"identifier": "a0"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x2"}, "initializer": {"name": {"identifier": "Two_Sum_Head"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "_i"}}]}}]}}, {"expression": {"name": {"identifier": "x2"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Diff_Head"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_Sum_Head"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "_i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x2"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p"}}]}}}, {"expression": {"scope": {"name": {"identifier": "PointLocation"}}, "name": {"identifier": "locateInRing"}, "arguments": [{"name": {"identifier": "p"}}, {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "geometries"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "inputWKT"}}}]}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "ParseException"}}, "name": {"identifier": "e"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "inputWKT"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "geometries"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "inputWKT"}, {"Block": [{"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometries"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomWkt"}]}]}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "GeoAPI"}, {"IdentifierName": "IO"}]}, {"IdentifierName": "ParseException"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NetTopologySuite"}, {"IdentifierName": "Utilities"}]}, {"IdentifierName": "Assert"}]}, {"IdentifierName": "ShouldNeverReachHere"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geometries"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "name": {"identifier": "mbc"}, "initializer": {"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "arguments": [{"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "exPts"}, "initializer": {"scope": {"name": {"identifier": "mbc"}}, "name": {"identifier": "getExtremalPoints"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "actual"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "exPts"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "actualRadius"}, "initializer": {"scope": {"name": {"identifier": "mbc"}}, "name": {"identifier": "getRadius"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "actualCentre"}, "initializer": {"scope": {"name": {"identifier": "mbc"}}, "name": {"identifier": "getCentre"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"scope": {"name": {"identifier": "actual"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "expected"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isEqual"}}, "value": {"value": "true"}}}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "expected"}}, "name": {"identifier": "isEmpty"}}, "left": {"scope": {"name": {"identifier": "actual"}}, "name": {"identifier": "isEmpty"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "expected"}}, "left": {"operator": "PLUS", "right": {"value": ", Expected = "}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "actual"}}, "left": {"value": "Actual = "}}}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEqual"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS", "right": {"name": {"identifier": "TOLERANCE"}}, "left": {"scope": {"name": {"identifier": "expectedCentre"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "actualCentre"}}]}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "expectedCentre"}}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS", "right": {"name": {"identifier": "TOLERANCE"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "actualRadius"}}, "left": {"name": {"identifier": "expectedRadius"}}}]}}]}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "expectedRadius"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoMinimumBoundingCircleTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}, {"Argument": [{"IdentifierName": "expectedWKT"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nOverlaps"}}, "value": {"value": "0"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "edge0"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i0"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "edge1"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i1"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "computeIntersects"}, "arguments": [{"name": {"identifier": "edge0"}}, {"name": {"identifier": "edge1"}}, {"name": {"identifier": "si"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i1"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i1"}, "initializer": {"scope": {"name": {"identifier": "edges1"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i0"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i0"}, "initializer": {"scope": {"name": {"identifier": "edges0"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edges0"}, {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edges1"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge0"}]}, {"Argument": [{"IdentifierName": "edge1"}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "createMultiPoint"}, "arguments": [{"elementType": {"name": {"identifier": "Point"}}, "levels": [{"dimension": {"value": "0"}}]}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coordinates"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "name": {"identifier": "points"}, "initializer": {"elementType": {"name": {"identifier": "Point"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "ptSeq"}, "initializer": {"scope": {"name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "getDimension"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "coordinates"}}, {"name": {"identifier": "i"}}, {"name": {"identifier": "ptSeq"}}, {"value": "0"}, {"value": "1"}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "points"}}}, "value": {"name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "ptSeq"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "points"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "coordinates"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "coordinates"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequenceFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": "{ }"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IPoint"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IPoint"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequenceFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Ordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "points"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CreatePoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateMultiPoint"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "points"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RelateNode"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "RelateNode"}}, "expression": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}, "name": {"identifier": "computeLabelling"}, "arguments": [{"name": {"identifier": "arg"}}]}}]}, "compare": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "ni"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "RelateNode"}, {"IdentifierName": "_nodes"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}, {"IdentifierName": "ComputeLabelling"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_arg"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segSetMutInt"}}, "name": {"identifier": "process"}, "arguments": [{"name": {"identifier": "segStrings"}}, {"name": {"identifier": "intDetector"}}]}}, {"expression": {"scope": {"name": {"identifier": "intDetector"}}, "name": {"identifier": "hasIntersection"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segSetMutInt"}, {"IdentifierName": "Process"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}, {"Argument": [{"IdentifierName": "intDetector"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intDetector"}, {"IdentifierName": "HasIntersection"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "location"}}}, "value": {"name": {"identifier": "locValue"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "locValue"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "buildEdgeStringsForUnprocessedNodes"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsForUnprocessedNodes"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "123456789"}}, {"operator": "MINUS", "expression": {"value": "40"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "381039468754763d"}, {"value": "123456789"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "123456789"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "40"}]}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "381039468754763d"}]}, {"Argument": [{"NumericLiteralExpression": "123456789"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isContained"}, "initializer": {"scope": {"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getGeometry"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "isContained"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "Geometry"}]}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isContained"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "dirEdge"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "fromNode"}}, "left": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getFromNode"}}}}, {"thenStmt": {"expression": {"index": {"value": "1"}, "name": {"name": {"identifier": "dirEdge"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "fromNode"}}, "left": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "dirEdge"}}}, "name": {"identifier": "getFromNode"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "fromNode"}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "fromNode"}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "dirEdge"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "db"}, "initializer": {"type": {"name": {"identifier": "DoubleBits"}}, "arguments": [{"name": {"identifier": "d"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "db"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DoubleBits"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DoubleBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "d"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "toCoordinates"}, "arguments": [{"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "queryEnv"}}]}, {"name": {"identifier": "includeRepeated"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Arrays"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "result"}}]}}, {"expression": {"scope": {"name": {"identifier": "Arrays"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "expectedCoord"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "expectedCoord"}}, "name": {"identifier": "length"}}, "left": {"operator": "PLUS", "right": {"value": ", expected count = "}, "left": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "length"}}, "left": {"value": "Result count = "}}}}, {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "expectedCoord"}}, "name": {"identifier": "length"}}, "left": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isMatch"}, "initializer": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "result"}}, {"name": {"identifier": "expectedCoord"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"value": "Expected result coordinates not found"}, {"name": {"identifier": "isMatch"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Build"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktInput"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestQuery"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"IdentifierName": "queryEnv"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IOUtil"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktExpected"}]}]}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "rotationInstance"}, "arguments": [{"name": {"identifier": "rotationAngle"}}, {"scope": {"scope": {"name": {"identifier": "dim"}}, "name": {"identifier": "getCentre"}}, "name": {"identifier": "x"}}, {"scope": {"scope": {"name": {"identifier": "dim"}}, "name": {"identifier": "getCentre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "trans"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "rotationAngle"}}}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_rotationAngle"}, {"NumericLiteralExpression": "0.0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_dim"}, {"IdentifierName": "Centre"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "RotationInstance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_rotationAngle"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trans"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PerformanceTestRunner"}}, "name": {"identifier": "runner"}, "initializer": {"type": {"name": {"identifier": "PerformanceTestRunner"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "runner"}}, "name": {"identifier": "runInternal"}, "arguments": [{"name": {"identifier": "clz"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PerformanceTestRunner"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "runner"}, {"IdentifierName": "RunInternal"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "clz"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "createBox"}, "arguments": [{"name": {"identifier": "minx"}}, {"name": {"identifier": "minx"}}, {"name": {"identifier": "nSide"}}, {"name": {"identifier": "segLen"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "ring"}}, {}]}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateBox"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "minx"}]}, {"Argument": [{"IdentifierName": "minx"}]}, {"Argument": [{"IdentifierName": "nSide"}]}, {"Argument": [{"IdentifierName": "segLen"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"value": "100"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "ceil"}, "arguments": [{"operator": "MULTIPLY", "right": {"value": "100"}, "left": {"name": {"identifier": "d"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Ceiling"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "d"}, {"NumericLiteralExpression": "100"}]}]}]}]}, {"NumericLiteralExpression": "100"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "elementEnv"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "elementEnv"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "checkIntersectionWithLineStrings"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rectEnv"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elementEnv"}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckIntersectionWithLineStrings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "n"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "t"}, "initializer": {"type": {"name": {"identifier": "Triangle"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "pt"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "area3D"}, "initializer": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "area3D"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedValue"}}, {"name": {"identifier": "area3D"}}, {"name": {"identifier": "TOLERANCE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Triangle"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Area3D"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedValue"}]}, {"Argument": [{"IdentifierName": "area3D"}]}, {"Argument": [{"IdentifierName": "Tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "sigDigits"}, "initializer": {"name": {"identifier": "getMaximumSignificantDigits"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "otherSigDigits"}, "initializer": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "getMaximumSignificantDigits"}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "sigDigits"}}]}}, "name": {"identifier": "compareTo"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"name": {"identifier": "otherSigDigits"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"IdentifierName": "sigDigits"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "otherSigDigits"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "array"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "array"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"PredefinedType": "object"}, {"IdentifierName": "array"}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "o"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "GREATER", "right": {"value": "1"}, "left": {"name": {"identifier": "ordinateIndex"}}}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"index": {"name": {"identifier": "ordinateIndex"}}, "name": {"name": {"identifier": "indexMap"}}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "ordinateIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_indexMap"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "ordinateIndex"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"type": {"type": "BOOLEAN"}}, "left": {"name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "name"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetGeometryReturnType"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}]}]}, {"TypeOfExpression": [{"PredefinedType": "bool"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "coveredBy"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "CoveredBy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "filter"}, "arguments": [{}]}}, {"body": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Filter"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_geometries"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "ioGeom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "TopologyPreservingSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"name": {"identifier": "ioGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyPreservingSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ioGeom"}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "getM"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "M"}}}], "selector": {"name": {"identifier": "ordinateIndex"}}}, {"expression": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "NaN"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ExtendedCoordinate"}, {"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}]}, {"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "X"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Y"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Z"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "M"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "M"}]}]}]}, {"SwitchSection": [{"DefaultSwitchLabel": "default:"}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "NaN"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PointLocator"}}, "name": {"identifier": "locator"}, "initializer": {"type": {"name": {"identifier": "PointLocator"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "locator"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "testGeom"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "representativePts"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PointLocator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "RepresentativePoints"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locator"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "representativePoint"}]}, {"Argument": [{"IdentifierName": "testGeom"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "visitor"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "newEdges"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "remove"}}}, {"expression": {"scope": {"name": {"identifier": "newEdges"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCollapsedEdge"}}]}}]}, "condition": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "isCollapsed"}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "newEdges"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edgeList"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "IsCollapsed"}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgesToRemove"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "newEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "CollapsedEdge"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edgesToRemove"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edgeList"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "newEdges"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edgeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "verts"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "constraintVertexMap"}}, "name": {"identifier": "containsKey"}, "arguments": [{"name": {"identifier": "coord"}}]}}, {"expression": {"scope": {"name": {"identifier": "verts"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "ConstraintVertex"}}, "arguments": [{"name": {"identifier": "coord"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "verts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_constraintVertexMap"}, {"IdentifierName": "ContainsKey"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "verts"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "ConstraintVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "verts"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "X"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "Y"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "z"}}, "value": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "Z"}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Z"}]}, {"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "threwParseEx"}, "initializer": {"value": "false"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "getMessage"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "threwParseEx"}}, "value": {"value": "true"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "ParseException"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "threwParseEx"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "GeoAPI"}, {"IdentifierName": "IO"}]}, {"IdentifierName": "ParseException"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "Message"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "threwParseEx"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "threwParseEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "elseStmt": {"expression": {"name": {"identifier": "sym"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"scope": {"scope": {"name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orig"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dest"}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}, {"ReturnStatement": [{"IdentifierName": "Sym"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {}}]}, "elseStmt": {"statements": [{"expression": {"name": {"identifier": "x"}}}]}, "condition": {"scope": {}, "name": {"identifier": "ge"}, "arguments": [{"name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"InvocationExpression": [{"IdentifierName": "GreaterOrEqualThan"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}, {"ThisExpression": "this"}, {"IdentifierName": "x"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ConstraintVertex"}}, "name": {"identifier": "v"}, "initializer": {}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "v"}}, "value": {"scope": {"name": {"identifier": "vertexFactory"}}, "name": {"identifier": "createVertex"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "seg"}}]}}}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "v"}}, "value": {"type": {"name": {"identifier": "ConstraintVertex"}}, "arguments": [{"name": {"identifier": "p"}}]}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "vertexFactory"}}}}, {"expression": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "setOnConstraint"}, "arguments": [{"value": "true"}]}}, {"expression": {"name": {"identifier": "v"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConstraintVertex"}, {"VariableDeclarator": "v"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_vertexFactory"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "v"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_vertexFactory"}, {"IdentifierName": "CreateVertex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "v"}, {"ObjectCreationExpression": [{"IdentifierName": "ConstraintVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "IsOnConstraint"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"IdentifierName": "v"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "verticalSlices"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "parentBoundables"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "parentBoundables"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "createParentBoundablesFromVerticalSlice"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "verticalSlices"}}}, {"name": {"identifier": "newLevel"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "verticalSlices"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "parentBoundables"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "verticalSlices"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "TItem"}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "verticalSlices"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateParentBoundablesFromVerticalSlice"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "verticalSlices"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "tempList"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parentBoundables"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "parentBoundables"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "boundablesAtLevel"}, "arguments": [{"name": {"identifier": "level"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "BoundablesAtLevel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "MINUS", "right": {"inner": {"operator": "REMAINDER", "right": {"name": {"identifier": "max"}}, "left": {"inner": {"operator": "MINUS", "expression": {"name": {"identifier": "index"}}}}}}, "left": {"name": {"identifier": "max"}}}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"operator": "REMAINDER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "index"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"IdentifierName": "max"}, {"ParenthesizedExpression": [{"ModuloExpression": [{"ParenthesizedExpression": [{"UnaryMinusExpression": [{"IdentifierName": "index"}]}]}, {"IdentifierName": "max"}]}]}]}]}]}]}, {"ReturnStatement": [{"ModuloExpression": [{"IdentifierName": "index"}, {"IdentifierName": "max"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "buildEdgeStringsForNonDegree2Nodes"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsForNonDegree2Nodes"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getVertexEdges"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "MarkHalfEdge"}}, "name": {"identifier": "isMarked"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"name": {"identifier": "process"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "HalfEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "GetVertexEdges"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "HalfEdge"}, {"IdentifierName": "edges"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "IsMarked"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Process"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_factory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_lines"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "j"}}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "temp"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "m"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "m"}}}, "value": {"index": {"name": {"identifier": "j"}}, "name": {"name": {"identifier": "m"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "j"}}, "name": {"name": {"identifier": "m"}}}, "value": {"name": {"identifier": "temp"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "i"}, {"IdentifierName": "j"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "m"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "m"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "m"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "j"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "m"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "j"}]}]}]}, {"IdentifierName": "temp"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "intPt"}, "initializer": {}}]}}, {"tryBlock": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "intPt"}}, "value": {"scope": {"name": {"identifier": "HCoordinate"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q1"}}, {"name": {"identifier": "q2"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "intPt"}}, "value": {"name": {"identifier": "nearestEndpoint"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q1"}}, {"name": {"identifier": "q2"}}]}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "NotRepresentableException"}}, "name": {"identifier": "e"}}}]}, {"expression": {"name": {"identifier": "intPt"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": "intPt"}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "intPt"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "HCoordinate"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q1"}]}, {"Argument": [{"IdentifierName": "q2"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "NotRepresentableException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "intPt"}, {"InvocationExpression": [{"IdentifierName": "NearestEndpoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q1"}]}, {"Argument": [{"IdentifierName": "q2"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "intPt"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distanceTolerance"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "nVertices"}}, "left": {"value": "100.0"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"name": {"identifier": "IOUtil"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineDense"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "Densifier"}}, "name": {"identifier": "densify"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "distanceTolerance"}}]}}}]}}, {"expression": {"name": {"identifier": "lineDense"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"NumericLiteralExpression": "100.0"}, {"IdentifierName": "nVertices"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IOUtil"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Densifier"}, {"IdentifierName": "Densify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "distanceTolerance"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "lineDense"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "y"}}}}}, "left": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "x"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Y"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "RelateNode"}}, "arguments": [{"name": {"identifier": "coord"}}, {"type": {"name": {"identifier": "EdgeEndBundleStar"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "RelateNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeEndBundleStar"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "originalEx"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "originalEx"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CommonBitsOp"}}, "name": {"identifier": "cbo"}, "initializer": {"type": {"name": {"identifier": "CommonBitsOp"}}, "arguments": [{"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "resultEP"}, "initializer": {"scope": {"name": {"identifier": "cbo"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "originalEx"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "resultEP"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "resultEP"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "originalEx"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex2"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ApplicationException"}, {"VariableDeclarator": "originalEx"}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom0"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "originalEx"}, {"IdentifierName": "ex"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CommonBitsOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CommonBitsOp"}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbo"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultEP"}, {"IdentifierName": "IsValid"}]}]}, {"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}, {"ReturnStatement": [{"IdentifierName": "resultEP"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "test"}, "arguments": [{"name": {"identifier": "geoms"}}, {"name": {"identifier": "minimumMeasure"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "Test"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"IdentifierName": "minimumMeasure"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "inputPts"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newPts"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newPts"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "0"}}]}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newPts"}}, "value": {"scope": {"name": {"identifier": "DouglasPeuckerLineSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "inputPts"}}, {"name": {"identifier": "distanceTolerance"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "newPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DouglasPeuckerLineSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_container"}, {"IdentifierName": "DistanceTolerance"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "isLine"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "IsLine"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Quadtree"}}, "name": {"identifier": "index"}, "initializer": {"type": {"name": {"identifier": "Quadtree"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "GeometryFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"thenStmt": {}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}, {"name": {"identifier": "geom"}}]}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}}]}]}]}}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DelegateGeometryFilter"}, {"ArgumentList": "()"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "DoFilter"}, {"AnonymousMethodExpression": [{"ParameterList": [{"Parameter": [{"IdentifierName": "IGeometry"}]}]}, {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "tmpGeometry"}, {"IdentifierName": "IGeometryCollection"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tmpGeometry"}, {"IdentifierName": "EnvelopeInternal"}]}]}, {"Argument": [{"IdentifierName": "tmpGeometry"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"name": {"identifier": "computePoint"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "dist0"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"name": {"identifier": "computePoint"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "dist1"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "checkNodePosition"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"value": "0"}]}}]}, "elseStmt": {"statements": [{"expression": {"name": {"identifier": "checkNodePosition"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"operator": "MINUS", "expression": {"value": "1"}}]}}, {"expression": {"name": {"identifier": "checkNodePosition"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p0"}}, {"value": "1"}]}}]}, "condition": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "computePoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"IdentifierName": "dist0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "computePoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"IdentifierName": "dist1"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNodePosition"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNodePosition"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNodePosition"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "newseq"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "size"}}, {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getDimension"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}]}}, {"expression": {"name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "seq"}}, {"value": "0"}, {"name": {"identifier": "newseq"}}, {"value": "0"}, {"name": {"identifier": "n"}}]}}, {"thenStmt": {"statements": [{"body": {"expression": {"name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "seq"}}, {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "n"}}}, {"name": {"identifier": "newseq"}}, {"name": {"identifier": "i"}}, {"value": "1"}]}}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "n"}}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "n"}}}}, {"expression": {"name": {"identifier": "newseq"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Ordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Copy"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "newseq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "n"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "n"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "size"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Copy"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"SubtractExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"IdentifierName": "newseq"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newseq"}]}]}}, {"java_ast": {"statements": [{"expression": {"thenExpr": {"value": "1"}, "elseExpr": {"thenExpr": {"operator": "MINUS", "expression": {"value": "1"}}, "elseExpr": {"value": "0"}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LineDissolver"}}, "name": {"identifier": "dissolve"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineDissolver"}, {"IdentifierName": "Dissolve"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"name": {"identifier": "test"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"value": "false"}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Throwable"}}, "name": {"identifier": "e"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Test"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearRing"}}}, "name": {"identifier": "holeLR"}, "initializer": {"elementType": {"name": {"identifier": "LinearRing"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "holeLR"}}}, "value": {"scope": {"inner": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}, "name": {"identifier": "getLinearRing"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "getLinearRing"}}, {"name": {"identifier": "holeLR"}}]}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_holes"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_holes"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "holeLR"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_holes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "LinearRing"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "LinearRing"}]}, {"Argument": [{"IdentifierName": "holeLR"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compareDoubles"}, "arguments": [{"name": {"identifier": "centreY"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"name": {"identifier": "o1"}}}}, "name": {"identifier": "getBounds"}}}]}, {"name": {"identifier": "centreY"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"name": {"identifier": "o2"}}}}, "name": {"identifier": "getBounds"}}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareDoubles"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CentreY"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "o1"}, {"IdentifierName": "Bounds"}]}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "CentreY"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "o2"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nonSimpleLocation"}}, "value": {}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"thenStmt": {"expression": {"name": {"identifier": "isSimpleLinearGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isSimpleLinearGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "MultiLineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isSimpleMultiPoint"}, "arguments": [{"type": {"name": {"identifier": "MultiPoint"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "MultiPoint"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isSimplePolygonal"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isSimpleGeometryCollection"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nonSimpleLocation"}, {"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimpleLinearGeometry"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IMultiLineString"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimpleLinearGeometry"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IMultiPoint"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimpleMultiPoint"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IMultiPoint"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygonal"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimplePolygonal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IGeometryCollection"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimpleGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "iterator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "j"}, "initializer": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "iterator"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Comparable"}}, "name": {"identifier": "aElement"}, "initializer": {"type": {"name": {"identifier": "Comparable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Comparable"}}, "name": {"identifier": "bElement"}, "initializer": {"type": {"name": {"identifier": "Comparable"}}, "expression": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comparison"}, "initializer": {"scope": {"name": {"identifier": "aElement"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "bElement"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "comparison"}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "comparison"}}}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}, "left": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}}}, {"thenStmt": {"statements": [{"expression": {"value": "1"}}]}, "condition": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}}, {"thenStmt": {"statements": [{"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "condition": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "j"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IComparable"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IComparable"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "j"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "aElement"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bElement"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "comparison"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "comparison"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "j"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "area"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Area"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "geomFactory"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "WKTReader"}}, "name": {"identifier": "rdr"}, "initializer": {"type": {"name": {"identifier": "WKTReader"}}, "arguments": [{"name": {"identifier": "geomFactory"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "2"}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "2"}, {"value": "false"}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "3"}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "runWKBTest"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "3"}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "g"}, {"InvocationExpression": [{"IdentifierName": "SetDimension"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "g"}, {"InvocationExpression": [{"IdentifierName": "SetDimension"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunWKBTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "rings"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isSimpleLinearGeometry"}, "arguments": [{"name": {"identifier": "ring"}}]}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"IdentifierName": "rings"}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsSimpleLinearGeometry"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "originalEx"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "symDifference"}, "arguments": [{"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "originalEx"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CommonBitsOp"}}, "name": {"identifier": "cbo"}, "initializer": {"type": {"name": {"identifier": "CommonBitsOp"}}, "arguments": [{"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "resultEP"}, "initializer": {"scope": {"name": {"identifier": "cbo"}}, "name": {"identifier": "symDifference"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "originalEx"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "resultEP"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "resultEP"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "originalEx"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex2"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ApplicationException"}, {"VariableDeclarator": "originalEx"}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom0"}, {"IdentifierName": "SymmetricDifference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "originalEx"}, {"IdentifierName": "ex"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CommonBitsOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CommonBitsOp"}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbo"}, {"IdentifierName": "SymDifference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultEP"}, {"IdentifierName": "IsValid"}]}]}, {"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}, {"ReturnStatement": [{"IdentifierName": "resultEP"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeOrientedDistance"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "ptDist"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptDist"}}, "name": {"identifier": "getDistance"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOrientedDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_g0"}]}, {"Argument": [{"IdentifierName": "_g1"}]}, {"Argument": [{"IdentifierName": "_ptDist"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptDist"}, {"IdentifierName": "Distance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "dist"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "orientedDistance"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "OrientedDistance"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "CascadedPolygonUnion"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CascadedPolygonUnion"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "setAllLocations"}, "arguments": [{"name": {"identifier": "location"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "SetAllLocations"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_location"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "min"}}, {"name": {"identifier": "max"}}, {"name": {"identifier": "visitor"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "min"}]}, {"Argument": [{"IdentifierName": "max"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "createEmptyResult"}, "arguments": [{"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "INTERSECTION"}}, {}, {"name": {"identifier": "other"}}, {"name": {"identifier": "factory"}}]}}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}, "left": {"scope": {}, "name": {"identifier": "isEmpty"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"name": {"identifier": "other"}}}]}}, {"expression": {"scope": {"name": {"identifier": "GeometryCollectionMapper"}}, "name": {"identifier": "map"}, "arguments": [{"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {}}, {"type": {"scope": {"name": {"identifier": "GeometryMapper"}}, "name": {"identifier": "MapOp"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "map"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "condition": {"scope": {}, "name": {"identifier": "isGeometryCollection"}}}, {"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{}]}}, {"expression": {"name": {"identifier": "checkNotGeometryCollection"}, "arguments": [{"name": {"identifier": "other"}}]}}, {"expression": {"scope": {"name": {"identifier": "SnapIfNeededOverlayOp"}}, "name": {"identifier": "overlayOp"}, "arguments": [{}, {"name": {"identifier": "other"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "INTERSECTION"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"IdentifierName": "IsEmpty"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "CreateEmptyResult"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Intersection"}]}]}, {"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"IdentifierName": "_factory"}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "IsGeometryCollection"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryCollectionMapper"}, {"IdentifierName": "Map"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometryCollection"}, {"ThisExpression": "this"}]}]}, {"Argument": [{"SimpleLambdaExpression": [{"Parameter": "g"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckNotGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SnapIfNeededOverlayOp"}, {"IdentifierName": "Overlay"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Intersection"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "covers"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comp0"}, "initializer": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "p0"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "comp0"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "comp0"}}}}, {"expression": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineSegment"}, {"IdentifierName": "o"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_p0"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"NotEqualsExpression": [{"IdentifierName": "comp0"}, {"NumericLiteralExpression": "0"}]}, {"IdentifierName": "comp0"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_p1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"expression": {"name": {"identifier": "compare"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentIndex"}}, {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "dist"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeIntersection"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "EdgeIntersection"}, {"IdentifierName": "obj"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Compare"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentIndex"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "Distance"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p0"}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p1"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "v"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"operator": "DIVIDE", "right": {"value": "2.05"}, "left": {"name": {"identifier": "SNAP_TOLERANCE"}}}, "left": {"name": {"identifier": "dist"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"DivideExpression": [{"IdentifierName": "SnapTolerance"}, {"NumericLiteralExpression": "2.05"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c2"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "c1"}}, "name": {"identifier": "equals3D"}, "arguments": [{"name": {"identifier": "c2"}}]}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c3"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "22"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "c1"}}, "name": {"identifier": "equals3D"}, "arguments": [{"name": {"identifier": "c3"}}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "Equals3D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "22"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsFalse"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "Equals3D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c3"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "writeFormatted"}, "arguments": [{"name": {"identifier": "geometry"}}, {"value": "false"}, {"name": {"identifier": "writer"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteFormatted"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "_isFormatted"}]}, {"Argument": [{"IdentifierName": "writer"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"value": "2d"}, "left": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}, {"NumericLiteralExpression": "2d"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "lineSeg"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getLineSegment"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "projPt"}, "initializer": {"scope": {"name": {"identifier": "lineSeg"}}, "name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "encroachPt"}}]}}]}}, {"expression": {"name": {"identifier": "projPt"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "LineSegment"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineSeg"}, {"IdentifierName": "Project"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "encroachPt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "projPt"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "cos"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "cos"}, "arguments": [{"name": {"identifier": "angle"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "sin"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sin"}, "arguments": [{"name": {"identifier": "angle"}}]}}]}}, {"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "sin"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "cos"}}, "left": {"name": {"identifier": "x"}}}}, {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "cos"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "sin"}}, "left": {"name": {"identifier": "x"}}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Cos"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "angle"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Sin"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "angle"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "cos"}]}, {"MultiplyExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "sin"}]}]}]}, {"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "sin"}]}, {"MultiplyExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "cos"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "min"}, "initializer": {"name": {"identifier": "v1"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"name": {"identifier": "v2"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"name": {"identifier": "v2"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"name": {"identifier": "v3"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"name": {"identifier": "v3"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"name": {"identifier": "v4"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"name": {"identifier": "v4"}}}}, {"expression": {"name": {"identifier": "min"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "v1"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "min"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "min"}, {"IdentifierName": "v2"}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "v3"}, {"IdentifierName": "min"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "min"}, {"IdentifierName": "v3"}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "v4"}, {"IdentifierName": "min"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "min"}, {"IdentifierName": "v4"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "min"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segChains"}, "initializer": {"scope": {"name": {"identifier": "MonotoneChainBuilder"}}, "name": {"identifier": "getChains"}, "arguments": [{"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "getCoordinates"}}, {"name": {"identifier": "segStr"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "mc"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "getEnvelope"}}, {"name": {"identifier": "mc"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MonotoneChainBuilder"}, {"IdentifierName": "GetChains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"IdentifierName": "segStr"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segChains"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "Envelope"}]}]}, {"Argument": [{"IdentifierName": "mc"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intersectingGeoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "elem"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "intersectingGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "elem"}}]}}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "disjointGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "elem"}}]}}, "condition": {"scope": {"scope": {"name": {"identifier": "elem"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "env"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "intersectingGeoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "elem"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intersectingGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elem"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "disjointGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elem"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intersectingGeoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "setToEnd"}, "arguments": [{"name": {"identifier": "linear"}}]}}, {}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "linear"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linear"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentIndex"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getNumPoints"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "1.0"}}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "linear"}}, "name": {"identifier": "getNumPoints"}}, "left": {"name": {"identifier": "segmentIndex"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_componentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "linear"}, {"IdentifierName": "NumGeometries"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetToEnd"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linear"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "linear"}, {"IdentifierName": "NumPoints"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linear"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "posIndex"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "posIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeEdgeEndLabels"}, "arguments": [{"scope": {"name": {"identifier": "geomGraph"}}, "name": {"identifier": "getBoundaryNodeRule"}}]}}, {"expression": {"name": {"identifier": "checkAreaLabelsConsistent"}, "arguments": [{"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeEdgeEndLabels"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryGraph"}, {"IdentifierName": "BoundaryNodeRule"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CheckAreaLabelsConsistent"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "c"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MULTIPLY", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "splitter"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "abig"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "c"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ahi"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "abig"}}, "left": {"name": {"identifier": "c"}}}}]}}, {"expression": {"name": {"identifier": "ahi"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "splitter"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "c"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "c"}, {"IdentifierName": "abig"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ahi"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "index"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "index"}}, "value": {"value": "0"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "index"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "index"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "0"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "sinePoly"}, "initializer": {"name": {"identifier": "createSineStar"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"value": "100000.0"}, {"name": {"identifier": "nPts"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pg"}}, "value": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "sinePoly"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "g"}}, "value": {"name": {"identifier": "createSineStar"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}]}, {"value": "100000.0"}, {"value": "100"}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSineStar"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "100000.0"}]}, {"Argument": [{"IdentifierName": "nPts"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_preparedGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sinePoly"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "WaitHandles"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "WaitHandle"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ThreadTestRunner"}, {"IdentifierName": "DefaultThreadCount"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "ComponentCoordinateExtracter"}}, "name": {"identifier": "getCoordinates"}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "targetPointLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ComponentCoordinateExtracter"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetPointLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "modi"}, "initializer": {"operator": "REMAINDER", "right": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}}]}}, {"thenStmt": {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "modi"}}, "value": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "size"}}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "modi"}}}}, {"expression": {"name": {"identifier": "modi"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ModuloExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "Count"}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "modi"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "modi"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "Count"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "modi"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "value": {"type": {"name": {"identifier": "TopologyLocation"}}, "arguments": [{"index": {"value": "0"}, "name": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "location"}}}]}}}, "condition": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "isArea"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "IsArea"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyLocation"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "GetLocations"}]}, {"ArgumentList": "()"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "foundItems"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "addAllItems"}, "arguments": [{"name": {"identifier": "foundItems"}}]}}, {"expression": {"name": {"identifier": "foundItems"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "AddAllItems"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "foundItems"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "foundItems"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "atan2"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Atan2"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "e"}, "initializer": {"name": {"identifier": "makeEdge"}, "arguments": [{"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "dest"}}, {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "orig"}}]}}]}}, {"expression": {"name": {"identifier": "splice"}, "arguments": [{"name": {"identifier": "e"}}, {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "lNext"}}]}}, {"expression": {"name": {"identifier": "splice"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}, {"name": {"identifier": "b"}}]}}, {"expression": {"name": {"identifier": "e"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "MakeEdge"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Dest"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Orig"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Splice"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "LNext"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Splice"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "AxisPlaneCoordinateSequence"}}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "YZ_INDEX"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AxisPlaneCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "YZIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "LinearLocation"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "componentIndex"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "componentIndex"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentFraction"}}, "left": {"name": {"identifier": "segmentFraction"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentFraction"}}, "left": {"name": {"identifier": "segmentFraction"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_componentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "ComponentIndex"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_componentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "ComponentIndex"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentIndex"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentIndex"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segmentFraction"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_segmentFraction"}]}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentFraction"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentFraction"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_segmentFraction"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentFraction"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "expression": {"scope": {"name": {"identifier": "vertexMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "orig"}}]}}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "e"}}}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "dest"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "vertexMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "e"}, {"NullLiteralExpression": "null"}]}, {"NullLiteralExpression": "null"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dest"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "addPolygon"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryCollection"}}, "name": {"identifier": "gc"}, "initializer": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Polygon"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddPolygon"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IGeometryCollection"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IGeometryCollection"}, {"IdentifierName": "geom"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "Geometries"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "process"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "process"}, "arguments": [{"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bisectY"}, "initializer": {"name": {"identifier": "avg"}, "arguments": [{"name": {"identifier": "hiY"}}, {"name": {"identifier": "loY"}}]}}]}}, {"expression": {"name": {"identifier": "bisectY"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Process"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_poly"}, {"IdentifierName": "ExteriorRing"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Process"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Avg"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_hiY"}]}, {"Argument": [{"IdentifierName": "_loY"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "bisectY"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "example1"}}}, {"expression": {"name": {"identifier": "example2"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Example1"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Example2"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "lineString"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addEdge"}, "arguments": [{"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}, {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineString"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "AddEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prev"}]}, {"Argument": [{"IdentifierName": "curr"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "filter"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Filter"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "HalfEdge"}}, "arguments": [{"name": {"identifier": "orig"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "HalfEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "BoundaryOp"}}, "name": {"identifier": "getBoundary"}, "arguments": [{"name": {"identifier": "g"}}, {"scope": {"name": {"identifier": "BoundaryNodeRule"}}, "name": {"identifier": "MONOVALENT_ENDPOINT_BOUNDARY_RULE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryOp"}, {"IdentifierName": "GetBoundary"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryNodeRules"}, {"IdentifierName": "MonoValentEndpointBoundaryRule"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "outerHoleER"}, "initializer": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "getOuterHole"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "setIncluded"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"name": {"identifier": "outerHoleER"}}, "name": {"identifier": "setProcessed"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "outerHoleER"}}, "name": {"identifier": "isProcessed"}}}, "left": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "outerHoleER"}}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "shellList"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "OuterHole"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "outerHoleER"}, {"NullLiteralExpression": "null"}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "outerHoleER"}, {"IdentifierName": "IsProcessed"}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsIncluded"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "outerHoleER"}, {"IdentifierName": "IsProcessed"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "transGeomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "transformGeom"}, "initializer": {"name": {"identifier": "transformLineString"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}, {"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "transformGeom"}}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "transformGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"name": {"identifier": "transGeomList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "transformGeom"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "transGeomList"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "TransformLineString"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "transformGeom"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transGeomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transformGeom"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transGeomList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "pts"}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RotatedRectangleFactory"}}, "name": {"identifier": "rrFact"}, "initializer": {"type": {"name": {"identifier": "RotatedRectangleFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "rr1"}, "initializer": {"scope": {"name": {"identifier": "rrFact"}}, "name": {"identifier": "createRectangle"}, "arguments": [{"value": "100"}, {"value": "20"}, {"name": {"identifier": "angle1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "rr2"}, "initializer": {"scope": {"name": {"identifier": "rrFact"}}, "name": {"identifier": "createRectangle"}, "arguments": [{"value": "100"}, {"value": "20"}, {"name": {"identifier": "angle2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "star"}, "initializer": {"scope": {"name": {"identifier": "rr1"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "rr2"}}]}}]}}, {"expression": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "star"}}, {"name": {"identifier": "rr1"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RotatedRectangleFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rrFact"}, {"IdentifierName": "CreateRectangle"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"IdentifierName": "angle1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rrFact"}, {"IdentifierName": "CreateRectangle"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"IdentifierName": "angle2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rr1"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rr2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "star"}, {"IdentifierName": "rr1"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "parentLine"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "extractCoordinates"}, "arguments": [{"name": {"identifier": "resultSegs"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_resultSegs"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_parentLine"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"name": {"identifier": "numPts"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"name": {"identifier": "createRandomCoord"}, "arguments": [{"name": {"identifier": "getExtent"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isInExtent"}, "arguments": [{"name": {"identifier": "p"}}]}}, "left": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "extentLocator"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, "value": {"name": {"identifier": "p"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "numPts"}}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createMultiPointFromCoords"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"IdentifierName": "NumPoints"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"WhileStatement": [{"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "NumPoints"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateRandomCoord"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Extent"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "_extentLocator"}, {"NullLiteralExpression": "null"}]}, {"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsInExtent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "p"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addShell"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}, "name": {"identifier": "getCoordinates"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "addHole"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "getCoordinates"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddShell"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddHole"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "geomIndex"}}]}}, "left": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "label"}}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "label"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "childBoundables"}}, "name": {"identifier": "isEmpty"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "parentBoundables"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "parentBoundables"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "createNode"}, "arguments": [{"name": {"identifier": "newLevel"}}]}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "sortedChildBoundables"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}, "arguments": [{"name": {"identifier": "childBoundables"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "sortedChildBoundables"}}, {"name": {"identifier": "getComparator"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "parentBoundables"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "createNode"}, "arguments": [{"name": {"identifier": "newLevel"}}]}]}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "getNodeCapacity"}}, "left": {"scope": {"scope": {"name": {"identifier": "lastNode"}, "arguments": [{"name": {"identifier": "parentBoundables"}}]}, "name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"name": {"identifier": "lastNode"}, "arguments": [{"name": {"identifier": "parentBoundables"}}]}, "name": {"identifier": "addChildBoundable"}, "arguments": [{"name": {"identifier": "childBoundable"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "sortedChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "parentBoundables"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundables"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parentBoundables"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CreateNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"IdentifierName": "StableSort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundables"}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "GetComparer"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ForEachStatement": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "sortedChildBoundables"}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "LastNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "parentBoundables"}]}]}]}, {"IdentifierName": "ChildBoundables"}]}, {"IdentifierName": "Count"}]}, {"IdentifierName": "NodeCapacity"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parentBoundables"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CreateNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "LastNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "parentBoundables"}]}]}]}, {"IdentifierName": "AddChildBoundable"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundable"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "parentBoundables"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "snapClean"}, "arguments": [{"name": {"identifier": "geomA"}}, {"name": {"identifier": "geomB"}}, {"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "union"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "SnapClean"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomA"}]}, {"Argument": [{"IdentifierName": "geomB"}]}, {"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "minClearancePts"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearancePts"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "2"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearance"}}, "value": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "MAX_VALUE"}}}}, {"thenStmt": {"statements": [{}]}, "condition": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "geomTree"}, "initializer": {"scope": {"name": {"identifier": "FacetSequenceTreeBuilder"}}, "name": {"identifier": "build"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Object"}}}, "name": {"identifier": "nearest"}, "initializer": {"scope": {"name": {"identifier": "geomTree"}}, "name": {"identifier": "nearestNeighbour"}, "arguments": [{"type": {"name": {"identifier": "MinClearanceDistance"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MinClearanceDistance"}}, "name": {"identifier": "mcd"}, "initializer": {"type": {"name": {"identifier": "MinClearanceDistance"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearance"}}, "value": {"scope": {"name": {"identifier": "mcd"}}, "name": {"identifier": "distance"}, "arguments": [{"type": {"name": {"identifier": "FacetSequence"}}, "expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "nearest"}}}}, {"type": {"name": {"identifier": "FacetSequence"}}, "expression": {"index": {"value": "1"}, "name": {"name": {"identifier": "nearest"}}}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearancePts"}}, "value": {"scope": {"name": {"identifier": "mcd"}}, "name": {"identifier": "getCoordinates"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_minClearancePts"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearancePts"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearance"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "MaxValue"}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FacetSequenceTreeBuilder"}, {"IdentifierName": "BuildSTRtree"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomTree"}, {"IdentifierName": "NearestNeighbour"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "MinClearanceDistance"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MinClearanceDistance"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearance"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mcd"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "nearest"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "nearest"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearancePts"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mcd"}, {"IdentifierName": "Coordinates"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "subdiv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "siteEnv"}, "initializer": {"scope": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "envelope"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "diagramEnv"}}, "value": {"name": {"identifier": "siteEnv"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "expandBy"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"scope": {"name": {"identifier": "diagramEnv"}}, "name": {"identifier": "getWidth"}}, {"scope": {"name": {"identifier": "diagramEnv"}}, "name": {"identifier": "getHeight"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "diagramEnv"}}, "name": {"identifier": "expandBy"}, "arguments": [{"name": {"identifier": "expandBy"}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "diagramEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"name": {"identifier": "clipEnv"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "clipEnv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "vertices"}, "initializer": {"scope": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "toVertices"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subdiv"}}, "value": {"type": {"name": {"identifier": "QuadEdgeSubdivision"}}, "arguments": [{"name": {"identifier": "siteEnv"}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IncrementalDelaunayTriangulator"}}, "name": {"identifier": "triangulator"}, "initializer": {"type": {"name": {"identifier": "IncrementalDelaunayTriangulator"}}, "arguments": [{"name": {"identifier": "subdiv"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "triangulator"}}, "name": {"identifier": "insertSites"}, "arguments": [{"name": {"identifier": "vertices"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_subdiv"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"IdentifierName": "Envelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_diagramEnv"}, {"IdentifierName": "siteEnv"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_diagramEnv"}, {"IdentifierName": "Width"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_diagramEnv"}, {"IdentifierName": "Height"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_diagramEnv"}, {"IdentifierName": "ExpandBy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expandBy"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_clipEnv"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_diagramEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_clipEnv"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"IdentifierName": "ToVertices"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_subdiv"}, {"ObjectCreationExpression": [{"IdentifierName": "QuadEdgeSubdivision"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "siteEnv"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IncrementalDelaunayTriangulator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IncrementalDelaunayTriangulator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_subdiv"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "triangulator"}, {"IdentifierName": "InsertSites"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vertices"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "envDist"}, "initializer": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "distance"}}, "left": {"name": {"identifier": "envDist"}}}}, {"expression": {"scope": {"name": {"identifier": "DistanceOp"}}, "name": {"identifier": "isWithinDistance"}, "arguments": [{}, {"name": {"identifier": "geom"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "envDist"}, {"IdentifierName": "distance"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DistanceOp"}, {"IdentifierName": "IsWithinDistance"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.0"}, {"value": "200.0"}, {"value": "50.0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "withSameZ"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.1"}, {"value": "200.1"}, {"value": "50.1"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "equalInZ"}, "arguments": [{"name": {"identifier": "withSameZ"}}, {"value": "0.2"}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "200.0"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.1"}]}, {"Argument": [{"NumericLiteralExpression": "200.1"}]}, {"Argument": [{"NumericLiteralExpression": "50.1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "EqualInZ"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "withSameZ"}]}, {"Argument": [{"NumericLiteralExpression": "0.2"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "intIndex"}}, "name": {"name": {"identifier": "intPt"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "intIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "comps"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_comps"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "addAllItemsFromOverlapping"}, "arguments": [{"name": {"identifier": "interval"}}, {"name": {"identifier": "foundItems"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "AddAllItemsFromOverlapping"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "interval"}]}, {"Argument": [{"IdentifierName": "foundItems"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "segs"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "createRandomDepthSegment"}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "n"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "segs"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DepthSegment"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "n"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CreateRandomDepthSegment"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segs"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geometries"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geometryArray"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "expression": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "geometryArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometries"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "geometries"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "g"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumDiameter"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getMinimumRectangle"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumDiameter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "GetMinimumRectangle"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "vertexDistance"}, "arguments": [{"name": {"identifier": "fs1"}}, {"name": {"identifier": "fs2"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "minDist"}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "fs2"}}, "name": {"identifier": "size"}}}, "left": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "fs1"}}, "name": {"identifier": "size"}}}}}, {"thenStmt": {"expression": {"name": {"identifier": "minDist"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "minDist"}}}}, {"expression": {"name": {"identifier": "segmentDistance"}, "arguments": [{"name": {"identifier": "fs1"}}, {"name": {"identifier": "fs2"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "minDist"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "minDist"}}}}, {"expression": {"name": {"identifier": "segmentDistance"}, "arguments": [{"name": {"identifier": "fs2"}}, {"name": {"identifier": "fs1"}}]}}, {"expression": {"name": {"identifier": "minDist"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VertexDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fs1"}]}, {"Argument": [{"IdentifierName": "fs2"}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fs1"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fs2"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"IdentifierName": "_minDist"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "_minDist"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"IdentifierName": "_minDist"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SegmentDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fs1"}]}, {"Argument": [{"IdentifierName": "fs2"}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "_minDist"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"IdentifierName": "_minDist"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SegmentDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fs2"}]}, {"Argument": [{"IdentifierName": "fs1"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_minDist"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "reducedGeom"}, "initializer": {"scope": {"name": {"identifier": "GeometryPrecisionReducer"}}, "name": {"identifier": "reducePointwise"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "pm"}}]}}]}}, {"expression": {"name": {"identifier": "reducedGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PrecisionModel"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryPrecisionReducer"}, {"IdentifierName": "Reduce"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "reducedGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getCoordinateInternal"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetCoordinateInternal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isOverlaps"}, "arguments": [{"name": {"identifier": "getDimension"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsOverlaps"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Dimension"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "events"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getInsertEvent"}}, "name": {"identifier": "setDeleteEventIndex"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isDelete"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsDelete"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "InsertEvent"}]}, {"IdentifierName": "DeleteEventIndex"}]}, {"IdentifierName": "i"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"operator": "PLUS", "right": {"name": {"identifier": "ordinate"}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "index"}}}}, "name": {"name": {"identifier": "coords"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Dimension"}]}, {"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "ordinate"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "extractNonCoveredResultNodes"}, "arguments": [{"name": {"identifier": "opCode"}}]}}, {"expression": {"name": {"identifier": "resultPointList"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ExtractNonCoveredResultNodes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_resultPointList"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "componentBuffers"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}, "name": {"identifier": "union"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "ComponentBuffers"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}, {"IdentifierName": "Union"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "width"}, "initializer": {"scope": {"name": {"identifier": "VariableWidthBuffer"}}, "name": {"identifier": "interpolate"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "line"}}}, {"name": {"identifier": "startWidth"}}, {"name": {"identifier": "endWidth"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "VariableWidthBuffer"}}, "name": {"identifier": "vb"}, "initializer": {"type": {"name": {"identifier": "VariableWidthBuffer"}}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "width"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "vb"}}, "name": {"identifier": "getResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Interpolate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "startWidth"}]}, {"Argument": [{"IdentifierName": "endWidth"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "VariableWidthBuffer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "width"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vb"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "merge"}}}, {"expression": {"name": {"identifier": "mergedLineStrings"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Merge"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_mergedLineStrings"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "copy"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "float"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "float"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coords"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_coords"}]}, {"Argument": [{"IdentifierName": "clone"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coords"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PackedFloatCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "clone"}]}, {"Argument": [{"IdentifierName": "Dimension"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addEndpoints"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "eiPrev"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "newEdge"}, "initializer": {"name": {"identifier": "createSplitEdge"}, "arguments": [{"name": {"identifier": "eiPrev"}}, {"name": {"identifier": "ei"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "newEdge"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eiPrev"}}, "value": {"name": {"identifier": "ei"}}}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddEndpoints"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeIntersection"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEnumerator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeIntersection"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeIntersection"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSplitEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eiPrev"}]}, {"Argument": [{"IdentifierName": "ei"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newEdge"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eiPrev"}, {"IdentifierName": "ei"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "minimumLen"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minimumLen"}}, "left": {"name": {"identifier": "len"}}}}, {"expression": {"name": {"identifier": "len"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "len"}, {"IdentifierName": "_minimumLen"}]}, {"ReturnStatement": [{"IdentifierName": "_minimumLen"}]}]}, {"ReturnStatement": [{"IdentifierName": "len"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "i"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "v"}}, "left": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "v"}]}, {"ReturnStatement": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopesIntersect"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "RectangleIntersects"}}, "name": {"identifier": "intersects"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "getGeometry"}}}, {"name": {"identifier": "g"}}]}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"expression": {"scope": {"name": {"identifier": "PreparedPolygonIntersects"}}, "name": {"identifier": "intersects"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopesIntersect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "_isRectangle"}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RectangleIntersects"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "Geometry"}]}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedPolygonIntersects"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "polygonize"}}}, {"expression": {"name": {"identifier": "polyList"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Polygonize"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_polyList"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Vector2D"}}, "arguments": [{"name": {"identifier": "from"}}, {"name": {"identifier": "to"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Vector2D"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "from"}]}, {"Argument": [{"IdentifierName": "to"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union1"}, "initializer": {"name": {"identifier": "unionIterated"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union2"}, "initializer": {"name": {"identifier": "unionCascaded"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaMeasure"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "AreaSimilarityMeasure"}}}}, "name": {"identifier": "measure"}, "arguments": [{"name": {"identifier": "union1"}}, {"name": {"identifier": "union2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "hausMeasure"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "HausdorffSimilarityMeasure"}}}}, "name": {"identifier": "measure"}, "arguments": [{"name": {"identifier": "union1"}}, {"name": {"identifier": "union2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "overallMeasure"}, "initializer": {"scope": {"name": {"identifier": "SimilarityMeasureCombiner"}}, "name": {"identifier": "combine"}, "arguments": [{"name": {"identifier": "areaMeasure"}}, {"name": {"identifier": "hausMeasure"}}]}}]}}, {"expression": {"operator": "GREATER", "right": {"name": {"identifier": "minimumMeasure"}}, "left": {"name": {"identifier": "overallMeasure"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "UnionIterated"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "UnionCascaded"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "AreaSimilarityMeasure"}, {"ArgumentList": "()"}]}]}, {"IdentifierName": "Measure"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "union1"}]}, {"Argument": [{"IdentifierName": "union2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "HausdorffSimilarityMeasure"}, {"ArgumentList": "()"}]}]}, {"IdentifierName": "Measure"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "union1"}]}, {"Argument": [{"IdentifierName": "union2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SimilarityMeasureCombiner"}, {"IdentifierName": "Combine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "areaMeasure"}]}, {"Argument": [{"IdentifierName": "hausMeasure"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"GreaterThanExpression": [{"IdentifierName": "overallMeasure"}, {"IdentifierName": "minimumMeasure"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "area"}, "initializer": {"scope": {"name": {"identifier": "expectedBuffer"}}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "diff"}, "initializer": {"scope": {"name": {"identifier": "actualBuffer"}}, "name": {"identifier": "symDifference"}, "arguments": [{"name": {"identifier": "expectedBuffer"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaDiff"}, "initializer": {"scope": {"name": {"identifier": "diff"}}, "name": {"identifier": "getArea"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "areaDiff"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "frac"}, "initializer": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "POSITIVE_INFINITY"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "frac"}}, "value": {"operator": "DIVIDE", "right": {"name": {"identifier": "area"}}, "left": {"name": {"identifier": "areaDiff"}}}}}, "condition": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "area"}}}}, {"expression": {"operator": "LESS", "right": {"name": {"identifier": "MAX_RELATIVE_AREA_DIFFERENCE"}}, "left": {"name": {"identifier": "frac"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "expectedBuffer"}, {"IdentifierName": "Area"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "actualBuffer"}, {"IdentifierName": "SymmetricDifference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedBuffer"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "diff"}, {"IdentifierName": "Area"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "areaDiff"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "PositiveInfinity"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "area"}, {"NumericLiteralExpression": "0.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "frac"}, {"DivideExpression": [{"IdentifierName": "areaDiff"}, {"IdentifierName": "area"}]}]}]}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "frac"}, {"IdentifierName": "MaxRelativeAreaDifference"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "insertSite"}, "arguments": [{"name": {"identifier": "createVertex"}, "arguments": [{"name": {"identifier": "p"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertSite"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CreateVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "_p0"}, {"IdentifierName": "_p1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "computeResultPrecision"}, "arguments": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "difference"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResultPrecision"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"name": {"identifier": "xShear"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"name": {"identifier": "yShear"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"value": "1.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"value": "0.0"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"IdentifierName": "xShear"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"IdentifierName": "yShear"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}, {"name": {"identifier": "x"}}, {"value": "0.0001"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}, {"name": {"identifier": "y"}}, {"value": "0.0001"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"NumericLiteralExpression": "0.0001"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "y"}]}, {"Argument": [{"NumericLiteralExpression": "0.0001"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "s1"}}, "value": {"name": {"identifier": "s1"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "s2"}}, "value": {"name": {"identifier": "s2"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "side"}}, "value": {"name": {"identifier": "side"}}}}, {"expression": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "setCoordinates"}, "arguments": [{"name": {"identifier": "s1"}}, {"name": {"identifier": "s2"}}]}}, {"expression": {"name": {"identifier": "computeOffsetSegment"}, "arguments": [{"name": {"identifier": "seg1"}}, {"name": {"identifier": "side"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "offset1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_s1"}, {"IdentifierName": "s1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_s2"}, {"IdentifierName": "s2"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_side"}, {"IdentifierName": "side"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_seg1"}, {"IdentifierName": "SetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "s1"}]}, {"Argument": [{"IdentifierName": "s2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOffsetSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_seg1"}]}, {"Argument": [{"IdentifierName": "side"}]}, {"Argument": [{"IdentifierName": "_distance"}]}, {"Argument": [{"IdentifierName": "_offset1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "nameToTestMap"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "test"}}, "name": {"identifier": "getName"}}, {"name": {"identifier": "test"}}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nameToTestMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "test"}, {"IdentifierName": "Name"}]}]}, {"Argument": [{"IdentifierName": "test"}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxSegmentIndex"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMaximumSegmentIndex"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "eiIt"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nonSimpleLocation"}}, "value": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "getCoordinate"}}}}, {"expression": {"value": "true"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "isEndPoint"}, "arguments": [{"name": {"identifier": "maxSegmentIndex"}}]}}}]}, "compare": {"scope": {"name": {"identifier": "eiIt"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "eiIt"}, "initializer": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getEdgeIntersectionList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeIterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "Edges"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "MaximumSegmentIndex"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "EdgeIntersectionList"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "IsEndPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "maxSegmentIndex"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nonSimpleLocation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKT"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "UnaryUnionOp"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geoms"}}, {"name": {"identifier": "geomFact"}}]}}}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "UnaryUnionOp"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geoms"}}]}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "size"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "isEqual"}, "arguments": [{"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKT"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}, {"name": {"identifier": "result"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": "result"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "UnaryUnionOp"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "UnaryUnionOp"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "IsEqual"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}, {"Argument": [{"IdentifierName": "result"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "PreparedPolygon"}}, "arguments": [{"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "PreparedLineString"}}, "arguments": [{"type": {"name": {"identifier": "Lineal"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "Lineal"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "PreparedPoint"}}, "arguments": [{"type": {"name": {"identifier": "Puntal"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "Puntal"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"type": {"name": {"identifier": "BasicPreparedGeometry"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygonal"}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PreparedPolygon"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygonal"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineal"}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PreparedLineString"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILineal"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPuntal"}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PreparedPoint"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPuntal"}, {"IdentifierName": "geom"}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "BasicPreparedGeometry"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "endLine"}}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "EndLine"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeSelect"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}, {"name": {"identifier": "mcs"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeSelect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "_start"}]}, {"Argument": [{"IdentifierName": "_end"}]}, {"Argument": [{"IdentifierName": "mcs"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "bnd"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "bnd"}}, "name": {"identifier": "getBounds"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "bounds"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"name": {"identifier": "env"}}]}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AbstractNode"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "bnd"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "children"}, "initializer": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getChildBoundables"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "child"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "addBounds"}, "arguments": [{"name": {"identifier": "child"}}, {"name": {"identifier": "bounds"}}, {"name": {"identifier": "factory"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "children"}}, "name": {"identifier": "iterator"}}}]}]}]}, "condition": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "bnd"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "bnd"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "IGeometry"}]}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Envelope"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "bnd"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bounds"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "bnd"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "IGeometry"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "IGeometry"}]}]}, {"IdentifierName": "bnd"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "ChildBoundables"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "children"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "addBounds"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "child"}]}, {"Argument": [{"IdentifierName": "bounds"}]}, {"Argument": [{"IdentifierName": "factory"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"scope": {"name": {"identifier": "bufferedReader"}}, "name": {"identifier": "readLine"}}, "name": {"identifier": "trim"}}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "wkbReader"}}, "name": {"identifier": "read"}, "arguments": [{"scope": {"name": {"identifier": "WKBReader"}}, "name": {"identifier": "hexToBytes"}, "arguments": [{"name": {"identifier": "line"}}]}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "offset"}}, "left": {"name": {"identifier": "count"}}}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isAtLimit"}, "arguments": [{"name": {"identifier": "geoms"}}]}}, "left": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isAtEndOfFile"}, "arguments": [{"name": {"identifier": "bufferedReader"}}]}}}}, {"expression": {"name": {"identifier": "geoms"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"WhileStatement": [{"LogicalAndExpression": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsAtEndOfFile"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "streamReader"}]}]}]}]}, {"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsAtLimit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "streamReader"}, {"IdentifierName": "ReadLine"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "string"}, {"IdentifierName": "IsNullOrEmpty"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}, {"ContinueStatement": "continue;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_wkbReader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKBReader"}, {"IdentifierName": "HexToBytes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "count"}, {"IdentifierName": "Offset"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "count"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geoms"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "IGeometry"}]}]}]}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "g"}, {"NullLiteralExpression": "null"}]}, {"InvocationExpression": [{"IdentifierName": "EqualsExact"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "ptLoc"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDistance"}}, "value": {"value": "0.0"}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "locPtPoly"}}}, "value": {"name": {"identifier": "ptLoc"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "locPtPoly"}}}, "value": {"type": {"name": {"identifier": "GeometryLocation"}}, "arguments": [{"name": {"identifier": "poly"}}, {"name": {"identifier": "pt"}}]}}}, {}, {}]}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "poly"}}]}, "left": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptLoc"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "poly"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minDistance"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "locPtPoly"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "ptLoc"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "locPtPoly"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}, {"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Polygon"}}}, "name": {"identifier": "polygonArray"}, "initializer": {"elementType": {"name": {"identifier": "Polygon"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "polygons"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Polygon"}}}, "expression": {"scope": {"name": {"identifier": "polygons"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "polygonArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IPolygon"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IPolygon"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygons"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "polygons"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "p"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "isEmpty"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "geometries"}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "areaPtLocator"}}, "value": {"type": {"name": {"identifier": "IndexedPointInAreaLocator"}}, "arguments": [{"name": {"identifier": "parentGeom"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "areaPtLocator"}}}}, {"expression": {"scope": {"name": {"identifier": "areaPtLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "50"}, "left": {"scope": {"name": {"identifier": "parentGeom"}}, "name": {"identifier": "getNumGeometries"}}}, "left": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "parentGeom"}}}}}, {"expression": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "parentGeom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"IsExpression": [{"IdentifierName": "_parentGeom"}, {"IdentifierName": "IPolygonal"}]}, {"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_parentGeom"}, {"IdentifierName": "NumGeometries"}]}, {"NumericLiteralExpression": "50"}]}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_areaPtLocator"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_areaPtLocator"}, {"ObjectCreationExpression": [{"QualifiedName": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "NetTopologySuite"}, {"IdentifierName": "Algorithm"}]}, {"IdentifierName": "Locate"}]}, {"IdentifierName": "IndexedPointInAreaLocator"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_parentGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_areaPtLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "_parentGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"name": {"identifier": "s0"}}, {"name": {"identifier": "s1"}}, {"name": {"identifier": "s1"}}, {"name": {"identifier": "s2"}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "numInt"}, "initializer": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersectionNum"}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}]}}, "condition": {"name": {"identifier": "addStartPoint"}}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}]}}]}, "elseStmt": {"statements": [{"expression": {"name": {"identifier": "addCornerFillet"}, "arguments": [{"name": {"identifier": "s1"}}, {"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "CLOCKWISE"}}, {"name": {"identifier": "distance"}}]}}]}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "JOIN_MITRE"}}, "left": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getJoinStyle"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "JOIN_BEVEL"}}, "left": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getJoinStyle"}}}}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "numInt"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_s0"}]}, {"Argument": [{"IdentifierName": "_s1"}]}, {"Argument": [{"IdentifierName": "_s1"}]}, {"Argument": [{"IdentifierName": "_s2"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "numInt"}, {"NumericLiteralExpression": "2"}]}, {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "JoinStyle"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "JoinStyle"}, {"IdentifierName": "Bevel"}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "JoinStyle"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "JoinStyle"}, {"IdentifierName": "Mitre"}]}]}]}, {"Block": [{"IfStatement": [{"IdentifierName": "addStartPoint"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddFillet"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_s1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "Clockwise"}]}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LocationIndexOfPoint"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationIndexOfPoint"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "x"}}, {"value": "0.00005"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "y"}}, {"value": "0.00005"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.00005"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.00005"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "element"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "visit"}, "arguments": [{"name": {"identifier": "element"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isDone"}}, "value": {"value": "true"}}}, {}]}, "condition": {"name": {"identifier": "isDone"}}}]}, "elseStmt": {"expression": {"name": {"identifier": "applyTo"}, "arguments": [{"name": {"identifier": "element"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "element"}}}}}}]}, "compare": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isDone"}}}, "left": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"LogicalNotExpression": [{"IdentifierName": "_isDone"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "element"}, {"IdentifierName": "IGeometryCollection"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Visit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "element"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsDone"}, {"ArgumentList": "()"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isDone"}, {"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": "return;"}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ApplyTo"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "element"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"name": {"identifier": "built"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "root"}}, "value": {"thenExpr": {"name": {"identifier": "createNode"}, "arguments": [{"value": "0"}]}, "elseExpr": {"name": {"identifier": "createHigherLevels"}, "arguments": [{"name": {"identifier": "itemBoundables"}}, {"operator": "MINUS", "expression": {"value": "1"}}]}, "condition": {"scope": {"name": {"identifier": "itemBoundables"}}, "name": {"identifier": "isEmpty"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "itemBoundables"}}, "value": {}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "built"}}, "value": {"value": "true"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_built"}, {"ReturnStatement": "return;"}]}, {"LockStatement": [{"IdentifierName": "_buildLock"}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_built"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_building"}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_root"}, {"ConditionalExpression": [{"ParenthesizedExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_itemBoundables"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}, {"InvocationExpression": [{"IdentifierName": "CreateNode"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "CreateHigherLevels"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_itemBoundables"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_itemBoundables"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_built"}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_building"}, {"FalseLiteralExpression": "false"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "PolygonHoleRemover"}}, "name": {"identifier": "clean"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}, {"name": {"identifier": "isRemoved"}}]}}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PolygonHoleRemover"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "geom"}]}]}, {"Argument": [{"IdentifierName": "_predicate"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "dist"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "distance"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "g"}}}]}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "g"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polygons"}, "initializer": {"scope": {"name": {"identifier": "PolygonExtracter"}}, "name": {"identifier": "getPolygons"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "polygons"}}, "name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "polygons"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiPolygon"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toPolygonArray"}, "arguments": [{"name": {"identifier": "polygons"}}]}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IPolygonal"}]}, {"ReturnStatement": [{"IdentifierName": "g"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PolygonExtracter"}, {"IdentifierName": "GetPolygons"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygons"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "polygons"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToPolygonArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polygons"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "array"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "g"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsDisjoint"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "name": {"identifier": "pointArray"}, "initializer": {"elementType": {"name": {"identifier": "Point"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "pointArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IPoint"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IPoint"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "points"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IPoint"}, {"IdentifierName": "points"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "p"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Densifier"}}, "name": {"identifier": "densify"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Densifier"}, {"IdentifierName": "Densify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "rotate"}, "arguments": [{"value": "1"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "translate"}, "arguments": [{"value": "10"}, {"value": "10"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "scale"}, "arguments": [{"value": "2"}, {"value": "2"}]}}, {"expression": {"name": {"identifier": "runTransform"}, "arguments": [{"name": {"identifier": "trans"}}, {"name": {"identifier": "ctl0"}}, {"name": {"identifier": "ctl1"}}, {"name": {"identifier": "ctl2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Rotate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Scale"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunTransform"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trans"}]}, {"Argument": [{"IdentifierName": "ctl0"}]}, {"Argument": [{"IdentifierName": "ctl1"}]}, {"Argument": [{"IdentifierName": "ctl2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LengthIndexOfPoint"}}, "name": {"identifier": "indexOfAfter"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "minIndex"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthIndexOfPoint"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "minIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}}, {"expression": {"name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "setAllLocationsIfNull"}, "arguments": [{"value": "0"}, {"name": {"identifier": "location"}}]}}, {"expression": {"name": {"identifier": "setAllLocationsIfNull"}, "arguments": [{"value": "1"}, {"name": {"identifier": "location"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetAllLocationsIfNull"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "_location"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetAllLocationsIfNull"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"IdentifierName": "_location"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomFact"}}, "value": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geomFact"}}}}, {"expression": {"scope": {"name": {"identifier": "GeometryExtracter"}}, "name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "Polygon"}}}, {"name": {"identifier": "polygons"}}]}}, {"expression": {"scope": {"name": {"identifier": "GeometryExtracter"}}, "name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "LineString"}}}, {"name": {"identifier": "lines"}}]}}, {"expression": {"scope": {"name": {"identifier": "GeometryExtracter"}}, "name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "Point"}}}, {"name": {"identifier": "points"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_geomFact"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_geomFact"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryExtracter"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IPolygon"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_polygons"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryExtracter"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_lines"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryExtracter"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IPoint"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_points"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "im"}}]}}]}, "compare": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "ei"}, "initializer": {"scope": {"name": {"identifier": "isolatedEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RelateNode"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "RelateNode"}}, "expression": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "im"}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "updateIMFromEdges"}, "arguments": [{"name": {"identifier": "im"}}]}}]}, "compare": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "ni"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "_isolatedEdges"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "UpdateIM"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "im"}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "RelateNode"}, {"IdentifierName": "_nodes"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "UpdateIM"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "im"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "UpdateIMFromEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "im"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "buildEdgeStringsStartingAt"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "setMarked"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}, {"NumericLiteralExpression": "2"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsStartingAt"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Marked"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "ExtractLineByLocation"}}, "name": {"identifier": "extract"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "startIndex"}}, {"name": {"identifier": "endIndex"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ExtractLineByLocation"}, {"IdentifierName": "Extract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "startIndex"}]}, {"Argument": [{"IdentifierName": "endIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PriorityQueue"}}, "name": {"identifier": "q"}, "initializer": {"type": {"name": {"identifier": "PriorityQueue"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"value": "1"}]}]}}, {"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"value": "10"}]}]}}, {"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"value": "5"}]}]}}, {"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"value": "8"}]}]}}, {"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "1"}}]}]}}, {"expression": {"name": {"identifier": "checkOrder"}, "arguments": [{"name": {"identifier": "q"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "q"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "cbr"}}, "value": {"type": {"name": {"identifier": "CommonBitsRemover"}}}}}, {"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom0"}}]}}, {"expression": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom1"}}]}}, {"expression": {"variables": [{"type": {"origin": "NAME", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "value": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "removeCommonBits"}, "arguments": [{"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "copy"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}, "value": {"scope": {"name": {"identifier": "cbr"}}, "name": {"identifier": "removeCommonBits"}, "arguments": [{"scope": {"name": {"identifier": "geom1"}}, "name": {"identifier": "copy"}}]}}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_cbr"}, {"ObjectCreationExpression": [{"IdentifierName": "CommonBitsRemover"}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cbr"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cbr"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cbr"}, {"IdentifierName": "RemoveCommonBits"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom0"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_cbr"}, {"IdentifierName": "RemoveCommonBits"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom1"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isValid"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsValid"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "chains"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "chain"}, "initializer": {"name": {"identifier": "extractChain"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "i"}}, {"name": {"identifier": "maxChainSize"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "chains"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "chain"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getNumPoints"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "PLUS", "target": {"name": {"identifier": "i"}}, "value": {"name": {"identifier": "maxChainSize"}}}]}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "chains"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}, {"AddAssignmentExpression": [{"IdentifierName": "i"}, {"IdentifierName": "maxChainSize"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractChain"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "maxChainSize"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "chains"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "chain"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "chains"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "COORDS_1"}}, {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "10"}, {"value": "20"}, {"value": "10"}, {"value": "20"}]}]}, {"name": {"identifier": "COORDS_EMPTY"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coords1"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}]}]}]}]}]}]}, {"Argument": [{"IdentifierName": "Empty"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {}, "name": {"identifier": "mce"}}, "name": {"identifier": "computeIntersectsForChain"}, "arguments": [{"name": {"identifier": "chainIndex"}}, {"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "mce"}}, {"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "chainIndex"}}, {"name": {"identifier": "si"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "mce"}]}, {"IdentifierName": "ComputeIntersectsForChain"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "chainIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "mce"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "chainIndex"}]}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "setToRotation"}, "arguments": [{"name": {"identifier": "sinTheta"}}, {"name": {"identifier": "cosTheta"}}, {"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}, {"expression": {"name": {"identifier": "trans"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "SetToRotation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sinTheta"}]}, {"Argument": [{"IdentifierName": "cosTheta"}]}, {"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "trans"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "x"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "x"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "x"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "x"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "limit"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "limit"}}, "left": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "size"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "Limit"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Count"}]}, {"IdentifierName": "Limit"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "factory"}, "initializer": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "getFactory"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gColl"}, "initializer": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "unionAll"}, "initializer": {"scope": {"name": {"identifier": "gColl"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}]}}, {"expression": {"name": {"identifier": "unionAll"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Factory"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "g1"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gColl"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "unionAll"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "overlaps"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Overlaps"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "dist"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "orientedDistance"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "OrientedDistance"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nLines"}, "initializer": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "name": {"identifier": "revLines"}, "initializer": {"elementType": {"name": {"identifier": "LineString"}}, "levels": [{"dimension": {"name": {"identifier": "nLines"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "nLines"}}}}, "name": {"name": {"identifier": "revLines"}}}, "value": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "reverse"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiLineString"}, "arguments": [{"name": {"identifier": "revLines"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IMultiLineString"}, {"InvocationExpression": [{"IdentifierName": "Reverse"}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"name": {"identifier": "createTestLine"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}, {"value": "10"}, {"value": "20"}]}}]}}, {"expression": {"name": {"identifier": "testResultsEqual"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "line"}}]}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "MAX_ITER"}}, "left": {"name": {"identifier": "count"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"WhileStatement": [{"LessThanExpression": [{"IdentifierName": "count"}, {"IdentifierName": "MAX_ITER"}]}, {"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "count"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateTestLine"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestResultsEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "line"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EnhancedPrecisionOpExample"}}, "name": {"identifier": "example"}, "initializer": {"type": {"name": {"identifier": "EnhancedPrecisionOpExample"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "example"}}, "name": {"identifier": "run"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EnhancedPrecisionOpExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EnhancedPrecisionOpExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "example"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkEqual"}, "arguments": [{"name": {"identifier": "toGeometryCollection"}, "arguments": [{"name": {"identifier": "expected"}}]}, {"name": {"identifier": "toGeometryCollection"}, "arguments": [{"name": {"identifier": "actual"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "ToGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "actual"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "i"}}}]}, "condition": {"scope": {"name": {"identifier": "coordinate"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinate"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"name": {"identifier": "readCoordinateSequence"}, "arguments": [{"name": {"identifier": "size"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "seq"}}}, "condition": {"name": {"identifier": "isStrict"}}}, {"thenStmt": {"expression": {"name": {"identifier": "seq"}}}, "condition": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "isRing"}, "arguments": [{"name": {"identifier": "seq"}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "ensureValidRing"}, "arguments": [{"name": {"identifier": "csFactory"}}, {"name": {"identifier": "seq"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReadCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isStrict"}, {"ReturnStatement": [{"IdentifierName": "seqence"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "IsRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seqence"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "seqence"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "EnsureValidRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_sequenceFactory"}]}, {"Argument": [{"IdentifierName": "seqence"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "geom"}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "commonCoord"}}, "name": {"identifier": "y"}}}, "left": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "commonCoord"}}, "name": {"identifier": "x"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "invCoord"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "commonCoord"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "invCoord"}}, "name": {"identifier": "x"}}, "value": {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "invCoord"}}, "name": {"identifier": "x"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "invCoord"}}, "name": {"identifier": "y"}}, "value": {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "invCoord"}}, "name": {"identifier": "y"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Translater"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "Translater"}}, "arguments": [{"name": {"identifier": "invCoord"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "trans"}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "geometryChanged"}}}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_commonCoord"}, {"IdentifierName": "X"}]}, {"NumericLiteralExpression": "0.0"}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_commonCoord"}, {"IdentifierName": "Y"}]}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_commonCoord"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invCoord"}, {"IdentifierName": "X"}]}, {"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invCoord"}, {"IdentifierName": "X"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invCoord"}, {"IdentifierName": "Y"}]}, {"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invCoord"}, {"IdentifierName": "Y"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Translater"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Translater"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "invCoord"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trans"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GeometryChanged"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "a"}, "initializer": {"elementType": {"type": "DOUBLE"}, "levels": [{"dimension": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "length"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "a"}}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "v"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "a"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "a"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "v"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "a"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isAllInPrepGeomAreaInterior"}, "initializer": {"name": {"identifier": "isAllTestComponentsInTargetInterior"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isAllInPrepGeomAreaInterior"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lineSegStr"}, "initializer": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "segsIntersect"}, "initializer": {"scope": {"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getIntersectionFinder"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "lineSegStr"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"name": {"identifier": "segsIntersect"}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isTargetGeomInTestArea"}, "initializer": {"name": {"identifier": "isAnyTargetComponentInAreaTest"}, "arguments": [{"name": {"identifier": "geom"}}, {"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getRepresentativePoints"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"name": {"identifier": "isTargetGeomInTestArea"}}}]}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IsAllTestComponentsInTargetInterior"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isAllInPrepGeomAreaInterior"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "IntersectionFinder"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineSegStr"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "segsIntersect"}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygonal"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IsAnyTargetComponentInAreaTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "RepresentativePoints"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isTargetGeomInTestArea"}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "NaN"}}}, "condition": {"name": {"identifier": "isNaN"}}}, {"thenStmt": {"expression": {"name": {"identifier": "negate"}}}, "condition": {"name": {"identifier": "isNegative"}}}, {"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsNaN"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "NaN"}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"IdentifierName": "IsNegative"}, {"InvocationExpression": [{"IdentifierName": "Negate"}, {"ArgumentList": "()"}]}, {"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getArea"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Area"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"operator": "MINUS", "expression": {"value": "1"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "3"}, "left": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"value": "8.0"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "7"}, "left": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"value": "128.0"}]}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "8.0"}]}]}]}, {"NumericLiteralExpression": "3"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "128.0"}]}]}]}, {"NumericLiteralExpression": "7"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"value": "0"}, {"value": "3"}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "16"}}]}}, {"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"value": "14"}, {"value": "3"}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "16"}}]}}, {"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"value": "3"}, {"operator": "MINUS", "expression": {"value": "5"}}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "16"}}]}}, {"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"operator": "MINUS", "expression": {"value": "3"}}, {"value": "5"}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "16"}}]}}, {"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"operator": "MINUS", "expression": {"value": "3"}}, {"operator": "MINUS", "expression": {"value": "5"}}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "16"}}]}}, {"expression": {"name": {"identifier": "checkPow"}, "arguments": [{"value": "0.12345"}, {"operator": "MINUS", "expression": {"value": "5"}}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "EPS"}}, "left": {"value": "1e5"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "16"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "14"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "16"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5"}]}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "16"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "16"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5"}]}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "16"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPow"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.12345"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5"}]}]}, {"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "1e5"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Epsilon"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometry"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "GeometryComponentFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "addLine"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "component"}}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometry"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryComponentFilterImpl"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "octant"}, "initializer": {"scope": {"name": {"identifier": "Octant"}}, "name": {"identifier": "octant"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "posValue"}, "initializer": {"scope": {"name": {"identifier": "SegmentPointComparator"}}, "name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "octant"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expectedPositionValue"}}, "left": {"name": {"identifier": "posValue"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Octants"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Octant"}, {"IdentifierName": "GetOctant"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentPointComparator"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "octant"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "posValue"}, {"IdentifierName": "expectedPositionValue"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "disjointPolys"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g0Int"}, "initializer": {"name": {"identifier": "extractByEnvelope"}, "arguments": [{"name": {"identifier": "common"}}, {"name": {"identifier": "g0"}}, {"name": {"identifier": "disjointPolys"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1Int"}, "initializer": {"name": {"identifier": "extractByEnvelope"}, "arguments": [{"name": {"identifier": "common"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "disjointPolys"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union"}, "initializer": {"name": {"identifier": "unionActual"}, "arguments": [{"name": {"identifier": "g0Int"}}, {"name": {"identifier": "g1Int"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "disjointPolys"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "union"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "overallUnion"}, "initializer": {"scope": {"name": {"identifier": "GeometryCombiner"}}, "name": {"identifier": "combine"}, "arguments": [{"name": {"identifier": "disjointPolys"}}]}}]}}, {"expression": {"name": {"identifier": "overallUnion"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractByEnvelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "common"}]}, {"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "disjointPolys"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractByEnvelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "common"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "disjointPolys"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "UnionActual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0Int"}]}, {"Argument": [{"IdentifierName": "g1Int"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "disjointPolys"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "union"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryCombiner"}, {"IdentifierName": "Combine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "disjointPolys"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "overallUnion"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "i"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Transform"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "buildKdTree"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "queryEnv"}}, "value": {"name": {"identifier": "pts"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "queryEnv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryEnv"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "resultCoords"}, "initializer": {"scope": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "toCoordinates"}, "arguments": [{"name": {"identifier": "result"}}, {"value": "true"}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "resultCoords"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildKdTree"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryEnv"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"IdentifierName": "ToCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultCoords"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minClearance"}}, "value": {"name": {"identifier": "candidateValue"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "minClearancePts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "p"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "seg0"}}, {"name": {"identifier": "seg1"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "minClearancePts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "closestPoint"}, "arguments": [{"name": {"identifier": "p"}}]}]}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minClearance"}}, "left": {"name": {"identifier": "candidateValue"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "candidateValue"}, {"IdentifierName": "_minClearance"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minClearance"}, {"IdentifierName": "candidateValue"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minClearancePts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg0"}]}, {"Argument": [{"IdentifierName": "seg1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minClearancePts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "ClosestPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polyList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "polyList"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "getPolygon"}}]}}]}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isIncluded"}}, "left": {"name": {"identifier": "includeAll"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "polyList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "shellList"}, {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"IdentifierName": "includeAll"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsIncluded"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polyList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "Polygon"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "polyList"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "itemEnv"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemEnv"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"name": {"identifier": "startDe"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNode"}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "linkMinimalDirectedEdges"}, "arguments": [{}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "de"}}, "value": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "startDe"}}, "left": {"name": {"identifier": "de"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startDe"}]}]}]}]}, {"DoStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Node"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "LinkMinimalDirectedEdges"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "de"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Next"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "de"}, {"IdentifierName": "startDe"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"name": {"identifier": "segmentIndex"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "p0"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segmentIndex"}}}]}}]}}, {"expression": {"name": {"identifier": "pointAlongSegmentByFraction"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "segmentFraction"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segmentIndex"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"IdentifierName": "p0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "PointAlongSegmentByFraction"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "_segmentFraction"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setEnvelope"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setEnvelope"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "1"}]}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "g"}}}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createSupercircle"}, "arguments": [{"name": {"identifier": "pow"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "g"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Envelope"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Envelope"}]}, {"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateSupercircle"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pow"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Integer"}}, "arguments": [{"type": {"type": "INT"}, "expression": {"inner": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"name": {"identifier": "num"}}}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "num"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Random"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "num"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "num"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "random"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LocationIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LocationIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "index"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "testPt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "extractPoint"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "offsetDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LocationIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "removeDegenerateRings"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "parent"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "simpResult"}, "initializer": {"scope": {}, "name": {"identifier": "transformLinearRing"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "simpResult"}}}}}, "left": {"name": {"identifier": "removeDegenerateRings"}}}}, {}, {"expression": {"name": {"identifier": "simpResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Boolean"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "removeDegenerateRings"}, {"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "simpResult"}, {"IdentifierName": "ILinearRing"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"IdentifierName": "simpResult"}]}]}}, {"java_ast": {"statements": [{"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "getX"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "getY"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "getZ"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetX"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "GetY"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "GetZ"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"body": {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "angle"}}, "value": {"name": {"identifier": "PI_TIMES_2"}}}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "angle"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "angle"}}, "value": {"value": "0.0"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angle"}}}}]}, "elseStmt": {"statements": [{"body": {"expression": {"operator": "MINUS", "target": {"name": {"identifier": "angle"}}, "value": {"name": {"identifier": "PI_TIMES_2"}}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angle"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "angle"}}, "value": {"value": "0.0"}}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "angle"}}}}]}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "angle"}}}}, {"expression": {"name": {"identifier": "angle"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "angle"}, {"NumericLiteralExpression": "0.0"}]}, {"Block": [{"WhileStatement": [{"LessThanExpression": [{"IdentifierName": "angle"}, {"NumericLiteralExpression": "0.0"}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "angle"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}, {"ElseClause": [{"Block": [{"WhileStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}, {"ExpressionStatement": [{"SubtractAssignmentExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "angle"}, {"NumericLiteralExpression": "0.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "angle"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "angle"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "buf"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BufferResultValidator"}}, "name": {"identifier": "validator"}, "initializer": {"type": {"name": {"identifier": "BufferResultValidator"}}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "buf"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}}]}}, {"expression": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "getErrorIndicator"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferResultValidator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "buf"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "ErrorIndicator"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"value": "4"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "name": {"name": {"identifier": "pts"}}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "4"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createGeometry"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "g2"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LineSequencer"}}, "name": {"identifier": "sequence"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSequencer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSequencer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "GetSequencedLineStrings"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"name": {"identifier": "item"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "counter"}}, "name": {"identifier": "countSegment"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "1"}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_counter"}, {"IdentifierName": "CountSegment"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"scope": {"name": {"identifier": "segGen"}}, "name": {"identifier": "createCircle"}, "arguments": [{"name": {"identifier": "pt"}}]}}, {}], "label": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "CAP_ROUND"}}}, {"statements": [{"expression": {"scope": {"name": {"identifier": "segGen"}}, "name": {"identifier": "createSquare"}, "arguments": [{"name": {"identifier": "pt"}}]}}, {}], "label": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "CAP_SQUARE"}}}], "selector": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getEndCapStyle"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "EndCapStyle"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EndCapStyle"}, {"IdentifierName": "Round"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segGen"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EndCapStyle"}, {"IdentifierName": "Square"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segGen"}, {"IdentifierName": "CreateSquare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"BreakStatement": "break;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Map"}}, "name": {"identifier": "keyMap"}, "initializer": {"type": {"name": {"identifier": "Map"}}, "expression": {"scope": {"name": {"identifier": "topMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "key1"}}]}}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "ArrayList"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "keyMap"}}}}, {"expression": {"scope": {"name": {"identifier": "keyMap"}}, "name": {"identifier": "values"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "TValue"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "TValue"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "TKey2"}, {"IdentifierName": "TValue"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Data"}, {"IdentifierName": "Values"}]}, {"Block": [{"ForEachStatement": [{"IdentifierName": "TValue"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "k2"}, {"IdentifierName": "Values"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "s"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "closeRing"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "_distance"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "_distance"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "_distance"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "_distance"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "_distance"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "_distance"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"IdentifierName": "_distance"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "_distance"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "CloseRing"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"name": {"identifier": "minClearance"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_minClearance"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"scope": {"name": {"identifier": "buffer"}}, "name": {"identifier": "isEmpty"}}}, {"thenStmt": {"statements": [{"expression": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"inner": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "buffer"}}}}, "name": {"identifier": "getNumInteriorRing"}}}}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "buffer"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MultiPolygon"}}, "name": {"identifier": "multiPolygon"}, "initializer": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "buffer"}}}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "hasHoles"}, "arguments": [{"scope": {"name": {"identifier": "multiPolygon"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "multiPolygon"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "buffer"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "buffer"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "polygon"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygon"}, {"IdentifierName": "NumInteriorRings"}]}, {"NumericLiteralExpression": "0"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IMultiPolygon"}, {"IdentifierName": "buffer"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "multiPolygon"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasHoles"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "multiPolygon"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Class"}}}, "name": {"identifier": "methodParamTypes"}, "initializer": {"scope": {"name": {"identifier": "method"}}, "name": {"identifier": "getParameterTypes"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Class"}}}, "name": {"identifier": "types"}, "initializer": {"elementType": {"name": {"identifier": "Class"}}, "levels": [{"dimension": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "methodParamTypes"}}, "name": {"identifier": "length"}}}}]}}]}}, {"body": {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "types"}}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "methodParamTypes"}}}}}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "methodParamTypes"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "types"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "method"}, {"IdentifierName": "GetParameters"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Type"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Type"}, {"ArrayRankSpecifier": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "methodParamTypes"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "methodParamTypes"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "types"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "methodParamTypes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "ParameterType"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "types"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "X"}}, {"value": "111"}]}}, {"expression": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Y"}}, {"value": "222"}]}}, {"expression": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Z"}}, {"value": "333"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "X"}}]}, {"value": "111.0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Y"}}]}, {"value": "222.0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "Z"}}]}, {"value": "333.0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}, {"NumericLiteralExpression": "111"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}, {"NumericLiteralExpression": "222"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}]}]}, {"NumericLiteralExpression": "333"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "111.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "222.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "c"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "333.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seqProj"}, "initializer": {"name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "facingPlane"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "ptProj"}, "initializer": {"name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "facingPlane"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "locatePointInRing"}, "arguments": [{"name": {"identifier": "ptProj"}}, {"name": {"identifier": "seqProj"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Project"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "_facingPlane"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Project"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "_facingPlane"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RayCrossingCounter"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ptProj"}]}, {"Argument": [{"IdentifierName": "seqProj"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "AbstractNode"}}, "arguments": [{"name": {"identifier": "level"}}], "anonymousClassBody": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Interval"}}, "name": {"identifier": "bounds"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "bounds"}}, "value": {"type": {"name": {"identifier": "Interval"}}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "bounds"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "bounds"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "bounds"}}}]}, "type": {"name": {"identifier": "Object"}}, "name": {"identifier": "computeBounds"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AnonymousAbstractNodeImpl"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "x"}}}]}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "y"}}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}]}]}, {"IdentifierName": "tolerance"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}]}]}, {"IdentifierName": "tolerance"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LocationIndexOfPoint"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationIndexOfPoint"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "c1"}}, "name": {"identifier": "getName"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "c2"}}, "name": {"identifier": "getName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "Name"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c2"}, {"IdentifierName": "Name"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setMinEdgeRing"}, "arguments": [{"name": {"identifier": "er"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "MinEdgeRing"}]}, {"IdentifierName": "er"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setEdgeRing"}, "arguments": [{"name": {"identifier": "er"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "EdgeRing"}]}, {"IdentifierName": "er"}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"type": {"name": {"identifier": "GeometryFactory"}}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"value": "false"}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"value": "true"}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "IllegalArgumentException"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ArgumentException"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "oddDegreeCount"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "oddDegreeCount"}}}}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"operator": "REMAINDER", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "nodeIterator"}}}]}]}, {"expression": {"operator": "LESS_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "oddDegreeCount"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IEnumerator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "GetNodeEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"ModuloExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}, {"NumericLiteralExpression": "2"}]}, {"NumericLiteralExpression": "1"}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "oddDegreeCount"}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "oddDegreeCount"}, {"NumericLiteralExpression": "2"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "cs"}, "initializer": {"scope": {"name": {"identifier": "csFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "size"}}, {"name": {"identifier": "dim"}}]}}]}}, {"body": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "cs"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "d"}}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "pow"}, "arguments": [{"value": "10"}, {"name": {"identifier": "d"}}]}, "left": {"name": {"identifier": "i"}}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "dim"}}, "left": {"name": {"identifier": "d"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "d"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "d"}}}]}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "cs"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "csFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "dim"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "size"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "d"}, {"IdentifierName": "dim"}]}, {"PostIncrementExpression": [{"IdentifierName": "d"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cs"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "d"}]}]}, {"Argument": [{"MultiplyExpression": [{"IdentifierName": "i"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Pow"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "d"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "cs"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "sequences"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ConnectedSubgraphFinder"}}, "name": {"identifier": "csFinder"}, "initializer": {"type": {"name": {"identifier": "ConnectedSubgraphFinder"}}, "arguments": [{"name": {"identifier": "graph"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "subgraphs"}, "initializer": {"scope": {"name": {"identifier": "csFinder"}}, "name": {"identifier": "getConnectedSubgraphs"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Subgraph"}}, "name": {"identifier": "subgraph"}, "initializer": {"type": {"name": {"identifier": "Subgraph"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "seq"}, "initializer": {"name": {"identifier": "findSequence"}, "arguments": [{"name": {"identifier": "subgraph"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "sequences"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}, "elseStmt": {"statements": [{"expression": {}}]}, "condition": {"name": {"identifier": "hasSequence"}, "arguments": [{"name": {"identifier": "subgraph"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "subgraphs"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "sequences"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConnectedSubgraphFinder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConnectedSubgraphFinder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_graph"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "csFinder"}, {"IdentifierName": "GetConnectedSubgraphs"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Subgraph"}, {"IdentifierName": "subgraphs"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subgraph"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subgraph"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sequences"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "sequences"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "y"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p3"}}, "name": {"identifier": "x"}}}}}, "left": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p3"}}, "name": {"identifier": "y"}}}}, "left": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "x"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p3"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p3"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "eNode"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "prevNode"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eNode"}}, "value": {"name": {"identifier": "e"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "eNode"}}}}, {"expression": {"name": {"identifier": "stackEdges"}, "arguments": [{"name": {"identifier": "eNode"}}]}}, {"expression": {"name": {"identifier": "buildLines"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "PrevNode"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "eNode"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eNode"}, {"IdentifierName": "e"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "StackEdges"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eNode"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildLines"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordRef"}}, "value": {}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "PLUS", "right": {"name": {"identifier": "ordinate"}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "index"}}}}, "name": {"name": {"identifier": "coords"}}}, "value": {"type": {"type": "FLOAT"}, "expression": {"name": {"identifier": "value"}}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordRef"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Dimension"}]}, {"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "ordinate"}]}]}]}]}]}, {"CastExpression": [{"PredefinedType": "float"}, {"IdentifierName": "value"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "subnodeIndex"}, "initializer": {"name": {"identifier": "getSubnodeIndex"}, "arguments": [{"name": {"identifier": "searchEnv"}}, {"name": {"identifier": "centrex"}}, {"name": {"identifier": "centrey"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"name": {"identifier": "getSubnode"}, "arguments": [{"name": {"identifier": "subnodeIndex"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getNode"}, "arguments": [{"name": {"identifier": "searchEnv"}}]}}]}, "elseStmt": {"statements": [{"expression": {}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"operator": "MINUS", "expression": {"value": "1"}}, "left": {"name": {"identifier": "subnodeIndex"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSubnodeIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}, {"Argument": [{"IdentifierName": "_centreX"}]}, {"Argument": [{"IdentifierName": "_centreY"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "subnodeIndex"}, {"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSubnode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subnodeIndex"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "GetNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "AND", "right": {"name": {"identifier": "isResultOfOp"}, "arguments": [{"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}, {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}, {"name": {"identifier": "opCode"}}]}, "left": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInteriorAreaEdge"}}}, "left": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "isArea"}}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "EdgeEnds"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "IsArea"}]}, {"ArgumentList": "()"}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInteriorAreaEdge"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "IsResultOfOp"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "opCode"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "InResult"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getGeometryReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetGeometryReturnType"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "empty"}, "initializer": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPoint"}}}]}}, {"expression": {"scope": {"name": {"identifier": "SnapIfNeededOverlayOp"}}, "name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "empty"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "UNION"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "Overlay"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "empty"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Union"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "offset0"}, {"IdentifierName": "P1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "offset1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "bufPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "pt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "precisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "bufPt"}}]}}, {"thenStmt": {}, "condition": {"name": {"identifier": "isRedundant"}, "arguments": [{"name": {"identifier": "bufPt"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "bufPt"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_precisionModel"}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufPt"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsRedundant"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufPt"}]}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufPt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "locatePointInRing"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "ring"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"IdentifierName": "LocatePointInRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "DouglasPeuckerSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DouglasPeuckerSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "minWidthPt"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "computeWidthConvex"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}, "elseStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "convexGeom"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "ConvexHull"}}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}, "name": {"identifier": "getConvexHull"}}}]}}, {"expression": {"name": {"identifier": "computeWidthConvex"}, "arguments": [{"name": {"identifier": "convexGeom"}}]}}]}, "condition": {"name": {"identifier": "isConvex"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_minWidthPt"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"IdentifierName": "_isConvex"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeWidthConvex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}, {"ElseClause": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "ConvexHull"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}, {"IdentifierName": "GetConvexHull"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeWidthConvex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "convexGeom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "Distance"}}, "name": {"identifier": "pointToSegment"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p2"}}]}}]}}, {"expression": {"operator": "LESS", "right": {"name": {"identifier": "distanceTol"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "DistancePointLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "distanceTol"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "envelope"}, "arguments": [{"name": {"identifier": "COORDS_1"}}]}, {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "3"}, {"value": "1"}, {"value": "3"}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Envelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coords1"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_items"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "pt"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}, "name": {"identifier": "computeLabelling"}, "arguments": [{"name": {"identifier": "arg"}}]}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "mergeSymLabels"}}}, {"expression": {"name": {"identifier": "updateNodeLabelling"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}, {"IdentifierName": "ComputeLabelling"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "arg"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "MergeSymLabels"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "UpdateNodeLabelling"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "pt"}, "initializer": {"type": {"name": {"identifier": "Point"}}, "expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "j"}}]}}}]}}, {"expression": {"name": {"identifier": "computeMinDistance"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "locGeom"}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "terminateDistance"}}, "left": {"name": {"identifier": "minDistance"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"ForEachStatement": [{"IdentifierName": "IPoint"}, {"IdentifierName": "points"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "locGeom"}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "_terminateDistance"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "query"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "arguments": [{"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "x1"}}, {"name": {"identifier": "x2"}}]}, {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"name": {"identifier": "x1"}}, {"name": {"identifier": "x2"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Query"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Interval"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "x2"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "x2"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"name": {"identifier": "readCoordinateSequence"}, "arguments": [{"name": {"identifier": "size"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "seq"}}}, "condition": {"name": {"identifier": "isStrict"}}}, {"thenStmt": {"expression": {"name": {"identifier": "seq"}}}, "condition": {"operator": "OR", "right": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "extend"}, "arguments": [{"name": {"identifier": "csFactory"}}, {"name": {"identifier": "seq"}}, {"value": "2"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReadCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isStrict"}, {"ReturnStatement": [{"IdentifierName": "seq"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}]}, {"ReturnStatement": [{"IdentifierName": "seq"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Extend"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryServices"}, {"IdentifierName": "DefaultCoordinateSequenceFactory"}]}]}, {"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "copyCoord"}, "arguments": [{"name": {"identifier": "src"}}, {"operator": "PLUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "srcPos"}}}, {"name": {"identifier": "dest"}}, {"operator": "PLUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "destPos"}}}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "length"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CopyCoord"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "src"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "srcPos"}, {"IdentifierName": "i"}]}]}, {"Argument": [{"IdentifierName": "dest"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "destPos"}, {"IdentifierName": "i"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "posValue"}, "initializer": {"scope": {"name": {"identifier": "SegmentPointComparator"}}, "name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "octant"}}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x0"}}, {"name": {"identifier": "y0"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x1"}}, {"name": {"identifier": "y1"}}]}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expectedPositionValue"}}, "left": {"name": {"identifier": "posValue"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentPointComparator"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "octant"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x0"}]}, {"Argument": [{"IdentifierName": "y0"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "y1"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "posValue"}, {"IdentifierName": "expectedPositionValue"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "w"}}, "left": {"name": {"identifier": "y"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "NotRepresentableException"}}}}]}, "condition": {"operator": "OR", "right": {"inner": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isInfinite"}, "arguments": [{"name": {"identifier": "a"}}]}}, "left": {"inner": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "a"}}]}}}}, {"expression": {"name": {"identifier": "a"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "_w"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}, {"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsInfinity"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "NotRepresentableException"}, {"ArgumentList": "()"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "a"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "w"}}, "left": {"name": {"identifier": "x"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "NotRepresentableException"}}}}]}, "condition": {"operator": "OR", "right": {"inner": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isInfinite"}, "arguments": [{"name": {"identifier": "a"}}]}}, "left": {"inner": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "a"}}]}}}}, {"expression": {"name": {"identifier": "a"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "_w"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}, {"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsInfinity"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "NotRepresentableException"}, {"ArgumentList": "()"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "a"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineStringSnapper"}}, "name": {"identifier": "snapper"}, "initializer": {"type": {"name": {"identifier": "LineStringSnapper"}}, "arguments": [{"name": {"identifier": "srcPts"}}, {"name": {"identifier": "snapTolerance"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "snapper"}}, "name": {"identifier": "setAllowSnappingToSourceVertices"}, "arguments": [{"name": {"identifier": "isSelfSnap"}}]}}, {"expression": {"scope": {"name": {"identifier": "snapper"}}, "name": {"identifier": "snapTo"}, "arguments": [{"name": {"identifier": "snapPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineStringSnapper"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "srcPts"}]}, {"Argument": [{"IdentifierName": "_snapTolerance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapper"}, {"IdentifierName": "AllowSnappingToSourceVertices"}]}, {"IdentifierName": "_isSelfSnap"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapper"}, {"IdentifierName": "SnapTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "snapPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1.4540766091864998"}, {"operator": "MINUS", "expression": {"value": "7.989685402102996"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "23.131039116367354"}, {"operator": "MINUS", "expression": {"value": "7.004368924503866"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1.4540766091865"}, {"operator": "MINUS", "expression": {"value": "7.989685402102996"}}]}]}}]}}, {"expression": {"name": {"identifier": "checkOrientation"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.4540766091864998"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.989685402102996"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "23.131039116367354"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.004368924503866"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.4540766091865"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "7.989685402102996"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "name": {"identifier": "oca"}, "initializer": {"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "expression": {"name": {"identifier": "o1"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comp"}, "initializer": {"name": {"identifier": "compareOriented"}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "orientation"}}, {"scope": {"name": {"identifier": "oca"}}, "name": {"identifier": "pts"}}, {"scope": {"name": {"identifier": "oca"}}, "name": {"identifier": "orientation"}}]}}]}}, {"expression": {"name": {"identifier": "comp"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "OrientedCoordinateArray"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "OrientedCoordinateArray"}, {"IdentifierName": "o1"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareOriented"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pts"}]}, {"Argument": [{"IdentifierName": "_orientation"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "oca"}, {"IdentifierName": "_pts"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "oca"}, {"IdentifierName": "_orientation"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"name": {"identifier": "subdiv"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_subdiv"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTestVerticalSlices"}, "arguments": [{"value": "3"}, {"value": "2"}, {"value": "2"}, {"value": "1"}]}}, {"expression": {"name": {"identifier": "doTestVerticalSlices"}, "arguments": [{"value": "4"}, {"value": "2"}, {"value": "2"}, {"value": "2"}]}}, {"expression": {"name": {"identifier": "doTestVerticalSlices"}, "arguments": [{"value": "5"}, {"value": "3"}, {"value": "2"}, {"value": "1"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestVerticalSlices"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestVerticalSlices"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTestVerticalSlices"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "l"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "isSimple"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getStartPoint"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getEndPoint"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "isClosed"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "isRing"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "IsSimple"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "StartPoint"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "EndPoint"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "IsClosed"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "IsRing"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "outEdges"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "sorted"}}, "value": {"value": "true"}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "sorted"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_sorted"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"IdentifierName": "StableSort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_outEdges"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "Clear"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outEdges"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inSortedOrder"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_sorted"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "verts"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "verts"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"name": {"identifier": "coord"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "verts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "coords"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "verts"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "verts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "args"}}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "invokeGeometryOverlayMethod"}, "arguments": [{"name": {"identifier": "opCode"}}, {"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}}, {"expression": {"name": {"identifier": "validate"}, "arguments": [{"name": {"identifier": "opCode"}}, {"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "result"}}]}}, {"expression": {"name": {"identifier": "areaValidate"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{}]}}}]}, "condition": {"name": {"identifier": "returnEmptyGC"}}}, {"expression": {"type": {"name": {"identifier": "GeometryResult"}}, "arguments": [{"name": {"identifier": "result"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "InvokeGeometryOverlayMethod"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Validate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "result"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AreaValidate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "ReturnEmptyGeometryCollection"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "result"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "triQueue"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "tris"}}]}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "tris"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triQueue"}, {"IdentifierName": "AddLast"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tri"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "temp"}, "initializer": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, "name": {"name": {"identifier": "location"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, "name": {"name": {"identifier": "location"}}}, "value": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, "name": {"name": {"identifier": "location"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, "name": {"name": {"identifier": "location"}}}, "value": {"name": {"identifier": "temp"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}, {"IdentifierName": "temp"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "oNext"}, "initializer": {}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "oNext"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "oNext"}}}, "condition": {"scope": {"scope": {"name": {"identifier": "oNext"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "dest"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "oNext"}}, "value": {"scope": {"name": {"identifier": "oNext"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "oNext"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ThisExpression": "this"}]}]}]}]}, {"DoStatement": [{"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "oNext"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "oNext"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dest"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "oNext"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "oNext"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "oNext"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "oNext"}, {"ThisExpression": "this"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "MultiPolygon"}}, "arguments": [{"name": {"identifier": "polygons"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "MultiPolygon"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polygons"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "lineExtracter"}, "initializer": {"type": {"name": {"identifier": "LinearComponentExtracter"}}, "arguments": [{"name": {"identifier": "lines"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polys"}, "initializer": {"scope": {"name": {"identifier": "PolygonExtracter"}}, "name": {"identifier": "getPolygons"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "lineExtracter"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "polys"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PolygonExtracter"}, {"IdentifierName": "GetPolygons"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "polys"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineExtracter"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "collectLineEdge"}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "opCode"}}, {"name": {"identifier": "lineEdgesList"}}]}}, {"expression": {"name": {"identifier": "collectBoundaryTouchEdge"}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "opCode"}}, {"name": {"identifier": "lineEdgesList"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getGraph"}}, "name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "Graph"}]}, {"IdentifierName": "EdgeEnds"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CollectLineEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"IdentifierName": "_lineEdgesList"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CollectBoundaryTouchEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"IdentifierName": "_lineEdgesList"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "LocationIndexOfPoint"}}, "name": {"identifier": "indexOfAfter"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "pt"}}, {"name": {"identifier": "minIndex"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationIndexOfPoint"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "minIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "ComponentCoordinateExtracter"}}, "name": {"identifier": "getCoordinates"}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "targetPointLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ComponentCoordinateExtracter"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetPointLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "getEmptyMultiPoint"}}}]}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "closedEndpointOnBoundary"}, "initializer": {"scope": {"name": {"identifier": "bnRule"}}, "name": {"identifier": "isInBoundary"}, "arguments": [{"value": "2"}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getStartPoint"}}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiPoint"}}}]}, "condition": {"name": {"identifier": "closedEndpointOnBoundary"}}}]}, "condition": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "isClosed"}}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"elementType": {"name": {"identifier": "Point"}}, "levels": [{}], "initializer": {"values": [{"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getStartPoint"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getEndPoint"}}]}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geom"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetEmptyMultiPoint"}, {"ArgumentList": "()"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "IsClosed"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bnRule"}, {"IdentifierName": "IsInBoundary"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "closedEndpointOnBoundary"}, {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "StartPoint"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "StartPoint"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "EndPoint"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "useFormatting"}}, "value": {"name": {"identifier": "useFormatting"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "formatter"}}, "value": {"name": {"identifier": "createFormatter"}, "arguments": [{"scope": {"name": {"identifier": "geometry"}}, "name": {"identifier": "getPrecisionModel"}}]}}}, {"expression": {"name": {"identifier": "appendGeometryTaggedText"}, "arguments": [{"name": {"identifier": "geometry"}}, {"value": "0"}, {"name": {"identifier": "writer"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteFormatted"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}, {"Argument": [{"IdentifierName": "writer"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "frameVertex"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "frameVertex"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"value": "2"}, "name": {"name": {"identifier": "frameVertex"}}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_frameVertex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_frameVertex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_frameVertex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "coord"}}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prev"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "curr"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "180"}, {"value": "200"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "160"}, {"value": "180"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "220"}, {"value": "240"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "140"}, {"value": "160"}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasIntersection"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "2"}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersectionNum"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "180"}]}, {"Argument": [{"NumericLiteralExpression": "200"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "160"}]}, {"Argument": [{"NumericLiteralExpression": "180"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "220"}]}, {"Argument": [{"NumericLiteralExpression": "240"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "140"}]}, {"Argument": [{"NumericLiteralExpression": "160"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "HasIntersection"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isInterior"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segmentIndex"}}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "SegmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"LogicalNotExpression": [{"IdentifierName": "_isInterior"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"EqualsExpression": [{"IdentifierName": "SegmentIndex"}, {"IdentifierName": "maxSegmentIndex"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "j"}}, "left": {"name": {"identifier": "i"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "tmp"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "dim"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "dim"}}, {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "j"}}, {"name": {"identifier": "dim"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "j"}}, {"name": {"identifier": "dim"}}, {"name": {"identifier": "tmp"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getDimension"}}, "left": {"name": {"identifier": "dim"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "dim"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "dim"}}}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "i"}, {"IdentifierName": "j"}]}, {"ReturnStatement": "return;"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "dim"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Dimension"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "dim"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "dim"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "dim"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "j"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "dim"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "j"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "dim"}]}]}, {"Argument": [{"IdentifierName": "tmp"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "GeometryCollection"}}, "arguments": [{"name": {"identifier": "geometries"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geometries"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coordList"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordList"}}, "value": {}}}, {}]}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "size"}}}, "left": {"name": {"identifier": "ignoreInvalidLines"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "rawPts"}, "initializer": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "rawPts"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pts"}}, "value": {"name": {"identifier": "validCoordinateSequence"}, "arguments": [{"name": {"identifier": "rawPts"}}]}}}, "condition": {"name": {"identifier": "fixInvalidLines"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordList"}}, "value": {}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {}}]}}, {"tryBlock": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "line"}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "pts"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "ex"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "ignoreInvalidLines"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "IllegalArgumentException"}}, "name": {"identifier": "ex"}}}]}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "line"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "line"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_coordList"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "IgnoreInvalidLines"}, {"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_coordList"}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "rawPts"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "FixInvalidLines"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "pts"}, {"InvocationExpression": [{"IdentifierName": "ValidCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rawPts"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_coordList"}, {"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "line"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ArgumentException"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "IgnoreInvalidLines"}]}, {"ThrowStatement": [{"IdentifierName": "ex"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "line"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "lce"}, "initializer": {"type": {"name": {"identifier": "LinearComponentExtracter"}}, "arguments": [{"name": {"identifier": "lines"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "lce"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "lines"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lce"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "lines"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "visitedKey"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Stack"}}, "name": {"identifier": "edgeStack"}, "initializer": {"type": {"name": {"identifier": "Stack"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "edgeStack"}}, "name": {"identifier": "push"}, "arguments": [{"name": {"identifier": "startingEdge"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "visitedEdges"}, "initializer": {"type": {"name": {"identifier": "HashSet"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "edge"}, "initializer": {"type": {"name": {"identifier": "QuadEdge"}}, "expression": {"scope": {"name": {"identifier": "edgeStack"}}, "name": {"identifier": "pop"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "QuadEdge"}}}, "name": {"identifier": "triEdges"}, "initializer": {"name": {"identifier": "fetchTriangleToVisit"}, "arguments": [{"name": {"identifier": "edge"}}, {"name": {"identifier": "edgeStack"}}, {"name": {"identifier": "includeFrame"}}, {"name": {"identifier": "visitedEdges"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "triVisitor"}}, "name": {"identifier": "visit"}, "arguments": [{"name": {"identifier": "triEdges"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "triEdges"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "visitedEdges"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "edge"}}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "edgeStack"}}, "name": {"identifier": "empty"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_visitedKey"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "QuadEdge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_startingEdge"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "QuadEdge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeStack"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeStack"}, {"IdentifierName": "Pop"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitedEdges"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge"}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "QuadEdge"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FetchTriangleToVisit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge"}]}, {"Argument": [{"IdentifierName": "edgeStack"}]}, {"Argument": [{"IdentifierName": "includeFrame"}]}, {"Argument": [{"IdentifierName": "visitedEdges"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "triEdges"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "triVisitor"}, {"IdentifierName": "Visit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "triEdges"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "l"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getStartPoint"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{}, {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "getEndPoint"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "isClosed"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "l"}}, "name": {"identifier": "isRing"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "StartPoint"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "EndPoint"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "IsClosed"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l"}, {"IdentifierName": "IsRing"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nodeCount"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "n"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "nodeCount"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "labelIncompleteNode"}, "arguments": [{"name": {"identifier": "n"}}, {"value": "0"}]}}, "elseStmt": {"expression": {"name": {"identifier": "labelIncompleteNode"}, "arguments": [{"name": {"identifier": "n"}}, {"value": "1"}]}}, "condition": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "isNull"}, "arguments": [{"value": "0"}]}}]}, "condition": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "isIsolated"}}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "updateLabelling"}, "arguments": [{"name": {"identifier": "label"}}]}}]}, "compare": {"scope": {"name": {"identifier": "ni"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "ni"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ni"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ni"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "IsIsolated"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "IsNull"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LabelIncompleteNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LabelIncompleteNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "UpdateLabelling"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "label"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "computeIntersectsForChain"}, "arguments": [{"name": {"identifier": "i"}}, {"name": {"identifier": "mce"}}, {"name": {"identifier": "j"}}, {"name": {"identifier": "si"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"scope": {"name": {"identifier": "mce"}}, "name": {"identifier": "startIndex"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "startIndex"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndex"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "j"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mce"}, {"IdentifierName": "startIndex"}]}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "j"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntersectsForChain"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "mce"}]}, {"Argument": [{"IdentifierName": "j"}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "Character"}}, "name": {"identifier": "isDigit"}, "arguments": [{"name": {"identifier": "ch"}}]}}, {"expression": {"variables": [{"type": {"type": "CHAR"}, "name": {"identifier": "chLow"}, "initializer": {"scope": {"name": {"identifier": "Character"}}, "name": {"identifier": "toLowerCase"}, "arguments": [{"name": {"identifier": "ch"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"value": "f"}, "left": {"name": {"identifier": "chLow"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"value": "a"}, "left": {"name": {"identifier": "chLow"}}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "char"}, {"IdentifierName": "IsDigit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ch"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "char"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"PredefinedType": "char"}, {"IdentifierName": "ToLower"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ch"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "chLow"}, {"CharacterLiteralExpression": "'a'"}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "chLow"}, {"CharacterLiteralExpression": "'f'"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "rawGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "rawGeom"}}}]}, "condition": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "parent"}}}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "rawGeom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "IMultiPolygon"}]}, {"ReturnStatement": [{"IdentifierName": "rawGeom"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rawGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "next"}}, "value": {"name": {"identifier": "next"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_next"}, {"IdentifierName": "next"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"index": {"name": {"identifier": "i0"}}, "name": {"name": {"identifier": "inputLine"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"name": {"identifier": "i1"}}, "name": {"name": {"identifier": "inputLine"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p2"}, "initializer": {"index": {"name": {"identifier": "i2"}}, "name": {"name": {"identifier": "inputLine"}}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isConcave"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isShallow"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "distanceTol"}}]}}}, {"expression": {"name": {"identifier": "isShallowSampled"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "i0"}}, {"name": {"identifier": "i2"}}, {"name": {"identifier": "distanceTol"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_inputLine"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_inputLine"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_inputLine"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i2"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsConcave"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsShallow"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "distanceTol"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsShallowSampled"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "i0"}]}, {"Argument": [{"IdentifierName": "i2"}]}, {"Argument": [{"IdentifierName": "distanceTol"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "addPt"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "elseStmt": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "addPt"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}]}}]}, "compare": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "length"}}}}]}], "update": [{"operator": "POSTFIX_DECREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"name": {"identifier": "isForward"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "isForward"}, {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddPt"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"PostDecrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddPt"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "base"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "circle"}}, "name": {"identifier": "getBoundary"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometricShapeFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "basePt"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "circle"}, {"IdentifierName": "Boundary"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"scope": {}, "name": {"identifier": "max"}}}, "left": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"scope": {}, "name": {"identifier": "min"}}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"GreaterThanExpression": [{"IdentifierName": "Min"}, {"IdentifierName": "max"}]}, {"LessThanExpression": [{"IdentifierName": "Max"}, {"IdentifierName": "min"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "remove"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}]}, {"name": {"identifier": "seg"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isChanged"}, "initializer": {"value": "false"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}, {"name": {"identifier": "allowRepeated"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isChanged"}}, "value": {"value": "true"}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coll"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "isChanged"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coll"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c"}]}, {"Argument": [{"IdentifierName": "allowRepeated"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isChanged"}, {"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isChanged"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "expandEnv"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"name": {"identifier": "addEnv"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "expandEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "env"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "largerNode"}, "initializer": {"name": {"identifier": "createNode"}, "arguments": [{"name": {"identifier": "expandEnv"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "largerNode"}}, "name": {"identifier": "insertNode"}, "arguments": [{"name": {"identifier": "node"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"name": {"identifier": "largerNode"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "addEnv"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "expandEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "_env"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expandEnv"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "largerNode"}, {"IdentifierName": "InsertNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "largerNode"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "loY"}}, "value": {"name": {"identifier": "y"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "loY"}}, "left": {"name": {"identifier": "y"}}}}]}, "elseStmt": {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hiY"}}, "value": {"name": {"identifier": "y"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "hiY"}}, "left": {"name": {"identifier": "y"}}}}]}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "centreY"}}, "left": {"name": {"identifier": "y"}}}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "centreY"}}, "left": {"name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "y"}, {"IdentifierName": "_centreY"}]}, {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "y"}, {"IdentifierName": "_loY"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_loY"}, {"IdentifierName": "y"}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "y"}, {"IdentifierName": "_centreY"}]}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "y"}, {"IdentifierName": "_hiY"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_hiY"}, {"IdentifierName": "y"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "pow4"}, "initializer": {"operator": "DIVIDE", "right": {"value": "3"}, "left": {"name": {"identifier": "numPts"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "exp"}, "initializer": {"operator": "DIVIDE", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"value": "4"}]}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"name": {"identifier": "pow4"}}]}}}]}}, {"expression": {"type": {"type": "INT"}, "expression": {"name": {"identifier": "exp"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "numPts"}, {"NumericLiteralExpression": "3d"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pow4"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "exp"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "components"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "geoms"}}, {"type": {"name": {"identifier": "GeometryLengthComparator"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "setUserData"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getLength"}}]}}]}, "variable": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "o"}}]}, "iterable": {"name": {"identifier": "geoms"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Components"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryLengthComparator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "UserData"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "_x"}]}, {"MultiplyExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "_y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isPositiveArea"}, "initializer": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "isCCW"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "addTriangle"}, "arguments": [{"name": {"identifier": "areaBasePt"}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, {"name": {"identifier": "isPositiveArea"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "addLineSegments"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsCCW"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddTriangle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_areaBasePt"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "isPositiveArea"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddLineSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gColl"}, "initializer": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "unionAll"}, "initializer": {"scope": {"name": {"identifier": "gColl"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0.0"}]}}]}}, {"expression": {"name": {"identifier": "unionAll"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_factory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gColl"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "unionAll"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polys"}, "initializer": {"scope": {"name": {"identifier": "fileRdr"}}, "name": {"identifier": "read"}}}]}}, {"expression": {"name": {"identifier": "checkInteriorPoint"}, "arguments": [{"name": {"identifier": "polys"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fileRdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInteriorPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}, {"Argument": [{"IdentifierName": "polys"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "GeometryMapper"}}, "name": {"identifier": "map"}, "arguments": [{"name": {"identifier": "g"}}, {"type": {"name": {"identifier": "MapOp"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}, "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "map"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryMapper"}, {"IdentifierName": "Map"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"SimpleLambdaExpression": [{"Parameter": "gin"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gin"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {}}]}, "elseStmt": {"statements": [{"expression": {"name": {"identifier": "x"}}}]}, "condition": {"scope": {}, "name": {"identifier": "le"}, "arguments": [{"name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"InvocationExpression": [{"IdentifierName": "LessThan"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}, {"ThisExpression": "this"}, {"IdentifierName": "x"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "fromWKT"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IsValidOp"}}, "name": {"identifier": "validator"}, "initializer": {"type": {"name": {"identifier": "IsValidOp"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "setSelfTouchingRingFormingHoleValid"}, "arguments": [{"value": "true"}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expected"}}, "left": {"name": {"identifier": "isValid"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FromWKT"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IsValidOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IsValidOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsSelfTouchingRingFormingHoleValid"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "isValid"}, {"IdentifierName": "expected"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LocationIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LocationIndexedLine"}}, "arguments": [{"name": {"identifier": "input"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearLocation"}}}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indicesOf"}, "arguments": [{"name": {"identifier": "subLine"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "extractLine"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "loc"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "loc"}}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LocationIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "LinearLocation"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndicesOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subLine"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractLine"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "loc"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "loc"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "intPt"}, "initializer": {"scope": {"name": {"identifier": "HCoordinate"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "p1"}}]}}]}}, {"expression": {"name": {"identifier": "intPt"}}}]}, "catchClauses": [{"body": {}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "NotRepresentableException"}}, "name": {"identifier": "ex"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "HCoordinate"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "_p0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "_p1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "intPt"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "NotRepresentableException"}]}, {"Block": []}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEndBundle"}}, "name": {"identifier": "esb"}, "initializer": {"type": {"name": {"identifier": "EdgeEndBundle"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "esb"}}, "name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "im"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeEndBundle"}, {"IdentifierName": "Edges"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "esb"}, {"IdentifierName": "UpdateIM"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "im"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "avg"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMinX"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMaxX"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Avg"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "MaxX"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "avg"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMinY"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMaxY"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Avg"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "MinY"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "MaxY"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coordsCopy"}, "initializer": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "copyDeep"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Arrays"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "coordsCopy"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}, "arguments": [{"name": {"identifier": "coordsCopy"}}, {"value": "false"}]}}]}}, {"expression": {"name": {"identifier": "coordList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "CopyDeep"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordsCopy"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordsCopy"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coordList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "transGeomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "transformGeom"}, "initializer": {"name": {"identifier": "transformPolygon"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}, {"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "transformGeom"}}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "transformGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"name": {"identifier": "transGeomList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "transformGeom"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "transGeomList"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "TransformPolygon"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "transformGeom"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transGeomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transformGeom"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "transGeomList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "filter"}, "arguments": [{}]}}, {"expression": {"scope": {"name": {"identifier": "shell"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}, {"body": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "holes"}}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Filter"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_shell"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_holes"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_holes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "UniqueCoordinateArrayFilter"}}, "name": {"identifier": "filter"}, "initializer": {"type": {"name": {"identifier": "UniqueCoordinateArrayFilter"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "filter"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "getCoordinates"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "UniqueCoordinateArrayFilter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "UniqueCoordinateArrayFilter"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Filter"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Coordinates"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "polygonize"}}}, {"expression": {"name": {"identifier": "cutEdges"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Polygonize"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_cutEdges"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polys"}, "initializer": {"scope": {"name": {"identifier": "fileRdr"}}, "name": {"identifier": "read"}}}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "0.01"}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "0.1"}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "10.0"}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "100.0"}]}}, {"expression": {"name": {"identifier": "runAll"}, "arguments": [{"name": {"identifier": "polys"}}, {"value": "1000.0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKTFileReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTFileReader"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "StreamReader"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "file"}]}]}]}]}, {"Argument": [{"IdentifierName": "rdr"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fileRdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "0.01"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "0.1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "10.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "100.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunAll"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"NumericLiteralExpression": "1000.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "350.2"}, {"value": "4566.8"}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, {"value": "350.2"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, {"value": "4566.8"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "z"}}, {"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "NULL_ORDINATE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "350.2"}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "350.2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Z"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "NullOrdinate"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "initialize"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, {}]}, "condition": {"name": {"identifier": "isNull"}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "initialize"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "dist"}}]}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "distance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_isNull"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Initialize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_distance"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Initialize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkInvalidCoordinates"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}, "name": {"identifier": "getCoordinates"}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}, {"body": {"statements": [{"expression": {"name": {"identifier": "checkInvalidCoordinates"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "getCoordinates"}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInvalidCoordinates"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "InteriorRings"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInvalidCoordinates"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "tokenizer"}}, "value": {"type": {"name": {"identifier": "StreamTokenizer"}}, "arguments": [{"name": {"identifier": "reader"}}]}}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "resetSyntax"}}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "a"}, {"value": "z"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "A"}, {"value": "Z"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"operator": "PLUS", "right": {"value": "32"}, "left": {"value": "128"}}, {"value": "255"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "0"}, {"value": "9"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "-"}, {"value": "-"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "+"}, {"value": "+"}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "wordChars"}, "arguments": [{"value": "."}, {"value": "."}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "whitespaceChars"}, "arguments": [{"value": "0"}, {"value": " "}]}}, {"expression": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "commentChar"}, "arguments": [{"value": "#"}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "z"}}, "value": {"value": "false"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m"}}, "value": {"value": "false"}}}, {"tryBlock": {"statements": [{"expression": {"name": {"identifier": "readGeometryTaggedText"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"type": {"name": {"identifier": "ParseException"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "toString"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "IOException"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "StreamTokenizer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}]}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "enumerator"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ReadGeometryTaggedText"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "enumerator"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "IOException"}]}, {"Block": [{"ThrowStatement": [{"ObjectCreationExpression": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "GeoAPI"}, {"IdentifierName": "IO"}]}, {"IdentifierName": "ParseException"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "x0"}}, {"name": {"identifier": "y0"}}, {"name": {"identifier": "x1"}}, {"name": {"identifier": "y1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "pointAlongOffset"}, "arguments": [{"name": {"identifier": "segFrac"}}, {"name": {"identifier": "offset"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "equalsTolerance"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "expectedX"}}, {"name": {"identifier": "expectedY"}}]}, {"name": {"identifier": "p"}}, {"value": "0.000001"}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x0"}]}, {"Argument": [{"IdentifierName": "y0"}]}, {"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "y1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "PointAlongOffset"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segFrac"}]}, {"Argument": [{"IdentifierName": "offset"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "EqualsTolerance"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedX"}]}, {"Argument": [{"IdentifierName": "expectedY"}]}]}]}]}, {"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"NumericLiteralExpression": "0.000001"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "p0"}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"name": {"identifier": "p1"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"IdentifierName": "_p0"}, {"IdentifierName": "_p1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "pow"}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v1"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "v2"}}, "name": {"identifier": "getY"}}}, {"value": "2.0"}]}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "pow"}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v1"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "v2"}}, "name": {"identifier": "getX"}}}, {"value": "2.0"}]}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Pow"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v1"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"NumericLiteralExpression": "2.0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Pow"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v2"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v1"}, {"IdentifierName": "Y"}]}]}]}, {"Argument": [{"NumericLiteralExpression": "2.0"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "lowerLeft"}, "initializer": {"name": {"identifier": "envelopeLowerLeft"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "lowerLeft"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "lowerLeft"}}, "name": {"identifier": "y"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeLowerLeft"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lowerLeft"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lowerLeft"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "root"}}, "value": {"type": {"name": {"identifier": "KdNode"}}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "data"}}]}}}, {"expression": {"name": {"identifier": "root"}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "root"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdNode"}}, "name": {"identifier": "matchNode"}, "initializer": {"name": {"identifier": "findBestMatchNode"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "matchNode"}}, "name": {"identifier": "increment"}}}, {"expression": {"name": {"identifier": "matchNode"}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "matchNode"}}}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "tolerance"}}}}, {"expression": {"name": {"identifier": "insertExact"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "data"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_root"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_root"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "data"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_root"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_tolerance"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindBestMatchNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "matchNode"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "matchNode"}, {"IdentifierName": "Increment"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "matchNode"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "InsertExact"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "data"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "ls"}, "initializer": {"scope": {"type": {"name": {"identifier": "GeometryFactory"}}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "ls"}}, "name": {"identifier": "isClosed"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "IsClosed"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"index": {"name": {"identifier": "posIndex"}}, "name": {"name": {"identifier": "location"}}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "posIndex"}}}}, {"expression": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "posIndex"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "index"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isCovered"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "resultLineList"}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isCovered"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "resultPolyList"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsCovered"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "_resultLineList"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsCovered"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "_resultPolyList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a1"}, "initializer": {"name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "tail"}}, {"name": {"identifier": "tip1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a2"}, "initializer": {"name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "tail"}}, {"name": {"identifier": "tip2"}}]}}]}}, {"expression": {"name": {"identifier": "diff"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tail"}]}, {"Argument": [{"IdentifierName": "tip1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tail"}]}, {"Argument": [{"IdentifierName": "tip2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Diff"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaxPointDistanceFilter"}}, "name": {"identifier": "distFilter"}, "initializer": {"type": {"name": {"identifier": "MaxPointDistanceFilter"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "discreteGeom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "distFilter"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptDist"}}, "name": {"identifier": "setMaximum"}, "arguments": [{"scope": {"name": {"identifier": "distFilter"}}, "name": {"identifier": "getMaxPointDistance"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaxDensifiedByFractionDistanceFilter"}}, "name": {"identifier": "fracFilter"}, "initializer": {"type": {"name": {"identifier": "MaxDensifiedByFractionDistanceFilter"}}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "densifyFrac"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "discreteGeom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "fracFilter"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptDist"}}, "name": {"identifier": "setMaximum"}, "arguments": [{"scope": {"name": {"identifier": "fracFilter"}}, "name": {"identifier": "getMaxPointDistance"}}]}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "densifyFrac"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaxPointDistanceFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "discreteGeom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distFilter"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptDist"}, {"IdentifierName": "SetMaximum"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distFilter"}, {"IdentifierName": "MaxPointDistance"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_densifyFrac"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaxDensifiedByFractionDistanceFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_densifyFrac"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "discreteGeom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fracFilter"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptDist"}, {"IdentifierName": "SetMaximum"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fracFilter"}, {"IdentifierName": "MaxPointDistance"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "polygonize"}}}, {"expression": {"name": {"identifier": "dangles"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Polygonize"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_dangles"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"name": {"identifier": "xLen"}}}, "left": {"name": {"identifier": "orgX"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"name": {"identifier": "yLen"}}}, "left": {"name": {"identifier": "orgY"}}}}]}}, {"expression": {"name": {"identifier": "createCoord"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "orgX"}, {"MultiplyExpression": [{"IdentifierName": "xLen"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rnd"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "orgY"}, {"MultiplyExpression": [{"IdentifierName": "yLen"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rnd"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateCoord"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "a2"}, "initializer": {"name": {"identifier": "normalize"}, "arguments": [{"name": {"identifier": "a"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "b2"}, "initializer": {"name": {"identifier": "normalize"}, "arguments": [{"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "a2"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "b2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Normalize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Normalize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a2"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "nearestLocations"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "NearestLocations"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "mask"}, "initializer": {"inner": {"operator": "LEFT_SHIFT", "right": {"name": {"identifier": "i"}}, "left": {"value": "1L"}}}}]}}, {"expression": {"thenExpr": {"value": "1"}, "elseExpr": {"value": "0"}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"inner": {"operator": "BINARY_AND", "right": {"name": {"identifier": "mask"}}, "left": {"name": {"identifier": "bits"}}}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"LeftShiftExpression": [{"NumericLiteralExpression": "1L"}, {"IdentifierName": "i"}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"NotEqualsExpression": [{"ParenthesizedExpression": [{"BitwiseAndExpression": [{"IdentifierName": "bits"}, {"IdentifierName": "mask"}]}]}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "1"}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkReciprocal"}, "arguments": [{"value": "3.0"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkReciprocal"}, "arguments": [{"value": "99.0"}, {"value": "1e-29"}]}}, {"expression": {"name": {"identifier": "checkReciprocal"}, "arguments": [{"value": "999.0"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkReciprocal"}, "arguments": [{"value": "314159269.0"}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckReciprocal"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3.0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckReciprocal"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "99.0"}]}, {"Argument": [{"NumericLiteralExpression": "1e-29"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckReciprocal"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "999.0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckReciprocal"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "314159269.0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "min"}, "initializer": {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "min"}}, "name": {"identifier": "y"}}, "left": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "y"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "min"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "min"}, {"IdentifierName": "Y"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "min"}, {"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "min"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "hole"}, "initializer": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}, {}]}}]}}, {"expression": {"scope": {"name": {"identifier": "holePolys"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "hole"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"IdentifierName": "geom"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "GetInteriorRingN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_holePolys"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hole"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "transformCoordinates"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "TransformCoordinates"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "CascadedPolygonUnion"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CascadedPolygonUnion"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordList"}}, "value": {"type": {"name": {"identifier": "CoordinateList"}}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coordList"}}}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "allowRepeatedPoints"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "lastPt"}}, "value": {"name": {"identifier": "pt"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_coordList"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_coordList"}, {"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "allowRepeatedPoints"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_lastPt"}, {"IdentifierName": "pt"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "COORDINATE_ARRAY_TYPE"}}]}}}]}}, {"expression": {"name": {"identifier": "coord"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coord"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdgeSubdivision"}}, "name": {"identifier": "subdiv"}, "initializer": {"name": {"identifier": "buildDelaunay"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "tris"}, "initializer": {"name": {"identifier": "extractTriangles"}, "arguments": [{"name": {"identifier": "subdiv"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "hull"}, "initializer": {"name": {"identifier": "computeHull"}, "arguments": [{"name": {"identifier": "tris"}}]}}]}}, {"expression": {"name": {"identifier": "hull"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildDelaunay"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractTriangles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subdiv"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeHull"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tris"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "hull"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "pt"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeMap"}, {"IdentifierName": "ContainsKey"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_nodeMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeMap"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "node"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segChains"}, "initializer": {"scope": {"name": {"identifier": "MonotoneChainBuilder"}}, "name": {"identifier": "getChains"}, "arguments": [{"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "getCoordinates"}}, {"name": {"identifier": "segStr"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "mc"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "setId"}, "arguments": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "idCounter"}}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "getEnvelope"}}, {"name": {"identifier": "mc"}}]}}, {"expression": {"scope": {"name": {"identifier": "monoChains"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "mc"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MonotoneChainBuilder"}, {"IdentifierName": "GetChains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"IdentifierName": "segStr"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segChains"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "Id"}]}, {"PostIncrementExpression": [{"IdentifierName": "_idCounter"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "Envelope"}]}]}, {"Argument": [{"IdentifierName": "mc"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_monoChains"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mc"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LineStringExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygonizer"}}, "name": {"identifier": "polygonizer"}, "initializer": {"type": {"name": {"identifier": "Polygonizer"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "lines"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getDangles"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineStringExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetDangles"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}, {"IdentifierName": "IGeometry"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "name": {"identifier": "oca"}, "initializer": {"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "ocaMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "oca"}}, {"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OrientedCoordinateArray"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ocaMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}, {"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "cc"}, "initializer": {"scope": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "circumcentre"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "c"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ccRadius"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "cc"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "pRadiusDiff"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "ccRadius"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "cc"}}]}}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "pRadiusDiff"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Triangle"}, {"IdentifierName": "Circumcentre"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "c"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cc"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cc"}]}]}]}, {"IdentifierName": "ccRadius"}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "pRadiusDiff"}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "invMask"}, "initializer": {"operator": "MINUS", "right": {"value": "1L"}, "left": {"inner": {"operator": "LEFT_SHIFT", "right": {"name": {"identifier": "nBits"}}, "left": {"value": "1L"}}}}}]}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "mask"}, "initializer": {"operator": "BITWISE_COMPLEMENT", "expression": {"name": {"identifier": "invMask"}}}}]}}, {"expression": {"operator": "BINARY_AND", "target": {"name": {"identifier": "xBits"}}, "value": {"name": {"identifier": "mask"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"ParenthesizedExpression": [{"LeftShiftExpression": [{"NumericLiteralExpression": "1L"}, {"IdentifierName": "nBits"}]}]}, {"NumericLiteralExpression": "1L"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"BitwiseNotExpression": [{"IdentifierName": "invMask"}]}]}]}]}]}, {"ExpressionStatement": [{"AndAssignmentExpression": [{"IdentifierName": "_xBits"}, {"IdentifierName": "mask"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nOverlaps"}}, "value": {"value": "0"}}}, {"expression": {"name": {"identifier": "prepareEvents"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "processOverlaps"}, "arguments": [{"name": {"identifier": "i"}}, {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getDeleteEventIndex"}}, {"name": {"identifier": "ev"}}, {"name": {"identifier": "si"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isInsert"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nOverlaps"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "PrepareEvents"}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsInsert"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ProcessOverlaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "DeleteEventIndex"}]}]}, {"Argument": [{"IdentifierName": "ev"}]}, {"Argument": [{"IdentifierName": "si"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pt"}}, "value": {}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "pt"}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"operator": "MINUS", "expression": {"value": "50"}}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"operator": "MINUS", "expression": {"value": "100"}}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"operator": "MINUS", "expression": {"value": "150"}}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "0"}, {"operator": "MINUS", "expression": {"value": "100"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "50"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "150"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"operator": "MINUS", "expression": {"value": "50"}}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"operator": "MINUS", "expression": {"value": "100"}}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"operator": "MINUS", "expression": {"value": "150"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "50"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "150"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"value": "50"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"value": "100"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"operator": "MINUS", "expression": {"value": "100"}}, {"value": "150"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"NumericLiteralExpression": "50"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "100"}]}]}, {"Argument": [{"NumericLiteralExpression": "150"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"value": "50"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"value": "100"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "100"}, {"value": "150"}]}}, {"expression": {"name": {"identifier": "checkSegment"}, "arguments": [{"value": "0"}, {"value": "100"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "50"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "150"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "octPts"}, "initializer": {"name": {"identifier": "computeOctPts"}, "arguments": [{"name": {"identifier": "inputPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "octPts"}}, {"value": "false"}]}}, {"thenStmt": {"statements": [{"expression": {}}]}, "condition": {"operator": "LESS", "right": {"value": "3"}, "left": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "closeRing"}}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeOctPts"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "octPts"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "3"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "CloseRing"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeNextCWEdges"}}}, {"expression": {"name": {"identifier": "label"}, "arguments": [{"name": {"identifier": "dirEdges"}}, {"operator": "MINUS", "expression": {"value": "1"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "maximalRings"}, "initializer": {"name": {"identifier": "findLabeledEdgeRings"}, "arguments": [{"name": {"identifier": "dirEdges"}}]}}]}}, {"expression": {"name": {"identifier": "convertMaximalToMinimalEdgeRings"}, "arguments": [{"name": {"identifier": "maximalRings"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edgeRingList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isMarked"}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInRing"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"name": {"identifier": "findEdgeRing"}, "arguments": [{"name": {"identifier": "de"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "edgeRingList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "edgeRingList"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeNextCWEdges"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdges"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindLabeledEdgeRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdges"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ConvertMaximalToMinimalEdgeRings"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "maximalRings"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "dirEdges"}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsMarked"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInRing"}]}, {"ContinueStatement": "continue;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindEdgeRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeRingList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "edgeRingList"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "pts"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "validPts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}, {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}]}}}]}}, {"expression": {"name": {"identifier": "validPts"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "validPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PreparedGeometry"}}, "name": {"identifier": "prepGeom"}, "initializer": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "prepGeom"}}, "name": {"identifier": "covers"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepGeom"}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "array"}, "initializer": {"elementType": {"type": "INT"}, "levels": [{"dimension": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "array"}}}, "value": {"scope": {"inner": {"type": {"name": {"identifier": "Integer"}}, "expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}, "name": {"identifier": "intValue"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "array"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "array"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "int"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "list"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "array"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "array"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "array"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "runMeths"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "NAME", "componentType": {"name": {"identifier": "Method"}}}, "name": {"identifier": "meth"}, "initializer": {"scope": {"name": {"identifier": "clz"}}, "name": {"identifier": "getDeclaredMethods"}}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "runMeths"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "meth"}}}]}}]}, "condition": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "meth"}}}, "name": {"identifier": "getName"}}, "name": {"identifier": "startsWith"}, "arguments": [{"name": {"identifier": "RUN_PREFIX"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "meth"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Method"}}}, "expression": {"scope": {"name": {"identifier": "runMeths"}}, "name": {"identifier": "toArray"}, "arguments": [{"elementType": {"name": {"identifier": "Method"}}, "levels": [{"dimension": {"value": "0"}}]}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "MethodInfo"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "clz"}, {"IdentifierName": "GetMethods"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "meth"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "meth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Name"}]}, {"IdentifierName": "StartsWith"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "methodPrefix"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "runMeths"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "meth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "runMeths"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "directedEdges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "directedEdge"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "directedEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "directedEdge"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}, "name": {"identifier": "buildGeometry"}, "arguments": [{"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geoms"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "g2"}]}]}]}]}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "snapPts"}}}]}}, {"thenStmt": {"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "snapPts"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "snapTolerance"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "distance"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "snapPts"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "snapPts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "snapPts"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}, {"IdentifierName": "_snapTolerance"}]}, {"ReturnStatement": [{"IdentifierName": "coord"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "IllegalArgumentException"}}, "arguments": [{"value": "invalid ordinateIndex"}]}}]}], "selector": {"name": {"identifier": "ordinateIndex"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Z"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Geometry"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "WKBReader"}}, "name": {"identifier": "wkbReader"}, "initializer": {"type": {"name": {"identifier": "WKBReader"}}, "arguments": [{"name": {"identifier": "geomFactory"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "BYTE"}}, "name": {"identifier": "wkb"}, "initializer": {"scope": {"name": {"identifier": "WKBReader"}}, "name": {"identifier": "hexToBytes"}, "arguments": [{"name": {"identifier": "wkbHex"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"scope": {"name": {"identifier": "wkbReader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkb"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"inner": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "expected"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "g2"}}, {"name": {"identifier": "comp2"}}]}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "g2"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "expected"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEqual"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKBReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKBReader"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "wkbReader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkb"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKTReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "expected"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isEqual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "name": {"identifier": "lines"}, "initializer": {"elementType": {"name": {"identifier": "LineString"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "index"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "index"}}}, "name": {"name": {"identifier": "lines"}}}, "value": {"name": {"identifier": "line"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "lines"}}}}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiLineString"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILineString"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ILineString"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStrings"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ISegmentString"}, {"IdentifierName": "segStrings"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "lines"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "index"}]}]}]}]}, {"IdentifierName": "line"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lines"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "lines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateMultiLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LocationIndexedLine"}}, "name": {"identifier": "lil"}, "initializer": {"type": {"name": {"identifier": "LocationIndexedLine"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "lil"}}, "name": {"identifier": "extractLine"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}]}}]}}, {"expression": {"name": {"identifier": "checkExpected"}, "arguments": [{"name": {"identifier": "result"}}, {"name": {"identifier": "expected"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LocationIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lil"}, {"IdentifierName": "ExtractLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}, {"Argument": [{"IdentifierName": "end"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckExpected"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}, {"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "trunc"}, "initializer": {"scope": {"name": {"identifier": "x"}}, "name": {"identifier": "trunc"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"scope": {"name": {"identifier": "trunc"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "expected"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DD"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x"}, {"IdentifierName": "Truncate"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trunc"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "True"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isEqual"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isEqual"}, {"EqualsExpression": [{"IdentifierName": "trunc"}, {"IdentifierName": "expected"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "True"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isEqual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"value": "1"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "resultPointList"}}]}}, {"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "resultLineList"}}]}}, {"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "resultPolyList"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "createEmptyResult"}, "arguments": [{"name": {"identifier": "opcode"}}, {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}, {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}, {"name": {"identifier": "geomFact"}}]}}, "condition": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geomList"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultPtList"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultLiList"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultPlList"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateEmptyResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Geometry"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Geometry"}]}]}, {"Argument": [{"IdentifierName": "_geomFact"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "bufs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "comp"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "comp"}}}}, {"expression": {"scope": {"name": {"identifier": "bufs"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"type": {"name": {"identifier": "GeometryCollectionIterator"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "bufs"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryCollectionEnumerator"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometryCollection"}, {"IdentifierName": "g"}]}]}]}]}, {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "IGeometryCollection"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufs"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intersections"}, "initializer": {"name": {"identifier": "findInteriorIntersections"}, "arguments": [{"name": {"identifier": "segStrings"}}, {"name": {"identifier": "li"}}]}}]}}, {"expression": {"name": {"identifier": "computeIntersectionSnaps"}, "arguments": [{"name": {"identifier": "intersections"}}]}}, {"expression": {"name": {"identifier": "computeVertexSnaps"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindInteriorIntersections"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}, {"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntersectionSnaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intersections"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeVertexSnaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isTouches"}, "arguments": [{"name": {"identifier": "getDimension"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsTouches"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Dimension"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "BoundaryOp"}}, "name": {"identifier": "getBoundary"}, "arguments": [{"name": {"identifier": "g"}}, {"scope": {"name": {"identifier": "BoundaryNodeRule"}}, "name": {"identifier": "ENDPOINT_BOUNDARY_RULE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryOp"}, {"IdentifierName": "GetBoundary"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BoundaryNodeRules"}, {"IdentifierName": "EndpointBoundaryRule"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "l1"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt1"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "l2"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt2"}}]}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pt"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"scope": {"name": {"identifier": "l1"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "l1"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"value": "1"}]}, {"scope": {"name": {"identifier": "l2"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "l2"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"value": "1"}]}]}}}]}}, {"expression": {"name": {"identifier": "checkIntersection"}, "arguments": [{"name": {"identifier": "pt"}}, {"value": "0"}, {}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt2"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l1"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l1"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l2"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "l2"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100"}, {"value": "100"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "100"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100"}, {"value": "10"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100"}, {"value": "100"}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasIntersection"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersectionNum"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "HasIntersection"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "a"}}, {"type": {"name": {"identifier": "GeometryPredicate"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "coveredBy"}, "arguments": [{"name": {"identifier": "mask"}}]}}]}, "type": {"type": "BOOLEAN"}, "name": {"identifier": "isTrue"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mask"}, {"IdentifierName": "CoveredBy"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runGeometry"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dimension"}}, {"name": {"identifier": "byteOrder"}}, {"name": {"identifier": "toHex"}}, {"value": "100"}]}}, {"expression": {"name": {"identifier": "runGeometry"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dimension"}}, {"name": {"identifier": "byteOrder"}}, {"name": {"identifier": "toHex"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "runGeometry"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dimension"}}, {"name": {"identifier": "byteOrder"}}, {"name": {"identifier": "toHex"}}, {"value": "101010"}]}}, {"expression": {"name": {"identifier": "runGeometry"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dimension"}}, {"name": {"identifier": "byteOrder"}}, {"name": {"identifier": "toHex"}}, {"operator": "MINUS", "expression": {"value": "1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunGeometry"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"IdentifierName": "g"}]}]}, {"Argument": [{"IdentifierName": "dimension"}]}, {"Argument": [{"IdentifierName": "byteOrder"}]}, {"Argument": [{"IdentifierName": "toHex"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunGeometry"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"IdentifierName": "g"}]}]}, {"Argument": [{"IdentifierName": "dimension"}]}, {"Argument": [{"IdentifierName": "byteOrder"}]}, {"Argument": [{"IdentifierName": "toHex"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunGeometry"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"IdentifierName": "g"}]}]}, {"Argument": [{"IdentifierName": "dimension"}]}, {"Argument": [{"IdentifierName": "byteOrder"}]}, {"Argument": [{"IdentifierName": "toHex"}]}, {"Argument": [{"NumericLiteralExpression": "101010"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunGeometry"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"IdentifierName": "g"}]}]}, {"Argument": [{"IdentifierName": "dimension"}]}, {"Argument": [{"IdentifierName": "byteOrder"}]}, {"Argument": [{"IdentifierName": "toHex"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edgeColl"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeColl"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, {"value": "0.0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, {"value": "0.0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "z"}}, {"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "NULL_ORDINATE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Z"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "NullOrdinate"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "z"}}, "value": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}}}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Z"}]}, {"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}]}]}, {"NumericLiteralExpression": "2"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Node"}}, "arguments": [{"name": {"identifier": "coord"}}, {"type": {"name": {"identifier": "DirectedEdgeStar"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Node"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doPredicates"}, "arguments": [{"name": {"identifier": "polyInsidePoly"}}]}}, {"expression": {"name": {"identifier": "doPredicates"}, "arguments": [{"name": {"identifier": "polyPartiallyOverlapsPoly"}}]}}, {"expression": {"name": {"identifier": "doPredicates"}, "arguments": [{"name": {"identifier": "polyTouchesPolyAtPoint"}}]}}, {"expression": {"name": {"identifier": "doPredicates"}, "arguments": [{"name": {"identifier": "polyTouchesPolyAtLine"}}]}}, {"expression": {"name": {"identifier": "doPredicates"}, "arguments": [{"name": {"identifier": "polyInsideHoleInPoly"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoPredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyInsidePoly"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoPredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyPartiallyOverlapsPoly"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoPredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyTouchesPolyAtPoint"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoPredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyTouchesPolyAtLine"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoPredicates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyInsideHoleInPoly"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getTriangles"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetTriangles"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "minPts"}}}, "value": {"name": {"identifier": "p"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "seg0"}}, {"name": {"identifier": "seg1"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "minPts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "closestPoint"}, "arguments": [{"name": {"identifier": "p"}}]}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "p"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg0"}]}, {"Argument": [{"IdentifierName": "seg1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "ClosestPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "newGeom"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "operation"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "targetFactory"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {}}]}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "geom"}}, "left": {"name": {"identifier": "newGeom"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "newGeom"}}}}, {"expression": {"name": {"identifier": "newGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_operation"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_targetFactory"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"IdentifierName": "geom"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"CastExpression": [{"IdentifierName": "ILinearRing"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreateGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newGeom"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "expected"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "found"}, "initializer": {"value": "false"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "actual"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "found"}}, "value": {"value": "true"}}}, {}]}, "condition": {"scope": {"name": {"identifier": "actual"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "expected"}}]}}]}, "compare": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "j"}, "initializer": {"scope": {"name": {"identifier": "actualEnvelopes"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isSuccess"}}, "value": {"value": "false"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "found"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "expectedEnvelopes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "expectedEnvelopes"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "actualEnvelopes"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "actual"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "found"}, {"TrueLiteralExpression": "true"}]}]}, {"BreakStatement": "break;"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "found"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsSuccess"}, {"FalseLiteralExpression": "false"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFunction"}}, "name": {"identifier": "func"}, "initializer": {"type": {"name": {"identifier": "GeometryFunction"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "funcName"}, "initializer": {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getName"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "func"}}}, "condition": {"scope": {"name": {"identifier": "funcName"}}, "name": {"identifier": "equalsIgnoreCase"}, "arguments": [{"name": {"identifier": "name"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "functions"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "IGeometryFunction"}, {"IdentifierName": "_functions"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "string"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Name"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "funcName"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "name"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "StringComparison"}, {"IdentifierName": "InvariantCultureIgnoreCase"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "func"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "rotate"}, "arguments": [{"value": "3"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "translate"}, "arguments": [{"value": "10"}, {"value": "10"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "scale"}, "arguments": [{"value": "2"}, {"value": "10"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "shear"}, "arguments": [{"value": "5"}, {"value": "2"}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "reflect"}, "arguments": [{"value": "5"}, {"value": "8"}, {"value": "10"}, {"value": "2"}]}}, {"expression": {"name": {"identifier": "runTransform"}, "arguments": [{"name": {"identifier": "trans"}}, {"name": {"identifier": "ctl0"}}, {"name": {"identifier": "ctl1"}}, {"name": {"identifier": "ctl2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Rotate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Translate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Scale"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Shear"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Reflect"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "8"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunTransform"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trans"}]}, {"Argument": [{"IdentifierName": "ctl0"}]}, {"Argument": [{"IdentifierName": "ctl1"}]}, {"Argument": [{"IdentifierName": "ctl2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xp"}, "initializer": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}]}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "yp"}, "initializer": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}]}}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}, {"name": {"identifier": "xp"}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}, {"name": {"identifier": "yp"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_trans"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_trans"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"IdentifierName": "xp"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "yp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "ring"}}]}}, {"expression": {"scope": {"name": {"identifier": "totalEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_totalEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "xdd"}, "initializer": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "parse"}, "arguments": [{"name": {"identifier": "str"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "err"}, "initializer": {"scope": {"scope": {"name": {"identifier": "xdd"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "expectedVal"}}]}, "name": {"identifier": "doubleValue"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "relErr"}, "initializer": {"operator": "DIVIDE", "right": {"scope": {"name": {"identifier": "xdd"}}, "name": {"identifier": "doubleValue"}}, "left": {"name": {"identifier": "err"}}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LESS_EQUALS", "right": {"name": {"identifier": "relErrBound"}}, "left": {"name": {"identifier": "err"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DD"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Parse"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "str"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "xdd"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedVal"}]}]}]}, {"IdentifierName": "ToDoubleValue"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "err"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "xdd"}, {"IdentifierName": "ToDoubleValue"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LessThanOrEqualExpression": [{"IdentifierName": "err"}, {"IdentifierName": "relErrBound"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"name": {"identifier": "isNaN"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "plus5"}, "initializer": {"scope": {}, "name": {"identifier": "add"}, "arguments": [{"value": "0.5"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "plus5"}}, "name": {"identifier": "floor"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsNaN"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"ThisExpression": "this"}, {"NumericLiteralExpression": "0.5d"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "plus5"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "result"}, "initializer": {"scope": {"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getGeometry"}}, "name": {"identifier": "covers"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "Geometry"}]}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "minCoord"}, "initializer": {}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minCoord"}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}}}]}, "condition": {"operator": "OR", "right": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "minCoord"}}, "name": {"identifier": "compareTo"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "minCoord"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "minCoord"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "minCoord"}, {"NullLiteralExpression": "null"}]}, {"GreaterThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "minCoord"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minCoord"}, {"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "minCoord"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "NaN"}}}, "condition": {"name": {"identifier": "isNaN"}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "fhi"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"name": {"identifier": "hi"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "flo"}, "initializer": {"value": "0.0"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "flo"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"name": {"identifier": "lo"}}]}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "hi"}}, "left": {"name": {"identifier": "fhi"}}}}, {"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"name": {"identifier": "fhi"}}, {"name": {"identifier": "flo"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsNaN"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "NaN"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_hi"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0.0"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "fhi"}, {"IdentifierName": "_hi"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "flo"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_lo"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fhi"}]}, {"Argument": [{"IdentifierName": "flo"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "testIsolatedRing"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestIsolatedRing"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "rotationInstance"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "0"}, {"value": "10"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "10"}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"value": "10"}, {"operator": "MINUS", "expression": {"value": "10"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "RotationInstance"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"name": {"identifier": "centre"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_centre"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "segs"}, "initializer": {"scope": {"name": {"identifier": "LineHandlingFunctions"}}, "name": {"identifier": "extractSegments"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "posDist"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "segBuf"}, "initializer": {"name": {"identifier": "bufferByComponents"}, "arguments": [{"name": {"identifier": "segs"}}, {"name": {"identifier": "posDist"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "segBuf"}}]}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "distance"}}}}, {"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "segBuf"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineHandlingFunctions"}, {"IdentifierName": "ExtractSegments"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BufferByComponents"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segs"}]}, {"Argument": [{"IdentifierName": "posDist"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "distance"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segBuf"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segBuf"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}, {"operator": "MINUS", "expression": {"value": "1"}}, {"value": "1"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"operator": "MINUS", "expression": {"value": "1"}}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "argCount"}}, "value": {"scope": {"name": {"identifier": "args"}}, "name": {"identifier": "length"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "distance"}}, "value": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "parseDouble"}, "arguments": [{"type": {"name": {"identifier": "String"}}, "expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "args"}}}}]}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "quadSegments"}}, "value": {"scope": {"name": {"identifier": "Integer"}}, "name": {"identifier": "parseInt"}, "arguments": [{"type": {"name": {"identifier": "String"}}, "expression": {"index": {"value": "1"}, "name": {"name": {"identifier": "args"}}}}]}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "argCount"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "endCapStyle"}}, "value": {"scope": {"name": {"identifier": "Integer"}}, "name": {"identifier": "parseInt"}, "arguments": [{"type": {"name": {"identifier": "String"}}, "expression": {"index": {"value": "2"}, "name": {"name": {"identifier": "args"}}}}]}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "3"}, "left": {"name": {"identifier": "argCount"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_argCount"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "args"}, {"IdentifierName": "Length"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distance"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "Parse"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "String"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_argCount"}, {"NumericLiteralExpression": "2"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_quadSegments"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Int32"}, {"IdentifierName": "Parse"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "String"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_argCount"}, {"NumericLiteralExpression": "3"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_endCapStyle"}, {"CastExpression": [{"IdentifierName": "EndCapStyle"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Int32"}, {"IdentifierName": "Parse"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "String"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getEdges"}}}]}}, {"expression": {"type": {"name": {"identifier": "QuadEdge"}}, "expression": {"scope": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}, "name": {"identifier": "next"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetEdges"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "enumerator"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "enumerator"}, {"IdentifierName": "Current"}]}]}]}, {"ElseClause": [{"Block": [{"ThrowStatement": [{"ObjectCreationExpression": [{"QualifiedName": [{"IdentifierName": "System"}, {"IdentifierName": "IndexOutOfRangeException"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "addNode"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "lbl"}, "initializer": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "boundaryCount"}, "initializer": {"value": "1"}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "loc"}}, "value": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "ON"}}]}}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "boundaryCount"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"name": {"identifier": "loc"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "newLoc"}, "initializer": {"name": {"identifier": "determineBoundary"}, "arguments": [{"name": {"identifier": "boundaryNodeRule"}}, {"name": {"identifier": "boundaryCount"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "newLoc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodeMap"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "On"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "boundaryCount"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "DetermineBoundary"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_boundaryNodeRule"}]}, {"Argument": [{"IdentifierName": "boundaryCount"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "newLoc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "segFrac"}, "initializer": {"name": {"identifier": "projectionFactor"}, "arguments": [{"name": {"identifier": "inputPt"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segFrac"}}, "value": {"value": "0.0"}}}, "elseStmt": {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segFrac"}}, "value": {"value": "1.0"}}}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "segFrac"}}]}, "left": {"operator": "GREATER", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segFrac"}}}}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segFrac"}}}}, {"expression": {"name": {"identifier": "segFrac"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ProjectionFactor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "segFrac"}, {"NumericLiteralExpression": "0.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "segFrac"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ElseClause": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "segFrac"}, {"NumericLiteralExpression": "1.0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "segFrac"}, {"NumericLiteralExpression": "1.0"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segFrac"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Densifier"}}, "name": {"identifier": "densifier"}, "initializer": {"type": {"name": {"identifier": "Densifier"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "densifier"}}, "name": {"identifier": "setDistanceTolerance"}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, {"expression": {"scope": {"name": {"identifier": "densifier"}}, "name": {"identifier": "getResultGeometry"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Densifier"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "DistanceTolerance"}, {"IdentifierName": "distanceTolerance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "densifier"}, {"IdentifierName": "GetResultGeometry"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "threwParseEx"}, "initializer": {"value": "false"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "getMessage"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "threwParseEx"}}, "value": {"value": "true"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "ParseException"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "threwParseEx"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"QualifiedName": [{"QualifiedName": [{"IdentifierName": "GeoAPI"}, {"IdentifierName": "IO"}]}, {"IdentifierName": "ParseException"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "Message"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "threwParseEx"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "threwParseEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"scope": {"scope": {"scope": {"name": {"identifier": "bx"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ax"}}]}, "name": {"identifier": "multiply"}, "arguments": [{"scope": {"name": {"identifier": "cy"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ay"}}]}]}, "name": {"identifier": "subtract"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "by"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ay"}}]}, "name": {"identifier": "multiply"}, "arguments": [{"scope": {"name": {"identifier": "cx"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "ax"}}]}]}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bx"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ax"}]}]}]}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cy"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ay"}]}]}]}]}]}]}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "by"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ay"}]}]}]}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cx"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ax"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "lbl"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "merge"}, "arguments": [{"name": {"identifier": "lbl"}}]}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "Nodes"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeit"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "Label"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "Merge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lbl"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "x1"}}, "left": {"name": {"identifier": "x0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "x1"}}, "left": {"name": {"identifier": "x0"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "x0"}, {"IdentifierName": "x1"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "x0"}, {"IdentifierName": "x1"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "nodedSegStrings"}}, "value": {"name": {"identifier": "inputSegStrings"}}}}, {"body": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "inputSegStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "intersectChains"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nodedSegStrings"}, {"IdentifierName": "inputSegStrings"}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "inputSegStrings"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "IntersectChains"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"name": {"identifier": "findNode"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "node"}}, "value": {"type": {"name": {"identifier": "Node"}}, "arguments": [{"name": {"identifier": "pt"}}]}}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"name": {"identifier": "node"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "node"}, {"ObjectCreationExpression": [{"IdentifierName": "Node"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "node"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "buildSTRtree"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "queryEnv"}}, "value": {"name": {"identifier": "geoms"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "queryEnv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryEnv"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "result"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildSTRtree"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryEnv"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "OR", "right": {"inner": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "lo"}}}, "left": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "hi"}}}}}, "left": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "hi"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalOrExpression": [{"GreaterThanExpression": [{"IdentifierName": "_hi"}, {"NumericLiteralExpression": "0.0"}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_hi"}, {"NumericLiteralExpression": "0.0"}]}, {"GreaterThanExpression": [{"IdentifierName": "_lo"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "n"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "isInResult"}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "isIncidentEdgeInResult"}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "filterCoveredNodeToPoint"}, "arguments": [{"name": {"identifier": "n"}}]}}]}, "condition": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "isResultOfOp"}, "arguments": [{"name": {"identifier": "label"}}, {"name": {"identifier": "opCode"}}]}}]}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "INTERSECTION"}}, "left": {"name": {"identifier": "opCode"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getEdges"}}, "name": {"identifier": "getDegree"}}}}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"scope": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "getGraph"}}, "name": {"identifier": "getNodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_op"}, {"IdentifierName": "Graph"}]}, {"IdentifierName": "Nodes"}]}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "IsInResult"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "IsIncidentEdgeInResult"}]}, {"ArgumentList": "()"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Edges"}]}, {"IdentifierName": "Degree"}]}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "opCode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Intersection"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "IsResultOfOp"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "label"}]}, {"Argument": [{"IdentifierName": "opCode"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "FilterCoveredNodeToPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "origin"}}, "value": {"name": {"identifier": "origin"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "size"}}, "value": {"name": {"identifier": "size"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_origin"}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_size"}, {"IdentifierName": "size"}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "setM"}, "arguments": [{"name": {"identifier": "value"}}]}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "M"}}}], "selector": {"name": {"identifier": "ordinateIndex"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ExtendedCoordinate"}, {"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}]}, {"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "X"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Z"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "M"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "M"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "g0"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt0"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "g1"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt1"}}]}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts0"}, "initializer": {"scope": {"name": {"identifier": "g0"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts1"}, "initializer": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Comparator"}}, "name": {"identifier": "comp"}, "initializer": {"type": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "BidirectionalComparator"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "pts0"}}, {"name": {"identifier": "pts1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt0"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g0"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"QualifiedName": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "BidirectionalComparator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts0"}]}, {"Argument": [{"IdentifierName": "pts1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinX"}}, {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinY"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinY"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "UNION"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Union"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"name": {"identifier": "NULL_VALUE"}}, "left": {"index": {"name": {"identifier": "posIndex"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "posIndex"}]}]}]}]}, {"IdentifierName": "@null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"name": {"identifier": "msg"}}]}}]}, "cs_ast": {"Block": [{"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Exception"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "msg"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "incEdge"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "qe"}, "initializer": {"name": {"identifier": "start"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "incEdge"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "qe"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "qe"}}, "value": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "start"}}, "left": {"name": {"identifier": "qe"}}}}, {"expression": {"name": {"identifier": "incEdge"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "QuadEdge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "start"}]}]}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "incEdge"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "qe"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "qe"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "start"}]}]}, {"ReturnStatement": [{"IdentifierName": "incEdge"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "reverse"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"name": {"identifier": "addLine"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "getBounds"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CastExpression": [{"IdentifierName": "Envelope"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Bounds"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "fixedPM"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineIntersector"}}, "name": {"identifier": "li"}, "initializer": {"type": {"name": {"identifier": "RobustLineIntersector"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "setPrecisionModel"}, "arguments": [{"name": {"identifier": "fixedPM"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}, "arguments": [{"type": {"name": {"identifier": "IntersectionAdder"}}, "arguments": [{"name": {"identifier": "li"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getNodedSubstrings"}}, {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPrecisionModel"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "fixedPM"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "INoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "IntersectionAdder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "selected"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "selected"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "condition": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isValid"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "selected"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleLambdaExpression": [{"Parameter": "g"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsValid"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "deLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "geomIndex"}}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}, "left": {"name": {"identifier": "loc"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "setLocation"}, "arguments": [{"name": {"identifier": "geomIndex"}}, {"name": {"identifier": "loc"}}]}}, {}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}, "left": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "geomIndex"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "deLabel"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Null"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_label"}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "NONE"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "loc"}}, "value": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "eltIndex"}}]}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nLoc"}, "initializer": {"scope": {"name": {"identifier": "label2"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "eltIndex"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "loc"}}, "value": {"name": {"identifier": "nLoc"}}}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"name": {"identifier": "loc"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "label2"}}, "name": {"identifier": "isNull"}, "arguments": [{"name": {"identifier": "eltIndex"}}]}}}, {"expression": {"name": {"identifier": "loc"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Label"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eltIndex"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label2"}, {"IdentifierName": "IsNull"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eltIndex"}]}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label2"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eltIndex"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "nLoc"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "loc"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "inputPts"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newPts"}, "initializer": {"scope": {"name": {"identifier": "Densifier"}}, "name": {"identifier": "densifyPoints"}, "arguments": [{"name": {"identifier": "inputPts"}}, {"name": {"identifier": "distanceTolerance"}}, {"scope": {"name": {"identifier": "parent"}}, "name": {"identifier": "getPrecisionModel"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newPts"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "0"}}]}}}]}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "newPts"}}, "name": {"identifier": "length"}}}, "left": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "parent"}}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "newPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Densifier"}, {"IdentifierName": "DensifyPoints"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}, {"Argument": [{"IdentifierName": "_distanceTolerance"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "PrecisionModel"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "ILineString"}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "newPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newPts"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "interactsWithAny"}, "initializer": {"value": "false"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "elem1"}, "initializer": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "interacts"}, "initializer": {"scope": {"scope": {"name": {"identifier": "elem1"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "elem0"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "interacts1"}}}, "value": {"value": "true"}}}, "condition": {"name": {"identifier": "interacts"}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "interactsWithAny"}}, "value": {"value": "true"}}}, "condition": {"name": {"identifier": "interacts"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "interactsWithAny"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_g1"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_g1"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "elem1"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "elem0"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "interacts"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_interacts1"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"TrueLiteralExpression": "true"}]}]}]}, {"IfStatement": [{"IdentifierName": "interacts"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "interactsWithAny"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "interactsWithAny"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "CHAR"}}, "name": {"identifier": "chs"}, "initializer": {"scope": {"name": {"identifier": "text"}}, "name": {"identifier": "toCharArray"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "FontRenderContext"}}, "name": {"identifier": "fontContext"}, "initializer": {"type": {"name": {"identifier": "FontRenderContext"}}, "arguments": [{}, {"value": "false"}, {"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GlyphVector"}}, "name": {"identifier": "gv"}, "initializer": {"scope": {"name": {"identifier": "font"}}, "name": {"identifier": "createGlyphVector"}, "arguments": [{"name": {"identifier": "fontContext"}}, {"name": {"identifier": "chs"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "polys"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "ShapeReader"}}, "name": {"identifier": "read"}, "arguments": [{"scope": {"name": {"identifier": "gv"}}, "name": {"identifier": "getGlyphOutline"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "flatness"}}, {"name": {"identifier": "geomFact"}}]}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "polys"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "j"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gv"}}, "name": {"identifier": "getNumGlyphs"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "polys"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "text"}]}, {"Argument": [{"IdentifierName": "font"}]}, {"Argument": [{"NumericLiteralExpression": "12"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Point"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FlowDirection"}, {"IdentifierName": "LeftToRight"}]}]}, {"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "pts"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "ConnectedElementPointFilter"}}, "arguments": [{"name": {"identifier": "pts"}}]}]}}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "ConnectedElementPointFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "setAllLocationsIfNull"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "nodeLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "0"}]}]}}, {"expression": {"scope": {"name": {"identifier": "label"}}, "name": {"identifier": "setAllLocationsIfNull"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "nodeLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"value": "1"}]}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "Edges"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Label"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "SetAllLocationsIfNull"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeLabel"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "label"}, {"IdentifierName": "SetAllLocationsIfNull"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeLabel"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BoundablePair"}}, "name": {"identifier": "nd"}, "initializer": {"type": {"name": {"identifier": "BoundablePair"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "nd"}}, "name": {"identifier": "distance"}}, "left": {"name": {"identifier": "distance"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "nd"}}, "name": {"identifier": "distance"}}, "left": {"name": {"identifier": "distance"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_distance"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "o"}, {"IdentifierName": "_distance"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_distance"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "o"}, {"IdentifierName": "_distance"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "dist"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "distance"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "dist"}}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Polygon"}}}, "name": {"identifier": "revGeoms"}, "initializer": {"elementType": {"name": {"identifier": "Polygon"}}, "levels": [{"dimension": {"name": {"identifier": "n"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "revGeoms"}}}, "value": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "reverse"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiPolygon"}, "arguments": [{"name": {"identifier": "revGeoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Geometries"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IPolygon"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IPolygon"}, {"ArrayRankSpecifier": [{"IdentifierName": "n"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Geometries"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "revGeoms"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"CastExpression": [{"IdentifierName": "Polygon"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "revGeoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "expression": {"name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}]}, {"value": "false"}]}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "size"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "Count"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"ThisExpression": "this"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}, {"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Densifier"}}, "name": {"identifier": "densify"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Densifier"}, {"IdentifierName": "Densify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isValid"}}, "value": {"value": "true"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segInt"}}, "value": {"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "arguments": [{"name": {"identifier": "li"}}]}}}, {"expression": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "setFindAllIntersections"}, "arguments": [{"name": {"identifier": "findAllIntersections"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MCIndexNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setSegmentIntersector"}, "arguments": [{"name": {"identifier": "segInt"}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isValid"}}, "value": {"value": "false"}}}, {}]}, "condition": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "hasIntersection"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isValid"}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segInt"}, {"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segInt"}, {"IdentifierName": "FindAllIntersections"}]}, {"IdentifierName": "FindAllIntersections"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MCIndexNoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segInt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segStrings"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segInt"}, {"IdentifierName": "HasIntersection"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isValid"}, {"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": "return;"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"type": {"name": {"identifier": "Envelope"}}}, "name": {"identifier": "getHeight"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"type": {"name": {"identifier": "Envelope"}}}, "name": {"identifier": "getWidth"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"type": {"name": {"identifier": "Envelope"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "100"}, {"value": "101"}, {"value": "100"}, {"value": "101"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "init"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}, {"IdentifierName": "Height"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}, {"IdentifierName": "Width"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "101"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "101"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Init"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "index"}, "initializer": {"type": {"name": {"identifier": "KdTree"}}, "arguments": [{"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "copy"}}}, "condition": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "linestringMap"}}, "value": {"type": {"name": {"identifier": "HashMap"}}}}}, {"expression": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "LineStringMapBuilderFilter"}}, "arguments": [{}]}]}}, {"expression": {"scope": {"name": {"identifier": "lineSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"scope": {"name": {"identifier": "linestringMap"}}, "name": {"identifier": "values"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "LineStringTransformer"}}, "arguments": [{"name": {"identifier": "linestringMap"}}]}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_lineStringMap"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}, {"IdentifierName": "TaggedLineString"}]}]}, {"ArgumentList": "()"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineStringMapBuilderFilter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineStringMapBuilderFilter"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lineSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lineStringMap"}, {"IdentifierName": "Values"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineStringTransformer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineStringTransformer"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformer"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "name": {"identifier": "tri"}, "initializer": {"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "expression": {"scope": {"name": {"identifier": "triQueue"}}, "name": {"identifier": "removeFirst"}}}}]}}, {"expression": {"name": {"identifier": "process"}, "arguments": [{"name": {"identifier": "tri"}}, {"name": {"identifier": "visitor"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "triQueue"}}, "name": {"identifier": "isEmpty"}}}}]}, "cs_ast": {"Block": [{"WhileStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triQueue"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdgeTriangle"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triQueue"}, {"IdentifierName": "First"}]}, {"IdentifierName": "Value"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triQueue"}, {"IdentifierName": "RemoveFirst"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Process"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tri"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "deStar"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "deStar"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "snapPts"}, "initializer": {"name": {"identifier": "extractTargetCoordinates"}, "arguments": [{"name": {"identifier": "snapGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SnapTransformer"}}, "name": {"identifier": "snapTrans"}, "initializer": {"type": {"name": {"identifier": "SnapTransformer"}}, "arguments": [{"name": {"identifier": "snapTolerance"}}, {"name": {"identifier": "snapPts"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "snapTrans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "srcGeom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractTargetCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SnapTransformer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SnapTransformer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tolerance"}]}, {"Argument": [{"IdentifierName": "snapPts"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapTrans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_srcGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "item"}, "initializer": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "item"}}]}}]}, "condition": {"scope": {"scope": {"name": {"identifier": "Boolean"}}, "name": {"identifier": "TRUE"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "execute"}, "arguments": [{"name": {"identifier": "item"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "collection"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"PredefinedType": "object"}, {"IdentifierName": "coll"}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "func"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "result"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "mergedLineStrings"}}}}, {"expression": {"scope": {"name": {"identifier": "GraphComponent"}}, "name": {"identifier": "setMarked"}, "arguments": [{"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "nodeIterator"}}, {"value": "false"}]}}, {"expression": {"scope": {"name": {"identifier": "GraphComponent"}}, "name": {"identifier": "setMarked"}, "arguments": [{"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "edgeIterator"}}, {"value": "false"}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "edgeStrings"}}, "value": {"type": {"name": {"identifier": "ArrayList"}}}}}, {"expression": {"name": {"identifier": "buildEdgeStringsForObviousStartNodes"}}}, {"expression": {"name": {"identifier": "buildEdgeStringsForIsolatedLoops"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "mergedLineStrings"}}, "value": {"type": {"name": {"identifier": "ArrayList"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeString"}}, "name": {"identifier": "edgeString"}, "initializer": {"type": {"name": {"identifier": "EdgeString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "mergedLineStrings"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "edgeString"}}, "name": {"identifier": "toLineString"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edgeStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_mergedLineStrings"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GraphComponent"}, {"IdentifierName": "SetMarked"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "GetNodeEnumerator"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GraphComponent"}, {"IdentifierName": "SetMarked"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "GetEdgeEnumerator"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_edgeStrings"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeString"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsForObviousStartNodes"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeStringsForIsolatedLoops"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_mergedLineStrings"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeString"}, {"IdentifierName": "_edgeStrings"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_mergedLineStrings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeString"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "len"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getLength"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedValue"}}, {"name": {"identifier": "len"}}, {"name": {"identifier": "TOLERANCE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedValue"}]}, {"Argument": [{"IdentifierName": "len"}]}, {"Argument": [{"IdentifierName": "TOLERANCE"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"scope": {"name": {"identifier": "querySeg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "querySeg"}}, "name": {"identifier": "p1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegmentVisitor"}}, "name": {"identifier": "visitor"}, "initializer": {"type": {"name": {"identifier": "LineSegmentVisitor"}}, "arguments": [{"name": {"identifier": "querySeg"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "env"}}, {"name": {"identifier": "visitor"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "itemsFound"}, "initializer": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "getItems"}}}]}}, {"expression": {"name": {"identifier": "itemsFound"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "querySeg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "querySeg"}, {"IdentifierName": "P1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegmentVisitor"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegmentVisitor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "querySeg"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "LineSegment"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "Items"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "itemsFound"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"operator": "OR", "right": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "max"}}}, "left": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "min"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"LogicalOrExpression": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_min"}]}, {"IdentifierName": "_max"}]}, {"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_max"}]}, {"IdentifierName": "_min"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "trimStr"}, "initializer": {"scope": {"name": {"identifier": "geomStr"}}, "name": {"identifier": "trim"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "IOUtil"}}, "name": {"identifier": "readWKBHexString"}, "arguments": [{"name": {"identifier": "trimStr"}}, {"name": {"identifier": "geomFactory"}}]}}]}, "condition": {"name": {"identifier": "isWKB"}, "arguments": [{"name": {"identifier": "trimStr"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "readGML"}, "arguments": [{"name": {"identifier": "trimStr"}}]}}, "condition": {"name": {"identifier": "isGML"}, "arguments": [{"name": {"identifier": "trimStr"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "readGeoJSON"}, "arguments": [{"name": {"identifier": "trimStr"}}]}}, "condition": {"name": {"identifier": "isGeoJSON"}, "arguments": [{"name": {"identifier": "trimStr"}}]}}, {"expression": {"scope": {"name": {"identifier": "IOUtil"}}, "name": {"identifier": "readWKTString"}, "arguments": [{"name": {"identifier": "trimStr"}}, {"name": {"identifier": "geomFactory"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomStr"}, {"IdentifierName": "Trim"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsHex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trimStr"}]}, {"Argument": [{"IdentifierName": "MaxCharsToCheck"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IOUtility"}, {"IdentifierName": "ReadGeometriesFromWkbHexString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trimStr"}]}, {"Argument": [{"IdentifierName": "_factory"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_wktReader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trimStr"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"type": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "isAssignableFrom"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getReturnType"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"TypeOfExpression": [{"IdentifierName": "IGeometry"}]}, {"IdentifierName": "IsAssignableFrom"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "ReturnType"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "Vertex"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getCoordinate"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "vertices"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Vertex"}, {"IdentifierName": "vertices"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "splitEdges"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geomGraph"}}, "name": {"identifier": "computeSplitEdges"}, "arguments": [{"name": {"identifier": "splitEdges"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PlanarGraph"}}, "name": {"identifier": "graph"}, "initializer": {"type": {"name": {"identifier": "PlanarGraph"}}, "arguments": [{"type": {"name": {"identifier": "OverlayNodeFactory"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addEdges"}, "arguments": [{"name": {"identifier": "splitEdges"}}]}}, {"expression": {"name": {"identifier": "setInteriorEdgesInResult"}, "arguments": [{"name": {"identifier": "graph"}}]}}, {"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "linkResultDirectedEdges"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edgeRings"}, "initializer": {"name": {"identifier": "buildEdgeRings"}, "arguments": [{"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeEnds"}}]}}]}}, {"expression": {"name": {"identifier": "visitShellInteriors"}, "arguments": [{"scope": {"name": {"identifier": "geomGraph"}}, "name": {"identifier": "getGeometry"}}, {"name": {"identifier": "graph"}}]}}, {"expression": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "hasUnvisitedShellEdge"}, "arguments": [{"name": {"identifier": "edgeRings"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomGraph"}, {"IdentifierName": "ComputeSplitEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "splitEdges"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PlanarGraph"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PlanarGraph"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "OverlayNodeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "AddEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "splitEdges"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetInteriorEdgesInResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "graph"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "LinkResultDirectedEdges"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildEdgeRings"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "EdgeEnds"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitShellInteriors"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "_geomGraph"}]}, {"IdentifierName": "Geometry"}]}]}, {"Argument": [{"IdentifierName": "graph"}]}]}]}]}, {"ReturnStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "HasUnvisitedShellEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edgeRings"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTestFromCommcast2003AtYahooDotCa"}, "arguments": [{"name": {"identifier": "reader"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "doTestFromCommcast2003AtYahooDotCa"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "copy"}, "initializer": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "copy"}}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "reverse"}, "arguments": [{"name": {"identifier": "copy"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "points"}}, "value": {"name": {"identifier": "copy"}}}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "j"}}]}]}}}, {}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "j"}}]}]}}}]}, "compare": {"operator": "LESS", "right": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"IdentifierName": "i"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "j"}]}]}]}]}]}]}]}, {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "j"}]}]}]}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_points"}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getScale"}}, {"value": "1E-10"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Scale"}]}]}, {"Argument": [{"NumericLiteralExpression": "1E-10"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "addIntersections"}, "arguments": [{"name": {"identifier": "edge"}}, {"name": {"identifier": "ptIndex"}}, {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "edge"}}, {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "ptIndex"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "AddIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge"}]}, {"Argument": [{"IdentifierName": "ptIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "edge"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "ptIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "g"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "Intersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryEditor"}}, "name": {"identifier": "geomEdit"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "newFactory"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}, "arguments": [{"name": {"identifier": "newPrecisionModel"}}, {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "getSRID"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomEdit"}}, "value": {"type": {"name": {"identifier": "GeometryEditor"}}, "arguments": [{"name": {"identifier": "newFactory"}}]}}}]}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomEdit"}}, "value": {"type": {"name": {"identifier": "GeometryEditor"}}}}}, "condition": {"name": {"identifier": "changePrecisionModel"}}}, {"expression": {"scope": {"name": {"identifier": "geomEdit"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "PrecisionReducerCoordinateOperation"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryEditor"}, {"VariableDeclarator": "geomEdit"}]}]}, {"IfStatement": [{"IdentifierName": "_changePrecisionModel"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_newPrecisionModel"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geomEdit"}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newFactory"}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geomEdit"}, {"ObjectCreationExpression": [{"IdentifierName": "GeometryEditor"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomEdit"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionReducerCoordinateOperation"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "queryNode"}, "arguments": [{"name": {"identifier": "root"}}, {"name": {"identifier": "queryEnv"}}, {"value": "true"}, {"type": {"name": {"identifier": "KdNodeVisitor"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}]}, "type": {}, "name": {"identifier": "visit"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "KdNode"}}, "name": {"identifier": "node"}}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "QueryNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_root"}]}, {"Argument": [{"IdentifierName": "queryEnv"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "setAreaBasePoint"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}]}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isPositiveArea"}, "initializer": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "isCCW"}, "arguments": [{"name": {"identifier": "pts"}}]}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "addTriangle"}, "arguments": [{"name": {"identifier": "areaBasePt"}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, {"name": {"identifier": "isPositiveArea"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "addLineSegments"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetBasePoint"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsCCW"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddTriangle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_areaBasePt"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "isPositiveArea"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddLineSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "copy"}}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "reverse"}, "arguments": [{"name": {"identifier": "seq"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "revLine"}, "initializer": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}}, {"expression": {"name": {"identifier": "revLine"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Reversed"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "FastNodingValidator"}}, "name": {"identifier": "nv"}, "initializer": {"type": {"name": {"identifier": "FastNodingValidator"}}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "isValid"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intPts"}, "initializer": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "getIntersections"}}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "intPts"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "geom"}}]}, "name": {"identifier": "createPoint"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "intPts"}}, "name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "FastNodingValidator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "FastNodingValidator"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "IsValid"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "Intersections"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intPts"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"NullLiteralExpression": "null"}]}]}]}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"ElementAccessExpression": [{"IdentifierName": "intPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "point"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "centroid"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "interiorPoint"}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "point"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDistance"}}, "value": {"name": {"identifier": "dist"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_centroid"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_minDistance"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_interiorPoint"}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "point"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "dist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinate"}}]}}, "condition": {"operator": "OR", "right": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}, "left": {"operator": "OR", "right": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}, "left": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPoint"}]}, {"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}]}, {"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "longestSideLength"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "LongestSideLength"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist0"}, "initializer": {"name": {"identifier": "getEdgeDistance"}, "arguments": [{"name": {"identifier": "segmentIndex"}}, {"value": "0"}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist1"}, "initializer": {"name": {"identifier": "getEdgeDistance"}, "arguments": [{"name": {"identifier": "segmentIndex"}}, {"value": "1"}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}, "value": {"value": "0"}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}, "value": {"value": "1"}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}, "value": {"value": "1"}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}, "value": {"value": "0"}}}]}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "dist1"}}, "left": {"name": {"identifier": "dist0"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEdgeDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segmentIndex"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEdgeDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segmentIndex"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "dist0"}, {"IdentifierName": "dist1"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "0"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ElseClause": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "0"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"NumericLiteralExpression": "1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "getNodedSubstrings"}, "arguments": [{"name": {"identifier": "nodedSegStrings"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_nodedSegStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "selected"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "selected"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "condition": {"scope": {"name": {"identifier": "mask"}}, "name": {"identifier": "disjoint"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "selected"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mask"}, {"IdentifierName": "Disjoint"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkAddMult2"}, "arguments": [{"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "3"}]}]}}, {"expression": {"name": {"identifier": "checkAddMult2"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckAddMult2"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckAddMult2"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}, {"value": "true"}]}}, "condition": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "intersects"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CoordinateList"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkNodePosition"}, "arguments": [{"value": "0"}, {"value": "1"}, {"value": "1"}, {"value": "2"}, {"value": "2"}, {"operator": "MINUS", "expression": {"value": "1"}}]}}, {"expression": {"name": {"identifier": "checkNodePosition"}, "arguments": [{"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "1"}, {"value": "1"}, {"operator": "MINUS", "expression": {"value": "1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "checkNodePosition"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Octants"}, {"IdentifierName": "Zero"}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "checkNodePosition"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Octants"}, {"IdentifierName": "Zero"}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"type": {"scope": {"name": {"identifier": "PackedCoordinateSequence"}}, "name": {"identifier": "Double"}}, "arguments": [{"name": {"identifier": "size"}}, {"name": {"identifier": "dimension"}}]}}]}, "elseStmt": {"statements": [{"expression": {"type": {"scope": {"name": {"identifier": "PackedCoordinateSequence"}}, "name": {"identifier": "Float"}}, "arguments": [{"name": {"identifier": "size"}}, {"name": {"identifier": "dimension"}}]}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "DOUBLE"}}, "left": {"name": {"identifier": "type"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "type"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "PackedType"}, {"IdentifierName": "Double"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PackedDoubleCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "dimension"}]}]}]}]}, {"ElseClause": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PackedFloatCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "dimension"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IntersectionMatrix"}}, "name": {"identifier": "im"}, "initializer": {"scope": {"name": {"identifier": "RelateOp"}}, "name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}, {"name": {"identifier": "bnRule"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "imStr"}, "initializer": {"scope": {"name": {"identifier": "im"}}, "name": {"identifier": "toString"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "im"}}, "name": {"identifier": "matches"}, "arguments": [{"name": {"identifier": "expectedIM"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IntersectionMatrix"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RelateOp"}, {"IdentifierName": "Relate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}, {"Argument": [{"IdentifierName": "bnRule"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "String"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "im"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "im"}, {"IdentifierName": "Matches"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedIM"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "queryMin"}}, {"name": {"identifier": "queryMax"}}]}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "node1"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "queryMin"}}, {"name": {"identifier": "queryMax"}}, {"name": {"identifier": "visitor"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "node1"}}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "node2"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "queryMin"}}, {"name": {"identifier": "queryMax"}}, {"name": {"identifier": "visitor"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "node2"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "Intersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "queryMin"}]}, {"Argument": [{"IdentifierName": "queryMax"}]}]}]}]}, {"Block": [{"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_node1"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_node1"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "queryMin"}]}, {"Argument": [{"IdentifierName": "queryMax"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_node2"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_node2"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "queryMin"}]}, {"Argument": [{"IdentifierName": "queryMax"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bvirt"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "x"}}, "left": {"name": {"identifier": "a"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "avirt"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "bvirt"}}, "left": {"name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bround"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "bvirt"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "around"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "avirt"}}, "left": {"name": {"identifier": "a"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "bround"}}, "left": {"name": {"identifier": "around"}}}}]}}, {"expression": {"name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "a"}, {"IdentifierName": "x"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "x"}, {"IdentifierName": "bvirt"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "bvirt"}, {"IdentifierName": "b"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "a"}, {"IdentifierName": "avirt"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "around"}, {"IdentifierName": "bround"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "y"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "bufferedReader"}}, "name": {"identifier": "mark"}, "arguments": [{"name": {"identifier": "MAX_LOOKAHEAD"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "StreamTokenizer"}}, "name": {"identifier": "tokenizer"}, "initializer": {"type": {"name": {"identifier": "StreamTokenizer"}}, "arguments": [{"name": {"identifier": "bufferedReader"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "type"}, "initializer": {"scope": {"name": {"identifier": "tokenizer"}}, "name": {"identifier": "nextToken"}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "StreamTokenizer"}}, "name": {"identifier": "TT_EOF"}}, "left": {"name": {"identifier": "type"}}}}, {"expression": {"scope": {"name": {"identifier": "bufferedReader"}}, "name": {"identifier": "reset"}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufferedReader"}, {"IdentifierName": "BaseStream"}]}, {"IdentifierName": "Position"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StreamTokenizer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferedReader"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Token"}, {"VariableDeclarator": "t"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tokenizer"}, {"IdentifierName": "NextToken"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "t"}]}]}]}]}, {"IsExpression": [{"IdentifierName": "t"}, {"IdentifierName": "EofToken"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufferedReader"}, {"IdentifierName": "BaseStream"}]}, {"IdentifierName": "Seek"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "position"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SeekOrigin"}, {"IdentifierName": "Begin"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "vertex"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}}]}}, {"expression": {"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toLineString"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_vertex"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dest"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "fact"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"name": {"identifier": "getPointArray"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ConvexHull"}}, "name": {"identifier": "hull"}, "initializer": {"type": {"name": {"identifier": "ConvexHull"}}, "arguments": [{"name": {"identifier": "coords"}}, {"name": {"identifier": "fact"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "convexHull"}}, "value": {"scope": {"name": {"identifier": "hull"}}, "name": {"identifier": "getConvexHull"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetPointArray"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConvexHull"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConvexHull"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}, {"Argument": [{"IdentifierName": "fact"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_convexHull"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hull"}, {"IdentifierName": "GetConvexHull"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "insertUniqueEdge"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertUniqueEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "holeList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"name": {"identifier": "addHoles"}, "arguments": [{"name": {"identifier": "n"}}, {"name": {"identifier": "originX"}}, {"name": {"identifier": "originY"}}, {"name": {"identifier": "width"}}, {"name": {"identifier": "holeList"}}]}}, {"expression": {"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toLinearRingArray"}, "arguments": [{"name": {"identifier": "holeList"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddHoles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}, {"Argument": [{"IdentifierName": "originX"}]}, {"Argument": [{"IdentifierName": "originY"}]}, {"Argument": [{"IdentifierName": "width"}]}, {"Argument": [{"IdentifierName": "holeList"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToLinearRingArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holeList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "geom"}}}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isValid"}}}, {"expression": {"name": {"identifier": "cleanPolygonal"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IsValid"}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CleanPolygonal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "intPt"}, "initializer": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersection"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"operator": "OR", "right": {"scope": {"name": {"identifier": "intPt"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p1"}}]}, "left": {"scope": {"name": {"identifier": "intPt"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p0"}}]}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersectionNum"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "IntersectionNum"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "GetIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"LogicalOrExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intPt"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intPt"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "delX"}, "initializer": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "getWidth"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minExtent"}}, "value": {"name": {"identifier": "delX"}}}}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "delX"}}}, "left": {"operator": "LESS", "right": {"name": {"identifier": "minExtent"}}, "left": {"name": {"identifier": "delX"}}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "delY"}, "initializer": {"scope": {"name": {"identifier": "itemEnv"}}, "name": {"identifier": "getHeight"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minExtent"}}, "value": {"name": {"identifier": "delY"}}}}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"name": {"identifier": "delY"}}}, "left": {"operator": "LESS", "right": {"name": {"identifier": "minExtent"}}, "left": {"name": {"identifier": "delY"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "Width"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "delX"}, {"IdentifierName": "_minExtent"}]}, {"GreaterThanExpression": [{"IdentifierName": "delX"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minExtent"}, {"IdentifierName": "delX"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemEnv"}, {"IdentifierName": "Height"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "delY"}, {"IdentifierName": "_minExtent"}]}, {"GreaterThanExpression": [{"IdentifierName": "delY"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minExtent"}, {"IdentifierName": "delY"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"name": {"identifier": "subdiv"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_subdiv"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coordinates"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "20"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "20"}, {"value": "20"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "20"}, {"value": "15"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}, {"value": "0"}]}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "linearRing"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "coordinates"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "linearRing"}}, "name": {"identifier": "isSimple"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "15"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearRing"}, {"IdentifierName": "IsSimple"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"scope": {"name": {"identifier": "SubgraphDepthLocater"}}, "name": {"identifier": "DepthSegment"}}, "arguments": [{"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "x0"}}, {"name": {"identifier": "y0"}}, {"name": {"identifier": "x1"}}, {"name": {"identifier": "y1"}}]}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"QualifiedName": [{"IdentifierName": "SubgraphDepthLocater"}, {"IdentifierName": "DepthSegment"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x0"}]}, {"Argument": [{"IdentifierName": "y0"}]}, {"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "y1"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "foundParseError"}, "initializer": {"value": "false"}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "parse"}, "arguments": [{"name": {"identifier": "str"}}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "foundParseError"}}, "value": {"value": "true"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "NumberFormatException"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "foundParseError"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "Parse"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "str"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "FormatException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "foundParseError"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "foundParseError"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "distanceTol"}}, "value": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "distanceTol"}}]}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "angleOrientation"}}, "value": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "CLOCKWISE"}}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "distanceTol"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isDeleted"}}, "value": {"elementType": {"type": "BYTE"}, "levels": [{"dimension": {"scope": {"name": {"identifier": "inputLine"}}, "name": {"identifier": "length"}}}]}}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isChanged"}, "initializer": {"value": "false"}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isChanged"}}, "value": {"name": {"identifier": "deleteShallowConcavities"}}}}]}, "condition": {"name": {"identifier": "isChanged"}}}, {"expression": {"name": {"identifier": "collapseLine"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distanceTol"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distanceTol"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "distanceTol"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_angleOrientation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "Clockwise"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isDeleted"}, {"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "byte"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputLine"}, {"IdentifierName": "Length"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": "isChanged"}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isChanged"}, {"InvocationExpression": [{"IdentifierName": "DeleteShallowConcavities"}, {"ArgumentList": "()"}]}]}]}]}, {"IdentifierName": "isChanged"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CollapseLine"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "pm1"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "pm1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "pm2"}}]}}}, {"expression": {"name": {"identifier": "pm2"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pm1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm2"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "pm1"}]}]}, {"ReturnStatement": [{"IdentifierName": "pm2"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "inputEdges"}}, "name": {"identifier": "addAll"}, "arguments": [{"name": {"identifier": "edges"}}]}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edges"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "AssertionFailedException"}}}}]}, "elseStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "AssertionFailedException"}}, "arguments": [{"name": {"identifier": "message"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "message"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "assertion"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "assertion"}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "message"}, {"NullLiteralExpression": "null"}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AssertionFailedException"}, {"ArgumentList": "()"}]}]}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AssertionFailedException"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "message"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"SubtractExpression": [{"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "e1"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "isNull"}}]}}, {"expression": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"value": "5"}, {"value": "5"}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "isNull"}}}]}}, {"expression": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "setToNull"}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "isNull"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "IsNull"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "IsNull"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "SetToNull"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "IsNull"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "emptyGeom"}, "initializer": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPolygon"}}}]}}, {"expression": {"name": {"identifier": "emptyGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "emptyGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "list"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "obj0"}}]}}, {"expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "obj1"}}]}}, {"expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "obj2"}}]}}, {"expression": {"name": {"identifier": "list"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"CollectionInitializerExpression": [{"IdentifierName": "obj0"}, {"IdentifierName": "obj1"}, {"IdentifierName": "obj2"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "newGeom"}, "initializer": {"type": {"name": {"identifier": "Point"}}, "expression": {"scope": {"name": {"identifier": "operation"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "targetFactory"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {}}]}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "newGeom"}}, "value": {"type": {"name": {"identifier": "Point"}}, "expression": {"scope": {"name": {"identifier": "targetFactory"}}, "name": {"identifier": "createGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "geom"}}, "left": {"name": {"identifier": "newGeom"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "newGeom"}}}}, {"expression": {"name": {"identifier": "newGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_operation"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_targetFactory"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "newGeom"}, {"IdentifierName": "geom"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "newGeom"}, {"CastExpression": [{"IdentifierName": "IPoint"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetFactory"}, {"IdentifierName": "CreateGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "CGAlgorithms3D"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "point0"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"name": {"identifier": "point1"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "updateDistance"}, "arguments": [{"name": {"identifier": "dist"}}, {"type": {"name": {"identifier": "GeometryLocation"}}, "arguments": [{"name": {"identifier": "point0"}}, {"value": "0"}, {"scope": {"name": {"identifier": "point0"}}, "name": {"identifier": "getCoordinate"}}]}, {"type": {"name": {"identifier": "GeometryLocation"}}, "arguments": [{"name": {"identifier": "point1"}}, {"value": "0"}, {"scope": {"name": {"identifier": "point1"}}, "name": {"identifier": "getCoordinate"}}]}, {"name": {"identifier": "flip"}}]}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms3D"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point0"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point1"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_minDistance"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "UpdateDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dist"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "point0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point0"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "point1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point1"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "flip"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PriorityQueue"}}, "name": {"identifier": "q"}, "initializer": {"type": {"name": {"identifier": "PriorityQueue"}}}}]}}, {"expression": {"name": {"identifier": "addRandomItems"}, "arguments": [{"name": {"identifier": "q"}}, {"value": "100"}]}}, {"expression": {"name": {"identifier": "checkOrder"}, "arguments": [{"name": {"identifier": "q"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "addRandomItems"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "q"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "q"}]}]}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "clone"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "MemberwiseClone"}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}, "value": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nexti"}, "initializer": {"operator": "REMAINDER", "right": {"value": "3"}, "left": {"inner": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}, "value": {"scope": {"scope": {"index": {"name": {"identifier": "nexti"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P0"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ModuloExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}, {"NumericLiteralExpression": "3"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P1"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "nexti"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "safeTolerance"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "scaleFactor"}}, "left": {"name": {"identifier": "SAFE_ENV_EXPANSION_FACTOR"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "safeEnv"}}, "value": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "safeTolerance"}}, "left": {"scope": {"name": {"identifier": "originalPt"}}, "name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "safeTolerance"}}, "left": {"scope": {"name": {"identifier": "originalPt"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "safeTolerance"}}, "left": {"scope": {"name": {"identifier": "originalPt"}}, "name": {"identifier": "y"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "safeTolerance"}}, "left": {"scope": {"name": {"identifier": "originalPt"}}, "name": {"identifier": "y"}}}]}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "safeEnv"}}}}, {"expression": {"name": {"identifier": "safeEnv"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_safeEnv"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "SafeEnvelopeExpansionFactor"}, {"IdentifierName": "_scaleFactor"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_safeEnv"}, {"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_originalPt"}, {"IdentifierName": "X"}]}, {"IdentifierName": "safeTolerance"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_originalPt"}, {"IdentifierName": "X"}]}, {"IdentifierName": "safeTolerance"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_originalPt"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "safeTolerance"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_originalPt"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "safeTolerance"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_safeEnv"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"name": {"identifier": "findNode"}, "arguments": [{"name": {"identifier": "coordinate"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "node"}}, "value": {"type": {"name": {"identifier": "Node"}}, "arguments": [{"name": {"identifier": "coordinate"}}]}}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "node"}}}}, {"expression": {"name": {"identifier": "node"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinate"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "node"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "node"}, {"ObjectCreationExpression": [{"IdentifierName": "Node"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinate"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "node"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "fromWKT"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "SNAP_TOLERANCE"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "GeometryNoder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setValidate"}, "arguments": [{"value": "true"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "nodedLines"}, "initializer": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "node"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isSnapped"}, "arguments": [{"name": {"identifier": "nodedLines"}}, {"name": {"identifier": "SNAP_TOLERANCE"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FromWKT"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PrecisionModel"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "SnapTolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryNoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "IsValidityChecked"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "Node"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "nodedLines"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ls"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IsSnapped"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodedLines"}]}, {"Argument": [{"IdentifierName": "SnapTolerance"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "siteCoords"}}, "value": {"scope": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "unique"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "toCoordinateArray"}, "arguments": [{"name": {"identifier": "coords"}}]}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_siteCoords"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"IdentifierName": "Unique"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "OR", "right": {"inner": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}, {"name": {"identifier": "tolerance"}}]}}, "left": {"inner": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}, {"name": {"identifier": "tolerance"}}]}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}, {"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "invoke"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isPreparedOp"}, "arguments": [{"name": {"identifier": "opName"}}]}}}, {"expression": {"name": {"identifier": "invokePreparedOp"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsPreparedOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "Invoke"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "InvokePreparedOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "min"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "min"}}, "left": {"name": {"identifier": "x"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "max"}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "x"}}}}, {"expression": {"name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "x"}, {"IdentifierName": "min"}]}, {"ReturnStatement": [{"IdentifierName": "min"}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "x"}, {"IdentifierName": "max"}]}, {"ReturnStatement": [{"IdentifierName": "max"}]}]}, {"ReturnStatement": [{"IdentifierName": "x"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "equalsOriented"}, "arguments": [{"name": {"identifier": "qe"}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "equalsOriented"}, "arguments": [{"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "sym"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "EqualsOriented"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "qe"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "EqualsOriented"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Sym"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeIntLineIndex"}}}, {"expression": {"index": {"name": {"identifier": "intIndex"}}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntLineIndex"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "0"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"IdentifierName": "intIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equal"}}, {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "b"}}]}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equal"}}, {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "hashCode"}}, "left": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "hashCode"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equal"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equal"}]}, {"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "GetHashCode"}]}, {"ArgumentList": "()"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "GetHashCode"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaInt"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "g2"}}]}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "areaUnion"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "g2"}}]}, "name": {"identifier": "getArea"}}}]}}, {"expression": {"operator": "DIVIDE", "right": {"name": {"identifier": "areaUnion"}}, "left": {"name": {"identifier": "areaInt"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}, {"IdentifierName": "Area"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}, {"IdentifierName": "Area"}]}]}]}]}]}, {"ReturnStatement": [{"DivideExpression": [{"IdentifierName": "areaInt"}, {"IdentifierName": "areaUnion"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "EdgeEndBundleStar"}}, "expression": {"name": {"identifier": "edges"}}}}, "name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "im"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "EdgeEndBundleStar"}, {"IdentifierName": "Edges"}]}]}, {"IdentifierName": "UpdateIM"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "im"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "Interval"}}, "expression": {"name": {"identifier": "aBounds"}}}}, "name": {"identifier": "intersects"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "expression": {"name": {"identifier": "bBounds"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "aBounds"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bBounds"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Vertex"}}}, "name": {"identifier": "vert"}, "initializer": {"elementType": {"name": {"identifier": "Vertex"}}, "levels": [{"dimension": {"value": "3"}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "vert"}}}, "value": {"name": {"identifier": "getVertex"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "vert"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Vertex"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "vert"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "GetVertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "vert"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"index": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "coords"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "i"}}}}, "name": {"name": {"identifier": "coords"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "z"}, "initializer": {"thenExpr": {"scope": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "NULL_ORDINATE"}}, "elseExpr": {"index": {"operator": "PLUS", "right": {"value": "2"}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dimension"}}, "left": {"name": {"identifier": "i"}}}}, "name": {"name": {"identifier": "coords"}}}, "condition": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"name": {"identifier": "dimension"}}}}}]}}, {"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}, {"name": {"identifier": "z"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Dimension"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "Dimension"}, {"NumericLiteralExpression": "2"}]}, {"NumericLiteralExpression": "0.0"}, {"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Dimension"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}, {"Argument": [{"IdentifierName": "z"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}}, "name": {"identifier": "a"}, "initializer": {"elementType": {"type": "DOUBLE"}, "levels": [{}, {}], "initializer": {"values": [{"values": [{"scope": {"name": {"identifier": "src0"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "src0"}}, "name": {"identifier": "y"}}, {"value": "1"}]}, {"values": [{"scope": {"name": {"identifier": "src1"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "src1"}}, "name": {"identifier": "y"}}, {"value": "1"}]}, {"values": [{"scope": {"name": {"identifier": "src2"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "src2"}}, "name": {"identifier": "y"}}, {"value": "1"}]}]}}}]}}, {"expression": {"scope": {"name": {"identifier": "Matrix"}}, "name": {"identifier": "solve"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "3"}]}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "a"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_src0"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_src0"}, {"IdentifierName": "Y"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "a"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_src1"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_src1"}, {"IdentifierName": "Y"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "a"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_src2"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_src2"}, {"IdentifierName": "Y"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Matrix"}, {"IdentifierName": "Solve"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "coords"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m00"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m01"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m02"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m10"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m11"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "m12"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m00"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m01"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m02"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m10"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m11"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "_m12"}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "sym"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "false"}]}}, {"expression": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "false"}]}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "isInResult"}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInResult"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "getEdgeEnds"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "EdgeEnds"}]}, {"IdentifierName": "GetEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInResult"}]}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "IsInResult"}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "InResult"}]}, {"FalseLiteralExpression": "false"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "InResult"}]}, {"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "bounds"}}}]}}, {"expression": {"scope": {"name": {"identifier": "childBoundables"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "childBoundable"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "_bounds"}, {"NullLiteralExpression": "null"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_childBoundables"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundable"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "indexLow"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "toLowest"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "indexLow"}}, "name": {"identifier": "getSegment"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}, "name": {"identifier": "pointAlongOffset"}, "arguments": [{"scope": {"name": {"identifier": "indexLow"}}, "name": {"identifier": "getSegmentFraction"}}, {"name": {"identifier": "offsetDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthLocationMap"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "GetSegment"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}, {"IdentifierName": "PointAlongOffset"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "SegmentFraction"}]}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "LinearRing"}}, "arguments": [{"name": {"identifier": "coordinates"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LinearRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PointOnGeometryLocator"}}, "name": {"identifier": "piaLoc"}, "initializer": {"type": {"name": {"identifier": "SimplePointInAreaLocator"}}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "piaLoc"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "targetRepPts"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPointOnGeometryLocator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SimplePointInAreaLocator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "targetRepPts"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "piaLoc"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dx1"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dy1"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "y"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dx2"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dy2"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "q"}}, "name": {"identifier": "y"}}}}]}}, {"expression": {"name": {"identifier": "signOfDet2x2"}, "arguments": [{"name": {"identifier": "dx1"}}, {"name": {"identifier": "dy1"}}, {"name": {"identifier": "dx2"}}, {"name": {"identifier": "dy2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "X"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "q"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "SignOfDet2x2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dx1"}]}, {"Argument": [{"IdentifierName": "dy1"}]}, {"Argument": [{"IdentifierName": "dx2"}]}, {"Argument": [{"IdentifierName": "dy2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "subdiv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "siteEnv"}, "initializer": {"name": {"identifier": "envelope"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "vertices"}, "initializer": {"name": {"identifier": "toVertices"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subdiv"}}, "value": {"type": {"name": {"identifier": "QuadEdgeSubdivision"}}, "arguments": [{"name": {"identifier": "siteEnv"}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IncrementalDelaunayTriangulator"}}, "name": {"identifier": "triangulator"}, "initializer": {"type": {"name": {"identifier": "IncrementalDelaunayTriangulator"}}, "arguments": [{"name": {"identifier": "subdiv"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "triangulator"}}, "name": {"identifier": "insertSites"}, "arguments": [{"name": {"identifier": "vertices"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_subdiv"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ToVertices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_subdiv"}, {"ObjectCreationExpression": [{"IdentifierName": "QuadEdgeSubdivision"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "siteEnv"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IncrementalDelaunayTriangulator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IncrementalDelaunayTriangulator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_subdiv"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "triangulator"}, {"IdentifierName": "InsertSites"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vertices"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}, {"name": {"identifier": "n"}}]}}, {"expression": {"name": {"identifier": "n"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_nodeMap"}, {"BracketedArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"IdentifierName": "n"}]}]}, {"ReturnStatement": [{"IdentifierName": "n"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "r0"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"name": {"identifier": "obj0"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "r1"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"name": {"identifier": "obj1"}}}}]}}, {"expression": {"scope": {"scope": {"scope": {"name": {"identifier": "r0"}}, "name": {"identifier": "getRing"}}, "name": {"identifier": "getEnvelope"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "r1"}}, "name": {"identifier": "getRing"}}, "name": {"identifier": "getEnvelope"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "r0"}, {"IdentifierName": "Ring"}]}, {"IdentifierName": "Envelope"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "r1"}, {"IdentifierName": "Ring"}]}, {"IdentifierName": "Envelope"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "RIGHT"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "LEFT"}}, "left": {"name": {"identifier": "position"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "LEFT"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "RIGHT"}}, "left": {"name": {"identifier": "position"}}}}, {"expression": {"name": {"identifier": "position"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "position"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "position"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "position"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearLocation"}}}, "name": {"identifier": "locIndex"}, "initializer": {"scope": {"name": {"identifier": "LocationIndexOfLine"}}, "name": {"identifier": "indicesOf"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "subLine"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "index"}, "initializer": {"elementType": {"type": "DOUBLE"}, "levels": [{}], "initializer": {"values": [{"scope": {"name": {"identifier": "LengthLocationMap"}}, "name": {"identifier": "getLength"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"index": {"value": "0"}, "name": {"name": {"identifier": "locIndex"}}}]}, {"scope": {"name": {"identifier": "LengthLocationMap"}}, "name": {"identifier": "getLength"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "locIndex"}}}]}]}}}]}}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "LinearLocation"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationIndexOfLine"}, {"IdentifierName": "IndicesOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "subLine"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthLocationMap"}, {"IdentifierName": "GetLength"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "locIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthLocationMap"}, {"IdentifierName": "GetLength"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "locIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"scope": {"inner": {"type": {"name": {"identifier": "Test"}}, "expression": {"name": {"identifier": "o"}}}}, "name": {"identifier": "priority"}}, "left": {"name": {"identifier": "priority"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"IdentifierName": "_priority"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "Priority"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "addNode"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "removeCommonBits"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "computeResultPrecision"}, "arguments": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}, "name": {"identifier": "symDifference"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RemoveCommonBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeResultPrecision"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "SymmetricDifference"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runSingular"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}, {"value": "2"}, {"value": "2"}, {"value": "0"}, {"value": "0"}, {"value": "10"}, {"value": "10"}, {"value": "30"}, {"value": "30"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunSingular"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runSingular"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}, {"value": "2"}, {"value": "2"}, {"value": "0"}, {"value": "0"}, {"value": "10"}, {"value": "10"}, {"value": "20"}, {"value": "20"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunSingular"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "FastNodingValidator"}}, "name": {"identifier": "nv"}, "initializer": {"type": {"name": {"identifier": "FastNodingValidator"}}, "arguments": [{"name": {"identifier": "segStrings"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "setFindAllIntersections"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "isValid"}}}, {"expression": {"scope": {"name": {"identifier": "nv"}}, "name": {"identifier": "getIntersections"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "FastNodingValidator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "FastNodingValidator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "FindAllIntersections"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "IsValid"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nv"}, {"IdentifierName": "Intersections"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "doLeft"}}, "value": {"name": {"identifier": "doLeft"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "doRight"}}, "value": {"name": {"identifier": "doRight"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_doLeft"}, {"IdentifierName": "doLeft"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_doRight"}, {"IdentifierName": "doRight"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "builder"}, "initializer": {"type": {"name": {"identifier": "DelaunayTriangulationBuilder"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "builder"}}, "name": {"identifier": "setSites"}, "arguments": [{"name": {"identifier": "geom"}}]}}, {"expression": {"scope": {"name": {"identifier": "builder"}}, "name": {"identifier": "getSubdivision"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "builder"}, {"IdentifierName": "SetSites"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geom"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "builder"}, {"IdentifierName": "GetSubdivision"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "subDiv"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "segStrings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "BasicSegmentString"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}, {"name": {"identifier": "e"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "segStrings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edges"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStrings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "BasicSegmentString"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segStrings"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "ring"}}]}}, {"expression": {"scope": {"name": {"identifier": "totalEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_totalEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "envelopeCentre"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "scaleInstance"}, "arguments": [{"name": {"identifier": "scale"}}, {"name": {"identifier": "scale"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ScaleInstance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scale"}]}, {"Argument": [{"IdentifierName": "scale"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "computeOffsetPoints"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}, {"name": {"identifier": "offsetDistance"}}, {"name": {"identifier": "offsetPts"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateSequence"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "maxIndex"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOffsetPoints"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateSequence"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateSequence"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}, {"Argument": [{"IdentifierName": "offsetPts"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "rcc"}, "initializer": {"type": {"name": {"identifier": "RayCrossingCounter"}}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "RayCrossingSegmentFilter"}}, "name": {"identifier": "filter"}, "initializer": {"type": {"name": {"identifier": "RayCrossingSegmentFilter"}}, "arguments": [{"name": {"identifier": "rcc"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}, {"expression": {"scope": {"name": {"identifier": "rcc"}}, "name": {"identifier": "getLocation"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "RayCrossingCounter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RayCrossingCounter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "RayCrossingSegmentFilter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RayCrossingSegmentFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rcc"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rcc"}, {"IdentifierName": "Location"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "tree"}, "initializer": {"type": {"name": {"identifier": "STRtree"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "list"}, "initializer": {"scope": {"name": {"identifier": "tree"}}, "name": {"identifier": "query"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}]}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "isEmpty"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "STRtree"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tree"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "list"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordDataMap"}}, "name": {"identifier": "put"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, {"name": {"identifier": "data"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordDataMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "data"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges0"}, "initializer": {"scope": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "toEdges"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "node0"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "getEdges"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "commonEdges"}, "initializer": {"type": {"name": {"identifier": "HashSet"}}, "arguments": [{"name": {"identifier": "edges0"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges1"}, "initializer": {"scope": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "toEdges"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "node1"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "getEdges"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "commonEdges"}}, "name": {"identifier": "retainAll"}, "arguments": [{"name": {"identifier": "edges1"}}]}}, {"expression": {"name": {"identifier": "commonEdges"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "ToEdges"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node0"}, {"IdentifierName": "OutEdges"}]}, {"IdentifierName": "Edges"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges0"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "ToEdges"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node1"}, {"IdentifierName": "OutEdges"}]}, {"IdentifierName": "Edges"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "commonEdges"}, {"IdentifierName": "ExceptWith"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges1"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "commonEdges"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "edit"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "geometry"}}}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geometry"}}]}]}}]}, "condition": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "geometry"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "edit"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geometry"}}}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geometry"}}]}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geometry"}}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "edit"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geometry"}}}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geometry"}}]}]}}]}, "condition": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geometry"}}}}, {"expression": {"name": {"identifier": "geometry"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geometry"}, {"IdentifierName": "ILinearRing"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "linearRing"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "EditSequence"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"IdentifierName": "linearRing"}]}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geometry"}, {"IdentifierName": "ILineString"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "lineString"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "EditSequence"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"IdentifierName": "lineString"}]}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geometry"}, {"IdentifierName": "IPoint"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "point"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "EditSequence"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"IdentifierName": "point"}]}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geometry"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geometry"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "degree"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "degree"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "er"}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdgeRing"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "degree"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "Edges"}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "EdgeRing"}]}, {"IdentifierName": "er"}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "degree"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "degree"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "segments"}}, "value": {"name": {"identifier": "segments"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "segVertices"}}, "value": {"name": {"identifier": "segVertices"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segments"}, {"IdentifierName": "segments"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segVertices"}, {"IdentifierName": "segVertices"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "envelope"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "envelope"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "envelope"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_geometries"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "envelope"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "envelope"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addPolygonRing"}, "arguments": [{"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getExteriorRing"}}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "hole"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"name": {"identifier": "addPolygonRing"}, "arguments": [{"name": {"identifier": "hole"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddPolygonRing"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Shell"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Holes"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddPolygonRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hole"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "coordArrayType"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToArray"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toLineString"}, "arguments": [{"type": {"name": {"identifier": "CoordinateArraySequence"}}, "arguments": [{"name": {"identifier": "pts"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateArraySequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pts"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "1"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "3"}, {"value": "3"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "2"}, {"value": "3"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "5"}}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "8"}}, {"operator": "MINUS", "expression": {"value": "2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "5"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "8"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopeCovers"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"expression": {"scope": {"name": {"identifier": "PreparedPolygonCovers"}}, "name": {"identifier": "covers"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCovers"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "_isRectangle"}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedPolygonCovers"}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "ls"}}, "name": {"identifier": "p0"}}, "value": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "pts"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "ls"}}, "name": {"identifier": "p1"}}, "value": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "index"}}}, "name": {"name": {"identifier": "pts"}}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "P0"}]}, {"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ls"}, {"IdentifierName": "P1"}]}, {"ElementAccessExpression": [{"IdentifierName": "_pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"entries": [{"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}}}], "label": {"value": "0"}}, {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "centre"}}]}}], "label": {"value": "1"}}], "selector": {"scope": {"name": {"identifier": "extremalPts"}}, "name": {"identifier": "length"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"value": "1"}, "name": {"name": {"identifier": "extremalPts"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"SwitchStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_extremalPts"}, {"IdentifierName": "Length"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_centre"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "p1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "poly"}, "initializer": {"name": {"identifier": "createSineStar"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"value": "100"}, {"name": {"identifier": "nPts"}}]}}]}}, {"expression": {"name": {"identifier": "test"}, "arguments": [{"name": {"identifier": "poly"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSineStar"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"IdentifierName": "nPts"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Test"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "hasNext"}}}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "vertexIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "componentIndex"}}}}, {"expression": {"name": {"identifier": "loadCurrentLine"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "vertexIndex"}}, "value": {"value": "0"}}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "currentLine"}}, "name": {"identifier": "getNumPoints"}}, "left": {"name": {"identifier": "vertexIndex"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "HasNext"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_vertexIndex"}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_vertexIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_currentLine"}, {"IdentifierName": "NumPoints"}]}]}, {"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_componentIndex"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LoadCurrentLine"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_vertexIndex"}, {"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"expression": {"operator": "MINUS", "target": {"name": {"identifier": "angle"}}, "value": {"name": {"identifier": "PI_TIMES_2"}}}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"name": {"identifier": "angle"}}}}, {"body": {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "angle"}}, "value": {"name": {"identifier": "PI_TIMES_2"}}}}, "condition": {"operator": "LESS_EQUALS", "right": {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}, "left": {"name": {"identifier": "angle"}}}}, {"expression": {"name": {"identifier": "angle"}}}]}, "cs_ast": {"Block": [{"WhileStatement": [{"GreaterThanExpression": [{"IdentifierName": "angle"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}, {"ExpressionStatement": [{"SubtractAssignmentExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"WhileStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "angle"}, {"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "angle"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "angle"}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"scope": {}, "name": {"identifier": "max"}}, "left": {"name": {"identifier": "p"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"scope": {}, "name": {"identifier": "min"}}, "left": {"name": {"identifier": "p"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Min"}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Max"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "width"}}, "left": {"name": {"identifier": "x"}}}, {"name": {"identifier": "y"}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "width"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "width"}}, "left": {"name": {"identifier": "y"}}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"operator": "PLUS", "right": {"name": {"identifier": "width"}}, "left": {"name": {"identifier": "y"}}}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}]}}}]}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "x"}, {"IdentifierName": "width"}]}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "x"}, {"IdentifierName": "width"}]}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "y"}, {"IdentifierName": "width"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "y"}, {"IdentifierName": "width"}]}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeGraphBuilder"}}, "name": {"identifier": "builder"}, "initializer": {"type": {"name": {"identifier": "EdgeGraphBuilder"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "builder"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geoms"}}]}}, {"expression": {"scope": {"name": {"identifier": "builder"}}, "name": {"identifier": "getGraph"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeGraphBuilder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeGraphBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "builder"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "builder"}, {"IdentifierName": "GetGraph"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkSqrt"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkSqrt"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkSqrt"}, "arguments": [{"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "999.0"}]}, {"value": "1e-28"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSqrt"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSqrt"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckSqrt"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "999.0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-28"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "projFactor"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "projectionFactor"}, "arguments": [{"name": {"identifier": "inputPt"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "segmentStartMeasure"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "projFactor"}}}}, {"thenStmt": {"expression": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getLength"}}, "left": {"name": {"identifier": "projFactor"}}}, "left": {"name": {"identifier": "segmentStartMeasure"}}}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "1.0"}, "left": {"name": {"identifier": "projFactor"}}}}, {"expression": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getLength"}}, "left": {"name": {"identifier": "segmentStartMeasure"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "ProjectionFactor"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "projFactor"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"IdentifierName": "segmentStartMeasure"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "projFactor"}, {"NumericLiteralExpression": "1.0"}]}, {"ReturnStatement": [{"AddExpression": [{"IdentifierName": "segmentStartMeasure"}, {"MultiplyExpression": [{"IdentifierName": "projFactor"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ReturnStatement": [{"AddExpression": [{"IdentifierName": "segmentStartMeasure"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Length"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getEdges"}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "ee"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "iNextCW"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "iNextCW"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "size"}}}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "iNextCW"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeEnd"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Edges"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "temp"}, {"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeList"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ee"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "iNextCW"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "edgeList"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "iNextCW"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "geomColl"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"name": {"identifier": "loadVertices"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getUserData"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geomColl"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geomColl"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomColl"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "LoadVertices"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "UserData"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "OffsetPointGenerator"}}, "name": {"identifier": "ptGen"}, "initializer": {"type": {"name": {"identifier": "OffsetPointGenerator"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "testCoords"}}, "name": {"identifier": "addAll"}, "arguments": [{"scope": {"name": {"identifier": "ptGen"}}, "name": {"identifier": "getPoints"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "boundaryDistanceTolerance"}}, "left": {"value": "5"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "OffsetPointGenerator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OffsetPointGenerator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_testCoords"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptGen"}, {"IdentifierName": "GetPoints"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "5"}, {"IdentifierName": "_boundaryDistanceTolerance"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "inputPt"}}]}}, "condition": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "minIndex"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "endIndex"}, "initializer": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getLength"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "endIndex"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minIndex"}}, "left": {"name": {"identifier": "endIndex"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "closestAfter"}, "initializer": {"name": {"identifier": "indexOfFromStart"}, "arguments": [{"name": {"identifier": "inputPt"}}, {"name": {"identifier": "minIndex"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "isTrue"}, "arguments": [{"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "minIndex"}}, "left": {"name": {"identifier": "closestAfter"}}}, {"value": "computed index is before specified minimum index"}]}}, {"expression": {"name": {"identifier": "closestAfter"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexOfPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locater"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPt"}]}, {"Argument": [{"IdentifierName": "minIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "rawGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformMultiPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "rawGeom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "roughGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "100.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "10000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "100000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1000000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1e8"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1e10"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1e14"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "1e14"}, {"value": "291.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "5e14"}, {"value": "291.0"}]}}, {"expression": {"name": {"identifier": "checkBinomial2"}, "arguments": [{"value": "5e14"}, {"value": "345291.0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1000000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e8"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e10"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e14"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e14"}]}, {"Argument": [{"NumericLiteralExpression": "291.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5e14"}]}, {"Argument": [{"NumericLiteralExpression": "291.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomial2"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5e14"}]}, {"Argument": [{"NumericLiteralExpression": "345291.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "copy"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "fontGlyph"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "text"}}, {"type": {"name": {"identifier": "Font"}}, "arguments": [{"scope": {"name": {"identifier": "FontGlyphReader"}}, "name": {"identifier": "FONT_SANSSERIF"}}, {"scope": {"name": {"identifier": "Font"}}, "name": {"identifier": "PLAIN"}}, {"name": {"identifier": "DEFAULT_POINTSIZE"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "FontGlyph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "text"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Font"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontGlyphReader"}, {"IdentifierName": "FontSansSerif"}]}]}, {"Argument": [{"IdentifierName": "DEFAULT_POINTSIZE"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontStyle"}, {"IdentifierName": "Regular"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Object"}}}, "name": {"identifier": "actualArgs"}, "initializer": {"elementType": {"name": {"identifier": "Object"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "args"}}, "name": {"identifier": "length"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Method"}}, "name": {"identifier": "geomMethod"}, "initializer": {"name": {"identifier": "getGeometryMethod"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "args"}}, {"name": {"identifier": "actualArgs"}}]}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "JTSTestReflectionException"}}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "args"}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geomMethod"}}}}, {"expression": {"name": {"identifier": "invokeMethod"}, "arguments": [{"name": {"identifier": "geomMethod"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "actualArgs"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Object"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Object"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "args"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MethodInfo"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetGeometryMethod"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "args"}]}, {"Argument": [{"IdentifierName": "actualArgs"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "geomMethod"}, {"NullLiteralExpression": "null"}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "NTSTestReflectionException"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "InvokeMethod"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomMethod"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "actualArgs"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "n"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "3"}, "left": {"name": {"identifier": "n"}}}}, {"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "n"}}}, {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}]}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}]}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "n"}}}, {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}]}, "left": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}]}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "3"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "n"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "symDifference"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "SymmetricDifference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "ee"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "ee"}}, "name": {"identifier": "computeLabel"}, "arguments": [{"name": {"identifier": "boundaryNodeRule"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "Edges"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ee"}, {"IdentifierName": "ComputeLabel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "boundaryNodeRule"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "min"}, "initializer": {"scope": {"name": {"identifier": "itemInterval"}}, "name": {"identifier": "getMin"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "max"}, "initializer": {"scope": {"name": {"identifier": "itemInterval"}}, "name": {"identifier": "getMax"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "itemInterval"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "min"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "min"}}, "value": {"operator": "MINUS", "right": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"name": {"identifier": "minExtent"}}}, "left": {"name": {"identifier": "min"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "max"}}, "value": {"operator": "PLUS", "right": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"name": {"identifier": "minExtent"}}}, "left": {"name": {"identifier": "min"}}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "max"}}, "left": {"name": {"identifier": "min"}}}}, {"expression": {"type": {"name": {"identifier": "Interval"}}, "arguments": [{"name": {"identifier": "min"}}, {"name": {"identifier": "max"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemInterval"}, {"IdentifierName": "Min"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemInterval"}, {"IdentifierName": "Max"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "min"}, {"IdentifierName": "max"}]}, {"ReturnStatement": [{"IdentifierName": "itemInterval"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "min"}, {"IdentifierName": "max"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "min"}, {"SubtractExpression": [{"IdentifierName": "min"}, {"DivideExpression": [{"IdentifierName": "minExtent"}, {"NumericLiteralExpression": "2.0"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "max"}, {"AddExpression": [{"IdentifierName": "min"}, {"DivideExpression": [{"IdentifierName": "minExtent"}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Interval"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "min"}]}, {"Argument": [{"IdentifierName": "max"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "insert"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "arguments": [{"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "x1"}}, {"name": {"identifier": "x2"}}]}, {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "max"}, "arguments": [{"name": {"identifier": "x1"}}, {"name": {"identifier": "x2"}}]}]}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Insert"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Interval"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "x2"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Max"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x1"}]}, {"Argument": [{"IdentifierName": "x2"}]}]}]}]}]}]}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "frac"}}, "left": {"value": "1.0"}}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "x"}}, "left": {"name": {"identifier": "frac"}}}}, {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "frac"}}, "left": {"value": "1.0"}}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "y"}}, "left": {"name": {"identifier": "frac"}}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "frac"}, {"IdentifierName": "_x"}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"NumericLiteralExpression": "1.0"}, {"IdentifierName": "frac"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}]}]}, {"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "frac"}, {"IdentifierName": "_y"}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"NumericLiteralExpression": "1.0"}, {"IdentifierName": "frac"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "OctagonalEnvelope"}}, "name": {"identifier": "octagonalEnvelope"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NetTopologySuite"}, {"IdentifierName": "Geometries"}]}, {"IdentifierName": "OctagonalEnvelope"}]}, {"IdentifierName": "GetOctagonalEnvelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "inputLine"}}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "DELETE"}}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "isDeleted"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "inputLine"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_inputLine"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_isDeleted"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Delete"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_inputLine"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "numRings"}, "initializer": {"scope": {"name": {"identifier": "dis"}}, "name": {"identifier": "readInt"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearRing"}}}, "name": {"identifier": "holes"}, "initializer": {}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "holes"}}, "value": {"elementType": {"name": {"identifier": "LinearRing"}}, "levels": [{"dimension": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "numRings"}}}}]}}}, "condition": {"operator": "GREATER", "right": {"value": "1"}, "left": {"name": {"identifier": "numRings"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "shell"}, "initializer": {"name": {"identifier": "readLinearRing"}}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "holes"}}}, "value": {"name": {"identifier": "readLinearRing"}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "numRings"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "shell"}}, {"name": {"identifier": "holes"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryServices"}, {"IdentifierName": "CreateGeometryFactory"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_precisionModel"}]}, {"Argument": [{"IdentifierName": "srid"}]}, {"Argument": [{"IdentifierName": "_sequenceFactory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "ReadInt32"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "numRings"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "exteriorRing"}, {"InvocationExpression": [{"IdentifierName": "ReadLinearRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "cs"}]}, {"Argument": [{"IdentifierName": "srid"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "interiorRings"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ILinearRing"}, {"ArrayRankSpecifier": [{"SubtractExpression": [{"IdentifierName": "numRings"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"IdentifierName": "numRings"}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "interiorRings"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "ReadLinearRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "cs"}]}, {"Argument": [{"IdentifierName": "srid"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "exteriorRing"}]}, {"Argument": [{"IdentifierName": "interiorRings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm_10"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"value": "0.1"}]}}]}}, {"expression": {"name": {"identifier": "preciseCoordinateTester"}, "arguments": [{"name": {"identifier": "pm_10"}}, {"value": "1200.4"}, {"value": "1240.4"}, {"value": "1200"}, {"value": "1240"}]}}, {"expression": {"name": {"identifier": "preciseCoordinateTester"}, "arguments": [{"name": {"identifier": "pm_10"}}, {"value": "1209.4"}, {"value": "1240.4"}, {"value": "1210"}, {"value": "1240"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "PreciseCoordinateTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm10"}]}, {"Argument": [{"NumericLiteralExpression": "1200.4"}]}, {"Argument": [{"NumericLiteralExpression": "1240.4"}]}, {"Argument": [{"NumericLiteralExpression": "1200"}]}, {"Argument": [{"NumericLiteralExpression": "1240"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "PreciseCoordinateTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm10"}]}, {"Argument": [{"NumericLiteralExpression": "1209.4"}]}, {"Argument": [{"NumericLiteralExpression": "1240.4"}]}, {"Argument": [{"NumericLiteralExpression": "1210"}]}, {"Argument": [{"NumericLiteralExpression": "1240"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "UNION"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Union"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de1"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "arguments": [{"name": {"identifier": "e"}}, {"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de2"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "arguments": [{"name": {"identifier": "e"}}, {"value": "false"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "de1"}}, "name": {"identifier": "setSym"}, "arguments": [{"name": {"identifier": "de2"}}]}}, {"expression": {"scope": {"name": {"identifier": "de2"}}, "name": {"identifier": "setSym"}, "arguments": [{"name": {"identifier": "de1"}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de1"}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de2"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "edgesToAdd"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "edgesToAdd"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DirectedEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DirectedEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de1"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "de2"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de2"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "de1"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de2"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"name": {"identifier": "getCachedCoords"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "coords"}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "coords"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coords"}}, "value": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"name": {"identifier": "size"}}}]}}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, "value": {"name": {"identifier": "getCoordinateInternal"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordRef"}}, "value": {"type": {"name": {"identifier": "SoftReference"}}, "arguments": [{"name": {"identifier": "coords"}}]}}}, {"expression": {"name": {"identifier": "coords"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetCachedCoords"}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "arr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "arr"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "arr"}, {"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"IdentifierName": "Count"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "arr"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "arr"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "GetCoordinateInternal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordRef"}, {"ObjectCreationExpression": [{"IdentifierName": "WeakReference"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "arr"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "arr"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "IntervalRTreeNode"}}, "name": {"identifier": "n1"}, "initializer": {"type": {"name": {"identifier": "IntervalRTreeNode"}}, "expression": {"name": {"identifier": "o1"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IntervalRTreeNode"}}, "name": {"identifier": "n2"}, "initializer": {"type": {"name": {"identifier": "IntervalRTreeNode"}}, "expression": {"name": {"identifier": "o2"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "mid1"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "n1"}}, "name": {"identifier": "max"}}, "left": {"scope": {"name": {"identifier": "n1"}}, "name": {"identifier": "min"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "mid2"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "n2"}}, "name": {"identifier": "max"}}, "left": {"scope": {"name": {"identifier": "n2"}}, "name": {"identifier": "min"}}}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "mid2"}}, "left": {"name": {"identifier": "mid1"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "mid2"}}, "left": {"name": {"identifier": "mid1"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n1"}, {"IdentifierName": "Min"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "n1"}, {"IdentifierName": "Max"}]}]}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n2"}, {"IdentifierName": "Min"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "n2"}, {"IdentifierName": "Max"}]}]}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "mid1"}, {"IdentifierName": "mid2"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "mid1"}, {"IdentifierName": "mid2"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "testEnv"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "bufSize"}}, "left": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMinX"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "bufSize"}}, "left": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMaxX"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "bufSize"}}, "left": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMinY"}}}, {"operator": "PLUS", "right": {"name": {"identifier": "bufSize"}}, "left": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "getMaxY"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "testGeoms"}, "initializer": {"name": {"identifier": "createTestGeometries"}, "arguments": [{"name": {"identifier": "testEnv"}}, {"value": "5"}, {"name": {"identifier": "testGeomSize"}}]}}]}}, {"expression": {"name": {"identifier": "testGeoms"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MinX"}]}, {"IdentifierName": "bufSize"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MaxX"}]}, {"IdentifierName": "bufSize"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MinY"}]}, {"IdentifierName": "bufSize"}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "MaxY"}]}, {"IdentifierName": "bufSize"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateTestGeometries"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testEnv"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"IdentifierName": "testGeomSize"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "testGeoms"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "wktReader"}}, "value": {"type": {"name": {"identifier": "WKTReader"}}, "arguments": [{"type": {"name": {"identifier": "GeometryFactory"}}, "arguments": [{"name": {"identifier": "precisionModel"}}, {"name": {"identifier": "srid"}}]}]}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_wktReader"}, {"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "precisionModel"}]}, {"Argument": [{"IdentifierName": "srid"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "pe"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pe"}}, "name": {"identifier": "xValue"}}, "left": {"name": {"identifier": "xValue"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "pe"}}, "name": {"identifier": "xValue"}}, "left": {"name": {"identifier": "xValue"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pe"}}, "name": {"identifier": "eventType"}}, "left": {"name": {"identifier": "eventType"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "pe"}}, "name": {"identifier": "eventType"}}, "left": {"name": {"identifier": "eventType"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SweepLineEvent"}, {"IdentifierName": "o"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "xValue"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pe"}, {"IdentifierName": "xValue"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "xValue"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pe"}, {"IdentifierName": "xValue"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "eventType"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pe"}, {"IdentifierName": "eventType"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "eventType"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pe"}, {"IdentifierName": "eventType"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "events"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getInsertEvent"}}, "name": {"identifier": "setDeleteEventIndex"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isDelete"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsDelete"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "InsertEvent"}]}, {"IdentifierName": "DeleteEventIndex"}]}, {"IdentifierName": "i"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "sizeBasedScaleFactor"}, "initializer": {"name": {"identifier": "precisionScaleFactor"}, "arguments": [{"name": {"identifier": "argGeom"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "precisionDigits"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "fixedPM"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "sizeBasedScaleFactor"}}]}}]}}, {"expression": {"name": {"identifier": "bufferFixedPrecision"}, "arguments": [{"name": {"identifier": "fixedPM"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "PrecisionScaleFactor"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argGeom"}]}, {"Argument": [{"IdentifierName": "_distance"}]}, {"Argument": [{"IdentifierName": "precisionDigits"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sizeBasedScaleFactor"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BufferFixedPrecision"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fixedPrecModel"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "fromWKT"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IsValidOp"}}, "name": {"identifier": "validator"}, "initializer": {"type": {"name": {"identifier": "IsValidOp"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expected"}}, "left": {"name": {"identifier": "isValid"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FromWKT"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IsValidOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IsValidOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "isValid"}, {"IdentifierName": "expected"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "ptIndex"}}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "inputLines"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "segmentIndex"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "ptIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GraphComponent"}}, "name": {"identifier": "comp"}, "initializer": {"type": {"name": {"identifier": "GraphComponent"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "comp"}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "visitedState"}}, "left": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "isVisited"}}}}]}, "condition": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GraphComponent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "GraphComponent"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "IsVisited"}]}, {"IdentifierName": "visitedState"}]}, {"ReturnStatement": [{"IdentifierName": "comp"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "categorizedFunctions"}}, "name": {"identifier": "values"}, "arguments": [{"name": {"identifier": "category"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_categorizedFunctions"}, {"IdentifierName": "Values"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "category"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DepthSegment"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "DepthSegment"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER_EQUALS", "right": {"scope": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "upwardSeg"}}, "name": {"identifier": "maxX"}}, "left": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "minX"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"scope": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "upwardSeg"}}, "name": {"identifier": "minX"}}, "left": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "maxX"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "orientIndex"}, "initializer": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "orientationIndex"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "upwardSeg"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "orientIndex"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "orientIndex"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "orientIndex"}}, "value": {"operator": "MULTIPLY", "right": {"scope": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "upwardSeg"}}, "name": {"identifier": "orientationIndex"}, "arguments": [{"name": {"identifier": "upwardSeg"}}]}, "left": {"operator": "MINUS", "expression": {"value": "1"}}}}}, {"thenStmt": {"expression": {"name": {"identifier": "orientIndex"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "orientIndex"}}}}, {"expression": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "upwardSeg"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_upwardSeg"}, {"IdentifierName": "MinX"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_upwardSeg"}]}, {"IdentifierName": "MaxX"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_upwardSeg"}, {"IdentifierName": "MaxX"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_upwardSeg"}]}, {"IdentifierName": "MinX"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_upwardSeg"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_upwardSeg"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "orientIndex"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "orientIndex"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "orientIndex"}, {"MultiplyExpression": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_upwardSeg"}]}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_upwardSeg"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "orientIndex"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "orientIndex"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_upwardSeg"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_upwardSeg"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Translater"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "Translater"}}, "arguments": [{"name": {"identifier": "commonCoord"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "trans"}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "geometryChanged"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Translater"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_commonCoord"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "trans"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GeometryChanged"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "parentGraph"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IdentifierName": "parentGraph"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "point"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "centroid"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "interiorPoint"}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "point"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDistance"}}, "value": {"name": {"identifier": "dist"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "point"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_centroid"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_minDistance"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_interiorPoint"}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "point"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "dist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nonNull"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "nonNull"}}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newCoord"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"name": {"identifier": "nonNull"}}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "newCoord"}}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "nonNull"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}, "name": {"name": {"identifier": "newCoord"}}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "newCoord"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coord"}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "coordinate"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinate"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinateList"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "Point"}}, "expression": {"index": {"name": {"identifier": "n"}}, "name": {"name": {"identifier": "geometries"}}}}}, "name": {"identifier": "getCoordinate"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}, {"IdentifierName": "Coordinate"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinate"}}, {"name": {"identifier": "target"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "setAllLocations"}, "arguments": [{"name": {"identifier": "targetIndex"}}, {"name": {"identifier": "loc"}}]}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "setAllLocations"}, "arguments": [{"name": {"identifier": "targetIndex"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}]}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "target"}}, "name": {"identifier": "getDimension"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "target"}, {"IdentifierName": "Dimension"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"IdentifierName": "target"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "SetAllLocations"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "SetAllLocations"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "a"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "isRectangle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "IsRectangle"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "COORDS_1"}}, {"type": {"name": {"identifier": "Envelope"}}}]}, {"name": {"identifier": "COORDS_EMPTY"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coords1"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "Empty"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "geom"}}}}, "name": {"identifier": "getCoordinateSequence"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "line"}}]}}, {}]}, "condition": {"operator": "AND", "right": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "geom"}}}, "left": {"name": {"identifier": "isForcedToLineString"}}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "IsForcedToLineString"}, {"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILinearRing"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"IdentifierName": "geom"}]}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "wkts"}}}]}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "wkts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "geomList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "wkts"}, {"Block": [{"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geomList"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "hasBadOutputIntersection"}, "arguments": [{"name": {"identifier": "candidateSeg"}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "hasBadInputIntersection"}, "arguments": [{"name": {"identifier": "parentLine"}}, {"name": {"identifier": "sectionIndex"}}, {"name": {"identifier": "candidateSeg"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "HasBadOutputIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "badOutput"}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "HasBadInputIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "parentLine"}]}, {"Argument": [{"IdentifierName": "sectionIndex"}]}, {"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "badInput"}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"type": {"name": {"identifier": "Envelope"}}}, "name": {"identifier": "equals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "2"}]}, "name": {"identifier": "equals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "2"}]}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1.5"}, {"value": "2"}]}, "name": {"identifier": "equals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "2"}]}]}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1.5"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"name": {"identifier": "boundaryCount"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"IdentifierName": "boundaryCount"}, {"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "maxNodeDegree"}}, "value": {"value": "0"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"name": {"identifier": "startDe"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNode"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "degree"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "getOutgoingDegree"}, "arguments": [{}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "maxNodeDegree"}}, "value": {"name": {"identifier": "degree"}}}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "maxNodeDegree"}}, "left": {"name": {"identifier": "degree"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "de"}}, "value": {"name": {"identifier": "getNext"}, "arguments": [{"name": {"identifier": "de"}}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "startDe"}}, "left": {"name": {"identifier": "de"}}}}, {"expression": {"operator": "MULTIPLY", "target": {"name": {"identifier": "maxNodeDegree"}}, "value": {"value": "2"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_maxNodeDegree"}, {"NumericLiteralExpression": "0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startDe"}]}]}]}]}, {"DoStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Node"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "GetOutgoingDegree"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "degree"}, {"IdentifierName": "_maxNodeDegree"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_maxNodeDegree"}, {"IdentifierName": "degree"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "de"}, {"InvocationExpression": [{"IdentifierName": "GetNext"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "de"}, {"IdentifierName": "startDe"}]}]}, {"ExpressionStatement": [{"MultiplyAssignmentExpression": [{"IdentifierName": "_maxNodeDegree"}, {"NumericLiteralExpression": "2"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "OR", "right": {"name": {"identifier": "isFrameVertex"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}]}, "left": {"name": {"identifier": "isFrameVertex"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}]}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"InvocationExpression": [{"IdentifierName": "IsFrameVertex"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}]}]}, {"InvocationExpression": [{"IdentifierName": "IsFrameVertex"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "centroid"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Centroid"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"value": "1"}}}, {"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"value": "1"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"NumericLiteralExpression": "1"}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "hausDist"}, "initializer": {"type": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "hausDist"}}, "name": {"identifier": "setDensifyFraction"}, "arguments": [{"name": {"identifier": "frac"}}]}}, {"expression": {"scope": {"name": {"identifier": "hausDist"}}, "name": {"identifier": "distance"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "hausDist"}}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hausDist"}, {"IdentifierName": "DensifyFraction"}]}, {"IdentifierName": "frac"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hausDist"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hausDist"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isSequenced"}, "initializer": {"scope": {"name": {"identifier": "LineSequencer"}}, "name": {"identifier": "isSequenced"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"name": {"identifier": "expected"}}, "left": {"name": {"identifier": "isSequenced"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineSequencer"}, {"IdentifierName": "IsSequenced"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"IdentifierName": "isSequenced"}, {"IdentifierName": "expected"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "runSingular"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}, {"value": "2"}, {"value": "2"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "3"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunSingular"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dx"}, "initializer": {"scope": {"name": {"identifier": "interval"}}, "name": {"identifier": "getWidth"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "level"}, "initializer": {"operator": "PLUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "exponent"}, "arguments": [{"name": {"identifier": "dx"}}]}}}]}}, {"expression": {"name": {"identifier": "level"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "interval"}, {"IdentifierName": "Width"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "GetExponent"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dx"}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "level"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "a"}}, {"type": {"name": {"identifier": "GeometryPredicate"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "mask"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "type": {"type": "BOOLEAN"}, "name": {"identifier": "isTrue"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mask"}, {"IdentifierName": "Intersects"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "scaleInstance"}, "arguments": [{"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "20"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "10"}, {"name": {"identifier": "t"}}, {"value": "0"}, {"value": "30"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"operator": "MINUS", "expression": {"value": "20"}}, {"operator": "MINUS", "expression": {"value": "30"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ScaleInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "20"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "30"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeOverlay"}, "arguments": [{"name": {"identifier": "overlayOpCode"}}]}}, {"expression": {"name": {"identifier": "resultGeom"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeOverlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "overlayOpCode"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_resultGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "minDegree"}, "initializer": {"scope": {"name": {"identifier": "Integer"}}, "name": {"identifier": "MAX_VALUE"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "minDegreeNode"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDegree"}}, "value": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDegreeNode"}}, "value": {"name": {"identifier": "node"}}}}]}, "condition": {"operator": "OR", "right": {"operator": "LESS", "right": {"name": {"identifier": "minDegree"}}, "left": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getDegree"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "minDegreeNode"}}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "nodeIterator"}}}]}]}, {"expression": {"name": {"identifier": "minDegreeNode"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Int32"}, {"IdentifierName": "MaxValue"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "GetNodeEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "minDegreeNode"}, {"NullLiteralExpression": "null"}]}, {"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}, {"IdentifierName": "minDegree"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minDegree"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Degree"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minDegreeNode"}, {"IdentifierName": "node"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "minDegreeNode"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "Z"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "CGAlgorithmsDD"}}, "name": {"identifier": "signOfDet2x2"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}, {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}]}, "left": {"value": "0.0"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"NumericLiteralExpression": "0d"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RobustDeterminant"}, {"IdentifierName": "SignOfDet2x2"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_x"}]}, {"Argument": [{"IdentifierName": "_y"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "MULTIPLY", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "d"}]}]}, {"Argument": [{"MultiplyExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "d"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "currDepth"}, "initializer": {"name": {"identifier": "startDepth"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "nextDe"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "nextDe"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"scope": {"name": {"identifier": "nextDe"}}, "name": {"identifier": "setEdgeDepths"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, {"name": {"identifier": "currDepth"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "currDepth"}}, "value": {"scope": {"name": {"identifier": "nextDe"}}, "name": {"identifier": "getDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "endIndex"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "startIndex"}}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "currDepth"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startDepth"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startIndex"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "endIndex"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"ElementAccessExpression": [{"IdentifierName": "edgeList"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nextDe"}, {"IdentifierName": "SetEdgeDepths"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}, {"Argument": [{"IdentifierName": "currDepth"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "currDepth"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nextDe"}, {"IdentifierName": "GetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "currDepth"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"name": {"identifier": "createArray"}, "arguments": [{"name": {"identifier": "SIZE"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "getCSFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "coords"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateArray"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Size"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CsFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IsEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ConnectedInteriorTester"}}, "name": {"identifier": "cit"}, "initializer": {"type": {"name": {"identifier": "ConnectedInteriorTester"}}, "arguments": [{"name": {"identifier": "graph"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "DISCONNECTED_INTERIOR"}}, {"scope": {"name": {"identifier": "cit"}}, "name": {"identifier": "getCoordinate"}}]}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "cit"}}, "name": {"identifier": "isInteriorsConnected"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConnectedInteriorTester"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConnectedInteriorTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cit"}, {"IdentifierName": "IsInteriorsConnected"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "DisconnectedInteriors"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cit"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "view"}}, "name": {"identifier": "setLocation"}, "arguments": [{"scope": {"name": {"identifier": "model"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "model"}}, "name": {"identifier": "y"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "WpfPoint"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "modelSequence"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "modelSequence"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "res"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "Transform"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "modelSequence"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "modelSequence"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "res"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineMerger"}}, "name": {"identifier": "merger"}, "initializer": {"type": {"name": {"identifier": "LineMerger"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "merger"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "merger"}}, "name": {"identifier": "getMergedLineStrings"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineMerger"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineMerger"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "merger"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "merger"}, {"IdentifierName": "GetMergedLineStrings"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "dist"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segmentIndex"}}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "SegmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "Distance"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "SegmentIndex"}, {"IdentifierName": "maxSegmentIndex"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "c"}}}, {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "c"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "c"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"MultiplyExpression": [{"IdentifierName": "c"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SineStarFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "SineStarFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setArmLengthRatio"}, "arguments": [{"value": "0.1"}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumArms"}, "arguments": [{"value": "20"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createSineStar"}}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SineStarFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SineStarFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "ArmLengthRatio"}]}, {"NumericLiteralExpression": "0.1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumArms"}]}, {"NumericLiteralExpression": "20"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateSineStar"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "ring"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "ring"}}, "value": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "coord"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isHole"}}, "value": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "isCCW"}, "arguments": [{"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinates"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_ring"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_ring"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isHole"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsCCW"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ring"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineMergeExample"}}, "name": {"identifier": "test"}, "initializer": {"type": {"name": {"identifier": "LineMergeExample"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "test"}}, "name": {"identifier": "run"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineMergeExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineMergeExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "test"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "b"}}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "getFactory"}}, "left": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}], "selector": {"name": {"identifier": "ordinateIndex"}}}, {"expression": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "NaN"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Z"}]}]}]}, {"SwitchSection": [{"DefaultSwitchLabel": "default:"}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "NaN"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "minDim"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"scope": {"name": {"identifier": "src"}}, "name": {"identifier": "getDimension"}}, {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "getDimension"}}]}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "dest"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "destPos"}}, {"name": {"identifier": "dim"}}, {"scope": {"name": {"identifier": "src"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "srcPos"}}, {"name": {"identifier": "dim"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "minDim"}}, "left": {"name": {"identifier": "dim"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "dim"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "dim"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "src"}, {"IdentifierName": "Dimension"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dest"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "dim"}, {"IdentifierName": "minDim"}]}, {"PostIncrementExpression": [{"IdentifierName": "dim"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Ordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "dim"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "src"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "srcPos"}]}, {"Argument": [{"IdentifierName": "ordinate"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dest"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "destPos"}]}, {"Argument": [{"IdentifierName": "ordinate"}]}, {"Argument": [{"IdentifierName": "value"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "expectedWKT"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ConcaveHull"}}, "name": {"identifier": "hull"}, "initializer": {"type": {"name": {"identifier": "ConcaveHull"}}, "arguments": [{"name": {"identifier": "input"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "actual"}, "initializer": {"scope": {"name": {"identifier": "hull"}}, "name": {"identifier": "getResult"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedWKT"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConcaveHull"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "hull"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"IdentifierName": "actual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "X"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Y"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}, "value": {"name": {"identifier": "value"}}}}, {}], "label": {"scope": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "Z"}}}], "selector": {"name": {"identifier": "ordinateIndex"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "ordinate"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Z"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Z"}]}, {"IdentifierName": "value"}]}]}, {"BreakStatement": "break;"}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "2"}, {"value": "1"}]}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"value": "false"}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"type": {"name": {"identifier": "IllegalArgumentException"}}, "expression": {"name": {"identifier": "e"}}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IsExpression": [{"IdentifierName": "e"}, {"IdentifierName": "ArgumentException"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"type": {"name": {"identifier": "Geometry"}}}, "left": {"index": {"value": "0"}, "name": {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getParameterTypes"}}}}, "left": {"operator": "GREATER_EQUALS", "right": {"value": "1"}, "left": {"scope": {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getParameterTypes"}}, "name": {"identifier": "length"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "ParameterTypes"}]}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"EqualsExpression": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "ParameterTypes"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"TypeOfExpression": [{"IdentifierName": "IGeometry"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "dimension"}}, "value": {"value": "3"}}}, "condition": {"operator": "GREATER", "right": {"value": "3"}, "left": {"name": {"identifier": "dimension"}}}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "CoordinateArraySequence"}}, "arguments": [{"name": {"identifier": "size"}}]}}, "condition": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "dimension"}}}}, {"expression": {"type": {"name": {"identifier": "CoordinateArraySequence"}}, "arguments": [{"name": {"identifier": "size"}}, {"name": {"identifier": "dimension"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateArraySequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OrdinatesUtility"}, {"IdentifierName": "OrdinatesToDimension"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ordinates"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nseg"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "nseg"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"type": {"name": {"identifier": "LinearLocation"}}, "arguments": [{"name": {"identifier": "componentIndex"}}, {"name": {"identifier": "nseg"}}, {"value": "1.0"}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_segmentIndex"}, {"IdentifierName": "nseg"}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LinearLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}, {"Argument": [{"IdentifierName": "nseg"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "base"}, "initializer": {"operator": "MULTIPLY", "right": {"value": "1"}, "left": {"value": "2"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "base"}}, {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "base"}}}, {"operator": "PLUS", "right": {"value": "2"}, "left": {"name": {"identifier": "base"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "coords"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"IdentifierName": "size"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "size"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"NumericLiteralExpression": "2"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "baseUnits"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "baseUnits"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "baseUnits"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "coords"}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getMessage"}}]}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "ParseException"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "WKTReader"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "distance"}}, "value": {"name": {"identifier": "distance"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "getLineCurve"}, "arguments": [{"name": {"identifier": "inputPts"}}, {"name": {"identifier": "distance"}}]}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "inputPts"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "copyCoordinates"}, "arguments": [{"name": {"identifier": "inputPts"}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "distance"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "OffsetSegmentGenerator"}}, "name": {"identifier": "segGen"}, "initializer": {"name": {"identifier": "getSegGen"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}}, {"expression": {"name": {"identifier": "computeRingBufferCurve"}, "arguments": [{"name": {"identifier": "inputPts"}}, {"name": {"identifier": "side"}}, {"name": {"identifier": "segGen"}}]}}, {"expression": {"scope": {"name": {"identifier": "segGen"}}, "name": {"identifier": "getCoordinates"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "distance"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "inputPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetLineCurve"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "distance"}, {"NumericLiteralExpression": "0.0"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CopyCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "OffsetSegmentGenerator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSegmentGenerator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeRingBufferCurve"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputPts"}]}, {"Argument": [{"IdentifierName": "side"}]}, {"Argument": [{"IdentifierName": "segGen"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segGen"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"name": {"identifier": "transformCoordinates"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "seq"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "seqSize"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "seq"}}]}}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "preserveType"}}}, "left": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "seqSize"}}}, "left": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "seqSize"}}}}}}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "TransformCoordinates"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "seq"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"GreaterThanExpression": [{"IdentifierName": "seqSize"}, {"NumericLiteralExpression": "0"}]}, {"LessThanExpression": [{"IdentifierName": "seqSize"}, {"NumericLiteralExpression": "4"}]}]}, {"LogicalNotExpression": [{"IdentifierName": "_preserveType"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "PLUS", "target": {"name": {"identifier": "ptCount"}}, "value": {"value": "1"}}}, {"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "ptCentSum"}}, "name": {"identifier": "x"}}, "value": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "PLUS", "target": {"scope": {"name": {"identifier": "ptCentSum"}}, "name": {"identifier": "y"}}, "value": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "_ptCount"}, {"NumericLiteralExpression": "1"}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptCentSum"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptCentSum"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "envelopeCentre"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "translationInstance"}, "arguments": [{"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "TranslationInstance"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isSimpleMultiPoint"}, "arguments": [{"name": {"identifier": "mp"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsSimpleMultiPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o1"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o2"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "compare"}, "arguments": [{"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getArea"}}, {"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getArea"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Area"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "Area"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "ioGeom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "VWSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"name": {"identifier": "ioGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "VWSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ioGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_edges"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFunction"}}, "name": {"identifier": "func"}, "initializer": {"scope": {"name": {"identifier": "registry"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "defaultOp"}}, "name": {"identifier": "getReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "func"}}}}, {"expression": {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getReturnType"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "string"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "op"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFunction"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "registry"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "func"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "defaultOp"}, {"IdentifierName": "GetReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "op"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "ReturnType"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "pow4"}, "initializer": {"operator": "DIVIDE", "right": {"value": "3"}, "left": {"name": {"identifier": "numPts"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "exp"}, "initializer": {"operator": "DIVIDE", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"value": "4"}]}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"name": {"identifier": "pow4"}}]}}}]}}, {"expression": {"type": {"type": "INT"}, "expression": {"name": {"identifier": "exp"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "numPts"}, {"NumericLiteralExpression": "3d"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pow4"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "exp"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "searchEnv"}}}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "searchEnv"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_env"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "searchEnv"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "tree"}, "initializer": {"type": {"name": {"identifier": "STRtree"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "tree"}}, "name": {"identifier": "query"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "1"}]}, {"type": {"name": {"identifier": "ItemVisitor"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"value": "Should never reach here"}, {"value": "true"}]}}]}, "type": {}, "name": {"identifier": "visitItem"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Object"}}, "name": {"identifier": "item"}}]}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "STRtree"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tree"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "ItemVisitor"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "ccFilter"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonCoord"}}, "value": {"scope": {"name": {"identifier": "ccFilter"}}, "name": {"identifier": "getCommonCoordinate"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_ccFilter"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonCoord"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_ccFilter"}, {"IdentifierName": "CommonCoordinate"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "list"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "coord"}}]}}, {"expression": {"scope": {"name": {"identifier": "treeSet"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "treeSet"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "coord"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_list"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_list"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "buf"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "dist"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BufferResultValidator"}}, "name": {"identifier": "validator"}, "initializer": {"type": {"name": {"identifier": "BufferResultValidator"}}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "dist"}}, {"name": {"identifier": "buf"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "msg"}, "initializer": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "getErrorMessage"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "msg"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toPoint"}, "arguments": [{"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "getErrorLocation"}}]}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "validator"}}, "name": {"identifier": "isValid"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dist"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferResultValidator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "dist"}]}, {"Argument": [{"IdentifierName": "buf"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}, {"ArgumentList": "()"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "String"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "ErrorMessage"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "msg"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToPoint"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "ErrorLocation"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validator"}, {"IdentifierName": "IsValid"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "functions"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "func"}}]}}, {"expression": {"scope": {"name": {"identifier": "sortedFunctions"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getName"}}, {"name": {"identifier": "func"}}]}}, {"expression": {"scope": {"name": {"identifier": "categorizedFunctions"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getCategory"}}, {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getName"}}, {"name": {"identifier": "func"}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "categorizedGeometryFunctions"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getCategory"}}, {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getName"}}, {"name": {"identifier": "func"}}]}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "categorizedScalarFunctions"}}, "name": {"identifier": "put"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getCategory"}}, {"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "getName"}}, {"name": {"identifier": "func"}}]}}]}, "condition": {"name": {"identifier": "hasGeometryResult"}, "arguments": [{"name": {"identifier": "func"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_functions"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "func"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_sortedFunctions"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Name"}]}]}, {"Argument": [{"IdentifierName": "func"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_categorizedFunctions"}, {"IdentifierName": "Put"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Category"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Name"}]}]}, {"Argument": [{"IdentifierName": "func"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "HasGeometryResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "func"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_categorizedGeometryFunctions"}, {"IdentifierName": "Put"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Category"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "func"}, {"IdentifierName": "Name"}]}]}, {"Argument": [{"IdentifierName": "func"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonalLineworkExtracter"}}, "name": {"identifier": "extracter"}, "initializer": {"type": {"name": {"identifier": "PolygonalLineworkExtracter"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "extracter"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "linework"}, "initializer": {"scope": {"name": {"identifier": "extracter"}}, "name": {"identifier": "getLinework"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LineString"}}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toLineStringArray"}, "arguments": [{"name": {"identifier": "linework"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiLineString"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonalLineworkExtracter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PolygonalLineworkExtracter"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "extracter"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "extracter"}, {"IdentifierName": "Linework"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateMultiLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linework"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "createDiscs"}, "arguments": [{"value": "5"}, {"value": "0.55"}]}}]}}, {"expression": {"name": {"identifier": "runTest"}, "arguments": [{"name": {"identifier": "geoms"}}, {"scope": {"name": {"identifier": "CascadedPolygonUnionTester"}}, "name": {"identifier": "MIN_SIMILARITY_MEAURE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateDiscs"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "0.55"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CascadedPolygonUnionTester"}, {"IdentifierName": "MinSimilarityMeaure"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "createDiscs"}, "arguments": [{"value": "5"}, {"value": "0.7"}]}}]}}, {"expression": {"name": {"identifier": "runTest"}, "arguments": [{"name": {"identifier": "geoms"}}, {"scope": {"name": {"identifier": "CascadedPolygonUnionTester"}}, "name": {"identifier": "MIN_SIMILARITY_MEAURE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateDiscs"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "0.7"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "RunTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CascadedPolygonUnionTester"}, {"IdentifierName": "MinSimilarityMeaure"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"name": {"identifier": "addIntersection"}, "arguments": [{"name": {"identifier": "li"}}, {"name": {"identifier": "segmentIndex"}}, {"name": {"identifier": "geomIndex"}}, {"name": {"identifier": "i"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersectionNum"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "li"}, {"IdentifierName": "IntersectionNum"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}, {"Argument": [{"IdentifierName": "segmentIndex"}]}, {"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "envelopeCovers"}, "arguments": [{"name": {"identifier": "g"}}]}}}, {"expression": {"scope": {"name": {"identifier": "PreparedPolygonContainsProperly"}}, "name": {"identifier": "containsProperly"}, "arguments": [{}, {"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCovers"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedPolygonContainsProperly"}, {"IdentifierName": "ContainsProperly"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"type": "DOUBLE"}, "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "round"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "scaleFactor"}}, "left": {"name": {"identifier": "val"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Round"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "val"}, {"IdentifierName": "_scaleFactor"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Stack"}}, "name": {"identifier": "nodeStack"}, "initializer": {"type": {"name": {"identifier": "Stack"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "startNode"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "pop"}}}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}, {"name": {"identifier": "nodeStack"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "empty"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startNode"}]}]}]}]}, {"WhileStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Pop"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}, {"Argument": [{"IdentifierName": "nodeStack"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "comp"}, "initializer": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "compareTo"}, "arguments": [{"index": {"name": {"identifier": "j"}}, "name": {"name": {"identifier": "pts"}}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "comp"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "comp"}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "1"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"IdentifierName": "i"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "j"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "comp"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "comp"}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "lastEdge"}}, "value": {"name": {"identifier": "findEdge"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_lastEdge"}, {"InvocationExpression": [{"IdentifierName": "FindEdge"}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "getSortIndex"}}, "left": {"name": {"identifier": "getSortIndex"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "getSortIndex"}}, "left": {"name": {"identifier": "getSortIndex"}}}}, {"thenStmt": {"statements": [{"expression": {"value": "0"}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}, "left": {"name": {"identifier": "isEmpty"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "condition": {"name": {"identifier": "isEmpty"}}}, {"thenStmt": {"statements": [{"expression": {"value": "1"}}]}, "condition": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"name": {"identifier": "compareToSameClass"}, "arguments": [{"name": {"identifier": "o"}}, {"name": {"identifier": "comp"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Geometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"IdentifierName": "o"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "ClassSortIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "ClassSortIndex"}]}]}, {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"IdentifierName": "ClassSortIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "ClassSortIndex"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "IsEmpty"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}]}, {"Block": [{"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}]}, {"IfStatement": [{"IdentifierName": "IsEmpty"}, {"Block": [{"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareToSameClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}, {"Argument": [{"IdentifierName": "comp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "geoms"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "coords"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "PLUS", "target": {"name": {"identifier": "i"}}, "value": {"name": {"identifier": "dimension"}}}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_coords"}, {"IdentifierName": "Length"}]}]}, {"AddAssignmentExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Dimension"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "crossproduct"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sin"}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "ang1"}}, "left": {"name": {"identifier": "ang2"}}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "COUNTERCLOCKWISE"}}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "crossproduct"}}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "CLOCKWISE"}}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "crossproduct"}}}}, {"expression": {"name": {"identifier": "NONE"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Sin"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "ang2"}, {"IdentifierName": "ang1"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "crossproduct"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orientation"}, {"IdentifierName": "CounterClockwise"}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "crossproduct"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orientation"}, {"IdentifierName": "Clockwise"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Orientation"}, {"IdentifierName": "None"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "getReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "GetReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gc"}, "initializer": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "union"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "Union"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "computeOverlaySnapTolerance"}, "arguments": [{"name": {"identifier": "g0"}}]}, {"name": {"identifier": "computeOverlaySnapTolerance"}, "arguments": [{"name": {"identifier": "g1"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ComputeOverlaySnapTolerance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "ComputeOverlaySnapTolerance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isOnConstraint"}}, "value": {"value": "true"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "constraint"}}, "value": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "constraint"}}}}]}, "condition": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isOnConstraint"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "isOnConstraint"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isOnConstraint"}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "constraint"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "constraint"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValidEdge"}, "arguments": [{"name": {"identifier": "orig"}}, {"name": {"identifier": "dest"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "eAdj"}, "initializer": {"type": {"name": {"identifier": "HalfEdge"}}, "expression": {"scope": {"name": {"identifier": "vertexMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "orig"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "eSame"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eSame"}}, "value": {"scope": {"name": {"identifier": "eAdj"}}, "name": {"identifier": "find"}, "arguments": [{"name": {"identifier": "dest"}}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "eAdj"}}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "eSame"}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "eSame"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "orig"}}, {"name": {"identifier": "dest"}}, {"name": {"identifier": "eAdj"}}]}}]}}, {"expression": {"name": {"identifier": "e"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsValidEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}, {"Argument": [{"IdentifierName": "dest"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": "eAdj"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vertexMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}, {"Argument": [{"IdentifierName": "eAdj"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "eAdjFound"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eSame"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "eAdj"}, {"IdentifierName": "Find"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dest"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "eSame"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "eSame"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Insert"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orig"}]}, {"Argument": [{"IdentifierName": "dest"}]}, {"Argument": [{"IdentifierName": "eAdj"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "closeRing"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "CloseRing"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "segIndex1"}}, "left": {"name": {"identifier": "segIndex0"}}}, "left": {"operator": "EQUALS", "right": {"name": {"identifier": "e1"}}, "left": {"name": {"identifier": "e0"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p00"}, "initializer": {"index": {"name": {"identifier": "segIndex0"}}, "name": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "getCoordinates"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p01"}, "initializer": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segIndex0"}}}, "name": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "getCoordinates"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p10"}, "initializer": {"index": {"name": {"identifier": "segIndex1"}}, "name": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "getCoordinates"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p11"}, "initializer": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segIndex1"}}}, "name": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "getCoordinates"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"name": {"identifier": "p00"}}, {"name": {"identifier": "p01"}}, {"name": {"identifier": "p10"}}, {"name": {"identifier": "p11"}}]}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "p11"}}, "left": {"operator": "PLUS", "right": {"value": "-"}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "p10"}}, "left": {"operator": "PLUS", "right": {"value": " and "}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "p01"}}, "left": {"operator": "PLUS", "right": {"value": "-"}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "p00"}}, "left": {"value": "found non-noded intersection at "}}}}}}}}]}}]}, "condition": {"operator": "OR", "right": {"name": {"identifier": "hasInteriorIntersection"}, "arguments": [{"name": {"identifier": "li"}}, {"name": {"identifier": "p10"}}, {"name": {"identifier": "p11"}}]}, "left": {"operator": "OR", "right": {"name": {"identifier": "hasInteriorIntersection"}, "arguments": [{"name": {"identifier": "li"}}, {"name": {"identifier": "p00"}}, {"name": {"identifier": "p01"}}]}, "left": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "isProper"}}}}}]}, "condition": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "hasIntersection"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss0"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss1"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i0"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts0"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i0"}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i1"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i1"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInteriorIntersections"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss0"}]}, {"Argument": [{"IdentifierName": "i0"}]}, {"Argument": [{"IdentifierName": "ss1"}]}, {"Argument": [{"IdentifierName": "i1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "envelopeCentre"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "rotationInstance"}, "arguments": [{"name": {"identifier": "angle"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "RotationInstance"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "multipleOfPi"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "toHex"}, "arguments": [{"name": {"identifier": "bytes"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToHex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bytes"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "rectEnv"}}, "name": {"identifier": "contains"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"name": {"identifier": "isContainedInBoundary"}, "arguments": [{"name": {"identifier": "geom"}}]}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rectEnv"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsContainedInBoundary"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "targetGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "vertexKey"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getUserData"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "vertexKey"}}}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "setUserData"}, "arguments": [{"scope": {"name": {"identifier": "coordDataMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "vertexKey"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "targetGeom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "targetGeom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "targetGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "UserData"}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "vertexKey"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "UserData"}]}, {"ElementAccessExpression": [{"IdentifierName": "_coordDataMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "vertexKey"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "9575"}}, {"value": "4511"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "9295"}}, {"value": "3291"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "expression": {"value": "8945"}}, {"value": "1766"}]}]}}]}}, {"expression": {"name": {"identifier": "checkDD"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "checkShewchuk"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "checkOriginalJTS"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "9575"}]}]}, {"Argument": [{"NumericLiteralExpression": "4511"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "9295"}]}]}, {"Argument": [{"NumericLiteralExpression": "3291"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "8945"}]}]}, {"Argument": [{"NumericLiteralExpression": "1766"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckShewchuk"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOriginalJTS"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "triPtsList"}, "initializer": {"name": {"identifier": "getTriangleCoordinates"}, "arguments": [{"value": "false"}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Polygon"}}}, "name": {"identifier": "tris"}, "initializer": {"elementType": {"name": {"identifier": "Polygon"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "triPtsList"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "triPt"}, "initializer": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "tris"}}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "triPt"}}]}]}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "triPtsList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"name": {"identifier": "tris"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetTriangleCoordinates"}, {"ArgumentList": [{"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IPolygon"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Polygon"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "triPtsList"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "triPtsList"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "tris"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "triPt"}]}]}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tris"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "0.0"}}, "condition": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "isNull"}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "width"}, "initializer": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getWidth"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "hgt"}, "initializer": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getHeight"}}}]}}, {"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "hgt"}}, "left": {"name": {"identifier": "hgt"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "width"}}, "left": {"name": {"identifier": "width"}}}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "IsNull"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0.0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Width"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Height"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "width"}, {"IdentifierName": "width"}]}, {"MultiplyExpression": [{"IdentifierName": "hgt"}, {"IdentifierName": "hgt"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "resultLineList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "line"}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "true"}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "lineEdgesList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "_lineEdgesList"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_resultLineList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "InResult"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "dirEdge"}}, "value": {"elementType": {"name": {"identifier": "DirectedEdge"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "de0"}}, {"name": {"identifier": "de1"}}]}}}}, {"expression": {"scope": {"name": {"identifier": "de0"}}, "name": {"identifier": "setEdge"}, "arguments": [{}]}}, {"expression": {"scope": {"name": {"identifier": "de1"}}, "name": {"identifier": "setEdge"}, "arguments": [{}]}}, {"expression": {"scope": {"name": {"identifier": "de0"}}, "name": {"identifier": "setSym"}, "arguments": [{"name": {"identifier": "de1"}}]}}, {"expression": {"scope": {"name": {"identifier": "de1"}}, "name": {"identifier": "setSym"}, "arguments": [{"name": {"identifier": "de0"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "de0"}}, "name": {"identifier": "getFromNode"}}, "name": {"identifier": "addOutEdge"}, "arguments": [{"name": {"identifier": "de0"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "de1"}}, "name": {"identifier": "getFromNode"}}, "name": {"identifier": "addOutEdge"}, "arguments": [{"name": {"identifier": "de1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "dirEdge"}, {"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "de0"}, {"IdentifierName": "de1"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de0"}, {"IdentifierName": "Edge"}]}, {"ThisExpression": "this"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de1"}, {"IdentifierName": "Edge"}]}, {"ThisExpression": "this"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de0"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "de1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de1"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "de0"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de0"}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "AddOutEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de1"}, {"IdentifierName": "FromNode"}]}, {"IdentifierName": "AddOutEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "minClearancePts"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_minClearancePts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"name": {"identifier": "startDe"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "true"}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "de"}}, "value": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "startDe"}}, "left": {"name": {"identifier": "de"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startDe"}]}]}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "InResult"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "de"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Next"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "de"}, {"IdentifierName": "startDe"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"value": "10"}, {"value": "0"}, {"value": "10"}, {"value": "0"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "projectionFactor"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "11"}, {"value": "0"}]}]}]}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg2"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"value": "10"}, {"value": "0"}, {"value": "20"}, {"value": "0"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "EQUALS", "right": {"value": "0.1"}, "left": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "projectionFactor"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "11"}, {"value": "0"}]}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "ProjectionFactor"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "11"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "20"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "ProjectionFactor"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "11"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"NumericLiteralExpression": "0.1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Distance3DOp"}}, "name": {"identifier": "distOp"}, "initializer": {"type": {"name": {"identifier": "Distance3DOp"}}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "distOp"}}, "name": {"identifier": "distance"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Distance3DOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distOp"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "distance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BestMatchVisitor"}}, "name": {"identifier": "visitor"}, "initializer": {"type": {"name": {"identifier": "BestMatchVisitor"}}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "queryEnvelope"}}, {"name": {"identifier": "visitor"}}]}}, {"expression": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "getNode"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Query"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "QueryEnvelope"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "Node"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "getReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "GetReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"thenStmt": {"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPolygon"}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "centre"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "centrePoint"}, "initializer": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "centre"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "centrePoint"}}}, "condition": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "radius"}}}}, {"expression": {"scope": {"name": {"identifier": "centrePoint"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "radius"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_centre"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPoint"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_centre"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_radius"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"IdentifierName": "centrePoint"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centrePoint"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_radius"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferSubgraph"}}, "name": {"identifier": "graph"}, "initializer": {"type": {"name": {"identifier": "BufferSubgraph"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "condition": {"operator": "LESS", "right": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "rightMostCoord"}}, "name": {"identifier": "x"}}, "left": {"scope": {"scope": {}, "name": {"identifier": "rightMostCoord"}}, "name": {"identifier": "x"}}}}, {"thenStmt": {"statements": [{"expression": {"value": "1"}}]}, "condition": {"operator": "GREATER", "right": {"scope": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "rightMostCoord"}}, "name": {"identifier": "x"}}, "left": {"scope": {"scope": {}, "name": {"identifier": "rightMostCoord"}}, "name": {"identifier": "x"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "BufferSubgraph"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "BufferSubgraph"}, {"IdentifierName": "o"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RightMostCoordinate"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "RightMostCoordinate"}]}, {"IdentifierName": "X"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RightMostCoordinate"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "RightMostCoordinate"}]}, {"IdentifierName": "X"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "atomicGeoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "addComponents"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "atomicGeoms"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "g"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "addComponents"}, "arguments": [{"name": {"identifier": "g2"}}, {"name": {"identifier": "atomicGeoms"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "g2"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "atomicGeoms"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "g"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddComponents"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "atomicGeoms"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "g2"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddComponents"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}, {"Argument": [{"IdentifierName": "atomicGeoms"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "atomicGeoms"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "sym"}}, "value": {}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "parentEdge"}}, "value": {}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_sym"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "parentEdge"}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "forceToLineString"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "forceToLineString"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "MultiLineString"}}, "arguments": [{"name": {"identifier": "lineStrings"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "MultiLineString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineStrings"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "selected"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "selected"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isValid"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "selected"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleLambdaExpression": [{"Parameter": "g"}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsValid"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "comb1"}, "initializer": {"name": {"identifier": "comb"}, "arguments": [{"name": {"identifier": "env"}}, {"name": {"identifier": "size"}}, {"name": {"identifier": "geomFact"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "centre"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "rotationInstance"}, "arguments": [{"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"value": "0.5"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "comb2"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "comb1"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MultiPolygon"}}, "name": {"identifier": "mp"}, "initializer": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiPolygon"}, "arguments": [{"elementType": {"name": {"identifier": "Polygon"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "comb1"}}, {"name": {"identifier": "comb2"}}]}}]}}]}}, {"expression": {"name": {"identifier": "mp"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateComb"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}, {"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Centre"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "RotationInstance"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"NumericLiteralExpression": "0.5"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "comb1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "comb1"}, {"IdentifierName": "comb2"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "mp"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "newFactory"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}, "arguments": [{"name": {"identifier": "pm"}}, {"scope": {"name": {"identifier": "inputFactory"}}, "name": {"identifier": "getSRID"}}, {"scope": {"name": {"identifier": "inputFactory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}]}}]}}, {"expression": {"name": {"identifier": "newFactory"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "inputFactory"}, {"IdentifierName": "SRID"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "inputFactory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newFactory"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"name": {"identifier": "isBoundaryNode"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "coord"}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "insertBoundaryPoint"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "coord"}}]}}, "elseStmt": {"expression": {"name": {"identifier": "insertPoint"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "coord"}}, {"name": {"identifier": "loc"}}]}}, "condition": {"operator": "AND", "right": {"name": {"identifier": "useBoundaryDeterminationRule"}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"name": {"identifier": "loc"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsBoundaryNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "coord"}]}]}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"IdentifierName": "_useBoundaryDeterminationRule"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertBoundaryPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "DissolveHalfEdge"}}, "arguments": [{"name": {"identifier": "p0"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DissolveHalfEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "wkts"}}}]}]}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "wkts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "geomList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "wkts"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "wkts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geomList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "ptSet"}, "initializer": {"type": {"name": {"identifier": "TreeSet"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ptSet"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "ptSet"}}, "name": {"identifier": "toArray"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "0"}}]}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptSet"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ptSet"}, {"IdentifierName": "CopyTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"name": {"identifier": "isNaN"}}}, {"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "hi"}}}, {"operator": "MINUS", "expression": {"name": {"identifier": "lo"}}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsNaN"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_hi"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "_lo"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "clearVisitedEdges"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "getEdge"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNode"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Label"}}, "name": {"identifier": "label"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}]}}, {"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setEdgeDepths"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, {"name": {"identifier": "outsideDepth"}}]}}, {"expression": {"name": {"identifier": "copySymDepths"}, "arguments": [{"name": {"identifier": "de"}}]}}, {"expression": {"name": {"identifier": "computeDepths"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ClearVisitedEdges"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_finder"}, {"IdentifierName": "Edge"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "SetEdgeDepths"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}, {"Argument": [{"IdentifierName": "outsideDepth"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CopySymDepths"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeDepths"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ExtendedCoordinate"}, {"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Y"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "Z"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "ExtendedCoordinate"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "exCoord"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exCoord"}, {"IdentifierName": "M"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "exc"}, {"IdentifierName": "M"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "geom"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"IdentifierName": "Locate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"entries": [{"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}}}], "label": {"value": "0"}}, {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "centre"}}]}}], "label": {"value": "1"}}], "selector": {"scope": {"name": {"identifier": "extremalPts"}}, "name": {"identifier": "length"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "extremalPts"}}, "name": {"identifier": "length"}}}, "name": {"name": {"identifier": "extremalPts"}}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "input"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"SwitchStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_extremalPts"}, {"IdentifierName": "Length"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_centre"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_extremalPts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_input"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "p1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "area3D"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Area3D"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "findCoveredLineEdges"}}}, {"expression": {"name": {"identifier": "collectLines"}, "arguments": [{"name": {"identifier": "opCode"}}]}}, {"expression": {"name": {"identifier": "buildLines"}, "arguments": [{"name": {"identifier": "opCode"}}]}}, {"expression": {"name": {"identifier": "resultLineList"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "FindCoveredLineEdges"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CollectLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_resultLineList"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "boundaryLineString"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "boundaryMultiLineString"}, "arguments": [{"type": {"name": {"identifier": "MultiLineString"}}, "expression": {"name": {"identifier": "geom"}}}]}}, "condition": {"type": {"name": {"identifier": "MultiLineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getBoundary"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "_geom"}, {"IdentifierName": "ILineString"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "BoundaryLineString"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "_geom"}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "_geom"}, {"IdentifierName": "IMultiLineString"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "BoundaryMultiLineString"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IMultiLineString"}, {"IdentifierName": "_geom"}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geom"}, {"IdentifierName": "Boundary"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "readCoordinateSequence"}, "arguments": [{"value": "1"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryServices"}, {"IdentifierName": "CreateGeometryFactory"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_precisionModel"}]}, {"Argument": [{"IdentifierName": "srid"}]}, {"Argument": [{"IdentifierName": "_sequenceFactory"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ReadCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Map"}}, "name": {"identifier": "nodedLinesMap"}, "initializer": {"name": {"identifier": "nodedLinesMap"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryCoordinateReplacer"}}, "name": {"identifier": "lineReplacer"}, "initializer": {"type": {"name": {"identifier": "GeometryCoordinateReplacer"}}, "arguments": [{"name": {"identifier": "nodedLinesMap"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryEditorEx"}}, "name": {"identifier": "geomEditor"}, "initializer": {"type": {"name": {"identifier": "GeometryEditorEx"}}, "arguments": [{"name": {"identifier": "lineReplacer"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snapped"}, "initializer": {"scope": {"name": {"identifier": "geomEditor"}}, "name": {"identifier": "edit"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "snapped"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "NodedLinesMap"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryCoordinateReplacer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nodedLinesMap"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryEditorEx"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineReplacer"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomEditor"}, {"IdentifierName": "Edit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapped"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeIntLineIndex"}}}, {"expression": {"index": {"index": {"name": {"identifier": "intIndex"}}, "name": {"index": {"name": {"identifier": "segmentIndex"}}, "name": {"name": {"identifier": "intLineIndex"}}}}, "name": {"name": {"identifier": "intPt"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntLineIndex"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"EqualsExpression": [{"IdentifierName": "segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"NumericLiteralExpression": "0"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionPoint"}, {"BracketedArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "IntersectionLineIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "index"}, {"IdentifierName": "intIndex"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}, "name": {"identifier": "parentEdge"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "edges"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Edge"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "dirEdges"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "directedEdge"}, {"IdentifierName": "parentEdge"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "edges"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "getEdges"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setMarked"}, "arguments": [{"value": "true"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "sym"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "setMarked"}, "arguments": [{"value": "true"}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "sym"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"IdentifierName": "Edges"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "edges"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Marked"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "sym"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "Marked"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "OR", "right": {"operator": "GREATER_EQUALS", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segmentFraction"}}}, "left": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segmentFraction"}}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "segLen"}, "initializer": {"name": {"identifier": "getSegmentLength"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "lenToStart"}, "initializer": {"operator": "MULTIPLY", "right": {"name": {"identifier": "segLen"}}, "left": {"name": {"identifier": "segmentFraction"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "lenToEnd"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "lenToStart"}}, "left": {"name": {"identifier": "segLen"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "0.0"}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segmentFraction"}}, "value": {"value": "1.0"}}}]}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "lenToEnd"}}}, "left": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "lenToStart"}}, "left": {"name": {"identifier": "lenToEnd"}}}}}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "lenToStart"}}}, "left": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "lenToEnd"}}, "left": {"name": {"identifier": "lenToStart"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"LessThanOrEqualExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSegmentLength"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"IdentifierName": "_segmentFraction"}, {"IdentifierName": "segLen"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "segLen"}, {"IdentifierName": "lenToStart"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LessThanOrEqualExpression": [{"IdentifierName": "lenToStart"}, {"IdentifierName": "lenToEnd"}]}, {"LessThanExpression": [{"IdentifierName": "lenToStart"}, {"IdentifierName": "minDistance"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ElseClause": [{"IfStatement": [{"LogicalAndExpression": [{"LessThanOrEqualExpression": [{"IdentifierName": "lenToEnd"}, {"IdentifierName": "lenToStart"}]}, {"LessThanExpression": [{"IdentifierName": "lenToEnd"}, {"IdentifierName": "minDistance"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "1"}}, "elseStmt": {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "nextLocation"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "currLocation"}}}}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "nextLocation"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "currLocation"}}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "currLocation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"EqualsExpression": [{"IdentifierName": "nextLocation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}, {"ElseClause": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "currLocation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"EqualsExpression": [{"IdentifierName": "nextLocation"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "item1"}}, "name": {"identifier": "getItem"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "item2"}}, "name": {"identifier": "getItem"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "item1"}, {"IdentifierName": "Item"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "item2"}, {"IdentifierName": "Item"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "crosses"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Crosses"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Counter"}}, "name": {"identifier": "counter"}, "initializer": {"type": {"name": {"identifier": "Counter"}}, "expression": {"scope": {"name": {"identifier": "endpointMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "pt"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "counter"}}, "value": {"type": {"name": {"identifier": "Counter"}}}}}, {"expression": {"scope": {"name": {"identifier": "endpointMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "counter"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "counter"}}}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"scope": {"name": {"identifier": "counter"}}, "name": {"identifier": "count"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Counter"}, {"VariableDeclarator": "counter"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_endpointMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "counter"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "counter"}, {"ObjectCreationExpression": [{"IdentifierName": "Counter"}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_endpointMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "counter"}]}]}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "counter"}, {"IdentifierName": "Count"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"name": {"identifier": "expectedLoc"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "expected"}, "initializer": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "expectedLoc"}}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expected"}}, {"scope": {"name": {"identifier": "PointLocation"}}, "name": {"identifier": "isInRing"}, "arguments": [{"name": {"identifier": "pt"}}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}]}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "expectedLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"EqualsExpression": [{"IdentifierName": "expectedLoc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsPointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "poly"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsPointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "t"}, "initializer": {"type": {"name": {"identifier": "Triangle"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "pt"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "z"}, "initializer": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "interpolateZ"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedValue"}}, {"name": {"identifier": "z"}}, {"value": "0.000001"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Triangle"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "InterpolateZ"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedValue"}]}, {"Argument": [{"IdentifierName": "z"}]}, {"Argument": [{"IdentifierName": "Tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "PLUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "destStart"}}}, "name": {"name": {"identifier": "dest"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"operator": "PLUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "srcStart"}}}, "name": {"name": {"identifier": "src"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "length"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "src"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "srcStart"}, {"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "dest"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "destStart"}, {"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "c"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"name": {"identifier": "b"}}]}}, {"expression": {"name": {"identifier": "a"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "a"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "supercircle"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "nPts"}}, {"value": "4"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Supercircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "nPts"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiPolygon"}}}, "name": {"identifier": "multiPolygonArray"}, "initializer": {"elementType": {"name": {"identifier": "MultiPolygon"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "multiPolygons"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "MultiPolygon"}}}, "expression": {"scope": {"name": {"identifier": "multiPolygons"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "multiPolygonArray"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IMultiPolygon"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IMultiPolygon"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "multiPolygons"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IMultiPolygon"}, {"IdentifierName": "multiPolygons"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "list"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "mp"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "list"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env0"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"index": {"value": "0"}, "name": {"index": {"value": "0"}, "name": {"name": {"identifier": "inputLines"}}}}, {"index": {"value": "1"}, "name": {"index": {"value": "0"}, "name": {"name": {"identifier": "inputLines"}}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env1"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"index": {"value": "0"}, "name": {"index": {"value": "1"}, "name": {"name": {"identifier": "inputLines"}}}}, {"index": {"value": "1"}, "name": {"index": {"value": "1"}, "name": {"name": {"identifier": "inputLines"}}}}]}}]}}, {"expression": {"operator": "AND", "right": {"scope": {"name": {"identifier": "env1"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "intPt"}}]}, "left": {"scope": {"name": {"identifier": "env0"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "intPt"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env0"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPoint"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env1"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPoint"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeIntersectionNodes"}, "arguments": [{"name": {"identifier": "geomGraph"}}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "copyNodesAndLabels"}, "arguments": [{"name": {"identifier": "geomGraph"}}, {"value": "0"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEndBuilder"}}, "name": {"identifier": "eeBuilder"}, "initializer": {"type": {"name": {"identifier": "EdgeEndBuilder"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "eeList"}, "initializer": {"scope": {"name": {"identifier": "eeBuilder"}}, "name": {"identifier": "computeEdgeEnds"}, "arguments": [{"scope": {"name": {"identifier": "geomGraph"}}, "name": {"identifier": "getEdgeIterator"}}]}}]}}, {"expression": {"name": {"identifier": "insertEdgeEnds"}, "arguments": [{"name": {"identifier": "eeList"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntersectionNodes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomGraph"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CopyNodesAndLabels"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomGraph"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeEndBuilder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "EdgeEndBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeEnd"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "eeBuilder"}, {"IdentifierName": "ComputeEdgeEnds"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomGraph"}, {"IdentifierName": "Edges"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertEdgeEnds"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eeList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "VWSimplifier"}}, "name": {"identifier": "simp"}, "initializer": {"type": {"name": {"identifier": "VWSimplifier"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "simp"}}, "name": {"identifier": "setDistanceTolerance"}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, {"expression": {"scope": {"name": {"identifier": "simp"}}, "name": {"identifier": "getResultGeometry"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "VWSimplifier"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "VWSimplifier"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "simp"}, {"IdentifierName": "DistanceTolerance"}]}, {"IdentifierName": "distanceTolerance"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "simp"}, {"IdentifierName": "GetResultGeometry"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "bufCurve"}, "initializer": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "getBoundary"}}}]}}, {"expression": {"name": {"identifier": "checkMinimumDistance"}, "arguments": [{"name": {"identifier": "input"}}, {"name": {"identifier": "bufCurve"}}, {"name": {"identifier": "minValidDistance"}}]}}, {"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkMaximumDistance"}, "arguments": [{"name": {"identifier": "input"}}, {"name": {"identifier": "bufCurve"}}, {"name": {"identifier": "maxValidDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_result"}, {"IdentifierName": "Boundary"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMinimumDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_input"}]}, {"Argument": [{"IdentifierName": "bufCurve"}]}, {"Argument": [{"IdentifierName": "_minValidDistance"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMaximumDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_input"}]}, {"Argument": [{"IdentifierName": "bufCurve"}]}, {"Argument": [{"IdentifierName": "_maxValidDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "item"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "item"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "TItem"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "TrianglePredicate"}}, "name": {"identifier": "isInCircleRobust"}, "arguments": [{"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "p"}}, {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "p"}}, {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "p"}}, {"scope": {}, "name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TrianglePredicate"}, {"IdentifierName": "IsInCircleRobust"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "_p"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "_p"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "_p"}]}]}, {"Argument": [{"IdentifierName": "_p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "adjTris"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "start"}, "initializer": {"name": {"identifier": "getEdge"}, "arguments": [{"name": {"identifier": "vertexIndex"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "qe"}, "initializer": {"name": {"identifier": "start"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "name": {"identifier": "adjTri"}, "initializer": {"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "expression": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "getData"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "adjTris"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "adjTri"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "adjTri"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "qe"}}, "value": {"scope": {"name": {"identifier": "qe"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "start"}}, "left": {"name": {"identifier": "qe"}}}}, {"expression": {"name": {"identifier": "adjTris"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "QuadEdgeTriangle"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vertexIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "start"}]}]}]}]}, {"DoStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "Data"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "adjTri"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "adjTris"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "adjTri"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "qe"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "qe"}, {"IdentifierName": "start"}]}]}, {"ReturnStatement": [{"IdentifierName": "adjTris"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "constraintSegs"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "Segment"}}, "arguments": [{"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "coords"}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "constraintSegs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Segment"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "IndexedNestedRingTester"}}, "name": {"identifier": "nestedTester"}, "initializer": {"type": {"name": {"identifier": "IndexedNestedRingTester"}}, "arguments": [{"name": {"identifier": "graph"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "innerHole"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"scope": {"name": {"identifier": "nestedTester"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "innerHole"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isNonNested"}, "initializer": {"scope": {"name": {"identifier": "nestedTester"}}, "name": {"identifier": "isNonNested"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "NESTED_HOLES"}}, {"scope": {"name": {"identifier": "nestedTester"}}, "name": {"identifier": "getNestedPoint"}}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isNonNested"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "IndexedNestedRingTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "graph"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Holes"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nestedTester"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "innerHole"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nestedTester"}, {"IdentifierName": "IsNonNested"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isNonNested"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "NestedHoles"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nestedTester"}, {"IdentifierName": "NestedPoint"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SpatialIndexTester"}}, "name": {"identifier": "tester"}, "initializer": {"type": {"name": {"identifier": "SpatialIndexTester"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "setSpatialIndex"}, "arguments": [{"type": {"name": {"identifier": "Quadtree"}}}]}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "init"}}}, {"expression": {"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "run"}}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "tester"}}, "name": {"identifier": "isSuccess"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SpatialIndexTester"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "SpatialIndex"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "Init"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tester"}, {"IdentifierName": "IsSuccess"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "copy"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "copy"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "copy"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "copy"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "copy"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "copy"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "copy"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segStrings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryComponentFilter"}}, "name": {"identifier": "filter"}, "initializer": {"type": {"name": {"identifier": "GeometryComponentFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"thenStmt": {}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}}}, {"thenStmt": {}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumPoints"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "roundPts"}, "initializer": {"name": {"identifier": "round"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, "name": {"identifier": "getCoordinateSequence"}}, {"name": {"identifier": "pm"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "arguments": [{"name": {"identifier": "roundPts"}}, {"name": {"identifier": "geom"}}]}]}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "filter"}}]}}, {"expression": {"name": {"identifier": "segStrings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryComponentFilter"}, {"ArgumentList": [{"Argument": [{"AnonymousMethodExpression": [{"ParameterList": [{"Parameter": [{"IdentifierName": "IGeometry"}]}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "fgeom"}, {"IdentifierName": "ILineString"}]}]}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Round"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "fgeom"}]}]}, {"IdentifierName": "CoordinateSequence"}]}]}, {"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStrings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "NodedSegmentString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "roundPts"}]}, {"Argument": [{"IdentifierName": "fgeom"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "filter"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segStrings"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "allPositionsEqual"}, "arguments": [{"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "AllPositionsEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "roughGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "roughGeom"}}}]}, "condition": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "parent"}}}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "roughGeom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "IMultiPolygon"}]}, {"Block": [{"ReturnStatement": [{"IdentifierName": "roughGeom"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "roughGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "valuesTreeForNode"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "valuesTreeForChild"}, "initializer": {"name": {"identifier": "itemsTree"}, "arguments": [{"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "childBoundable"}}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "valuesTreeForNode"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "valuesTreeForChild"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "valuesTreeForChild"}}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "valuesTreeForNode"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "ItemBoundable"}}, "expression": {"name": {"identifier": "childBoundable"}}}}, "name": {"identifier": "getItem"}}]}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}]}, "condition": {"type": {"name": {"identifier": "ItemBoundable"}}, "expression": {"name": {"identifier": "childBoundable"}}}}, "condition": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "childBoundable"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"expression": {}}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "valuesTreeForNode"}}, "name": {"identifier": "size"}}}}, {"expression": {"name": {"identifier": "valuesTreeForNode"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "ChildBoundables"}]}, {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "childBoundable"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ItemsTree"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "childBoundable"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "valuesTreeForChild"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "valuesTreeForNode"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "valuesTreeForChild"}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "childBoundable"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "valuesTreeForNode"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "childBoundable"}]}]}, {"IdentifierName": "Item"}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "ShouldNeverReachHere"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "valuesTreeForNode"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"NullLiteralExpression": "null"}, {"IdentifierName": "valuesTreeForNode"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEquivalentClass"}, "arguments": [{"name": {"identifier": "other"}}]}}}, {"expression": {"scope": {}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "other"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsEquivalentClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "loc"}}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "location"}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "loc"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "size"}}}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineString"}}, "name": {"identifier": "taggedLine"}, "initializer": {"type": {"name": {"identifier": "TaggedLineString"}}, "expression": {"scope": {"name": {"identifier": "linestringMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "parent"}}]}}}]}}, {"expression": {"name": {"identifier": "createCoordinateSequence"}, "arguments": [{"scope": {"name": {"identifier": "taggedLine"}}, "name": {"identifier": "getResultCoordinates"}}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "parent"}}}}, {"expression": {"scope": {}, "name": {"identifier": "transformCoordinates"}, "arguments": [{"name": {"identifier": "coords"}}, {"name": {"identifier": "parent"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "ILineString"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "s"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TaggedLineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_container"}, {"IdentifierName": "_lineStringMap"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "s"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateCoordinateSequence"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "taggedLine"}, {"IdentifierName": "ResultCoordinates"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedLoc"}}, {"scope": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "locatePointInRing"}, "arguments": [{"name": {"identifier": "pt"}}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedLoc"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RayCrossingCounter"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "poly"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedLoc"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RayCrossingCounter"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "linearGeom"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "extractLine"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}]}}]}}, {"expression": {"name": {"identifier": "checkExpected"}, "arguments": [{"name": {"identifier": "result"}}, {"name": {"identifier": "expected"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LengthIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}, {"Argument": [{"IdentifierName": "end"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckExpected"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}, {"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "touches"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Touches"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "upwardSeg"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeSequence"}}}, {"expression": {"name": {"identifier": "sequencedGeometry"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeSequence"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_sequencedGeometry"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "mcList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "INT"}}, "name": {"identifier": "startIndex"}, "initializer": {"name": {"identifier": "getChainStartIndices"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "mc"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "arguments": [{"name": {"identifier": "pts"}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "startIndex"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "startIndex"}}}, {"name": {"identifier": "context"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "mcList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "mc"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "startIndex"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "mcList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "MonotoneChain"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetChainStartIndices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startIndex"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MonotoneChain"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "context"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mcList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mc"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "mcList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "fact"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "i2"}}, "left": {"name": {"identifier": "i1"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i1"}, {"IdentifierName": "i2"}]}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "isArea"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "IsArea"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "validEdgeRingList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}, "elseStmt": {"expression": {"scope": {"name": {"identifier": "invalidRingList"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "getLineString"}}]}}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isValid"}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edgeRingList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "edgeRingList"}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsValid"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "validEdgeRingList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "invalidRingList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "LineString"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "newseq"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "size"}}, {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getDimension"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}}]}}, {"expression": {"name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "seq"}}, {"value": "0"}, {"name": {"identifier": "newseq"}}, {"value": "0"}, {"name": {"identifier": "n"}}]}}, {"body": {"expression": {"name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "seq"}}, {"value": "0"}, {"name": {"identifier": "newseq"}}, {"name": {"identifier": "i"}}, {"value": "1"}]}}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "n"}}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "newseq"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "size"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Copy"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "newseq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "n"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "n"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "size"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Copy"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "newseq"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newseq"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EndpointInfo"}}, "name": {"identifier": "eiInfo"}, "initializer": {"type": {"name": {"identifier": "EndpointInfo"}}, "expression": {"scope": {"name": {"identifier": "endPoints"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "p"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eiInfo"}}, "value": {"type": {"name": {"identifier": "EndpointInfo"}}, "arguments": [{"name": {"identifier": "p"}}]}}}, {"expression": {"scope": {"name": {"identifier": "endPoints"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "eiInfo"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "eiInfo"}}}}, {"expression": {"scope": {"name": {"identifier": "eiInfo"}}, "name": {"identifier": "addEndpoint"}, "arguments": [{"name": {"identifier": "isClosed"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EndpointInfo"}, {"VariableDeclarator": "eiInfo"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "endPoints"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "eiInfo"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eiInfo"}, {"ObjectCreationExpression": [{"IdentifierName": "EndpointInfo"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "endPoints"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "eiInfo"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "eiInfo"}, {"IdentifierName": "AddEndpoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isClosed"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "distance"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "curve"}, "initializer": {"scope": {"name": {"identifier": "curveBuilder"}}, "name": {"identifier": "getLineCurve"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"name": {"identifier": "addCurve"}, "arguments": [{"name": {"identifier": "curve"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "_distance"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_curveBuilder"}, {"IdentifierName": "GetLineCurve"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddCurve"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "curve"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}]}}], "label": {"scope": {"name": {"identifier": "Plane3D"}}, "name": {"identifier": "XY_PLANE"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "z"}}]}}], "label": {"scope": {"name": {"identifier": "Plane3D"}}, "name": {"identifier": "XZ_PLANE"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "z"}}]}}]}], "selector": {"name": {"identifier": "facingPlane"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "facingPlane"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Mathematics"}, {"IdentifierName": "Plane"}]}, {"IdentifierName": "XY"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Mathematics"}, {"IdentifierName": "Plane"}]}, {"IdentifierName": "XZ"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Z"}]}]}]}]}]}]}, {"SwitchSection": [{"DefaultSwitchLabel": "default:"}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Z"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"name": {"identifier": "indexBuilt"}}}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "events"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getInsertEvent"}}, "name": {"identifier": "setDeleteEventIndex"}, "arguments": [{"name": {"identifier": "i"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isDelete"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "indexBuilt"}}, "value": {"value": "true"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "_indexBuilt"}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsDelete"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "InsertEvent"}]}, {"IdentifierName": "DeleteEventIndex"}]}, {"IdentifierName": "i"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_indexBuilt"}, {"TrueLiteralExpression": "true"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "factory"}}, "value": {"scope": {"name": {"identifier": "lineString"}}, "name": {"identifier": "getFactory"}}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "factory"}}}}, {"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addEdge"}, "arguments": [{"name": {"identifier": "lineString"}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "lineCount"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_factory"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_factory"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "lineString"}, {"IdentifierName": "Factory"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "AddEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineString"}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_lineCount"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "index"}}, "left": {"scope": {"name": {"identifier": "args"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "args"}}}}}, {"expression": {"type": {"name": {"identifier": "Integer"}}, "expression": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "args"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "args"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "index"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"CastExpression": [{"PredefinedType": "int"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"name": {"identifier": "circle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometricShapeFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "circle"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gNorm"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "clone"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gNorm"}}, "name": {"identifier": "normalize"}}}, {"expression": {"name": {"identifier": "gNorm"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gNorm"}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "gNorm"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "updateIM"}, "arguments": [{"name": {"identifier": "label"}}, {"name": {"identifier": "im"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "UpdateIM"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Label"}]}, {"Argument": [{"IdentifierName": "im"}]}]}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "clone"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {}, "name": {"identifier": "clone"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "clone"}}, "name": {"identifier": "envelope"}}, "value": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"scope": {"name": {"identifier": "clone"}}, "name": {"identifier": "envelope"}}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"scope": {"name": {"identifier": "clone"}}, "name": {"identifier": "envelope"}}}}, {"expression": {"name": {"identifier": "clone"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}, {"expression": {}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "CloneNotSupportedException"}}, "name": {"identifier": "e"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Geometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"InvocationExpression": [{"IdentifierName": "MemberwiseClone"}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "clone"}, {"IdentifierName": "_envelope"}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "clone"}, {"IdentifierName": "_envelope"}]}, {"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "clone"}, {"IdentifierName": "_envelope"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "clone"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "base"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"scope": {"name": {"identifier": "circle"}}, "name": {"identifier": "getBoundary"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "_origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "circle"}, {"IdentifierName": "Boundary"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "distance"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "IsLeaves"}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_itemDistance"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_boundable1"}]}, {"Argument": [{"IdentifierName": "_boundable2"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_boundable1"}, {"IdentifierName": "Bounds"}]}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_boundable2"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "inputStr"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "subLine"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "subLineStr"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"name": {"identifier": "indicesOfThenExtract"}, "arguments": [{"name": {"identifier": "input"}}, {"name": {"identifier": "subLine"}}]}}]}}, {"expression": {"name": {"identifier": "checkExpected"}, "arguments": [{"name": {"identifier": "result"}}, {"name": {"identifier": "subLineStr"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputStr"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subLineStr"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IndicesOfThenExtract"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}, {"Argument": [{"IdentifierName": "subLine"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckExpected"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}, {"Argument": [{"IdentifierName": "subLineStr"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_pt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "internal"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "external"}}]}}]}}, {"expression": {"name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "internal"}}]}}, {"expression": {"name": {"identifier": "internal"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cexternal"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "MakePrecise"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cinternal"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "cinternal"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "insertEvent"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "arguments": [{"scope": {"name": {"identifier": "sweepInt"}}, "name": {"identifier": "getMin"}}, {}, {"name": {"identifier": "sweepInt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "insertEvent"}}]}}, {"expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "arguments": [{"scope": {"name": {"identifier": "sweepInt"}}, "name": {"identifier": "getMax"}}, {"name": {"identifier": "insertEvent"}}, {"name": {"identifier": "sweepInt"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineEvent"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sweepInt"}, {"IdentifierName": "Min"}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"IdentifierName": "sweepInt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "insertEvent"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineEvent"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sweepInt"}, {"IdentifierName": "Max"}]}]}, {"Argument": [{"IdentifierName": "insertEvent"}]}, {"Argument": [{"IdentifierName": "sweepInt"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "n"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferBuilder"}}, "name": {"identifier": "bufBuilder"}, "initializer": {"type": {"name": {"identifier": "BufferBuilder"}}, "arguments": [{"name": {"identifier": "bufParams"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "resultGeometry"}}, "value": {"scope": {"name": {"identifier": "bufBuilder"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "argGeom"}}, {"name": {"identifier": "distance"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "saveException"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferBuilder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_bufParams"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_resultGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufBuilder"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argGeom"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_saveException"}, {"IdentifierName": "ex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intPts"}, "initializer": {"scope": {"name": {"identifier": "FastNodingValidator"}}, "name": {"identifier": "computeIntersections"}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{}]}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "toCoordinateArray"}, "arguments": [{"name": {"identifier": "intPts"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FastNodingValidator"}, {"IdentifierName": "ComputeIntersections"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"NullLiteralExpression": "null"}]}]}]}]}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intPts"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "holes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "ring"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "holeER"}, {"IdentifierName": "Shell"}]}, {"ThisExpression": "this"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "holeER"}, {"IdentifierName": "Ring"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_holes"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_holes"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILinearRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_holes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hole"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "graphNode"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "newNode"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addNode"}, "arguments": [{"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "newNode"}}, "name": {"identifier": "setLabel"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"scope": {"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"index": {"name": {"identifier": "argIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getNodeIterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}, {"IdentifierName": "GetNodeEnumerator"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "Current"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "newNode"}, {"IdentifierName": "SetLabel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "segVertices"}}, "name": {"identifier": "size"}}, "left": {"scope": {"name": {"identifier": "initialVertices"}}, "name": {"identifier": "size"}}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "index"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "Vertex"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "index"}}}, "name": {"name": {"identifier": "pts"}}}, "value": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getCoordinate"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "initialVertices"}}, "name": {"identifier": "iterator"}}}]}]}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "Vertex"}}, "expression": {"scope": {"name": {"identifier": "i2"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "index"}}}, "name": {"name": {"identifier": "pts"}}}, "value": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getCoordinate"}}}}]}, "compare": {"scope": {"name": {"identifier": "i2"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i2"}, "initializer": {"scope": {"name": {"identifier": "segVertices"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_initialVertices"}, {"IdentifierName": "Count"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_segVertices"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Vertex"}, {"IdentifierName": "_initialVertices"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "index"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Vertex"}, {"IdentifierName": "_segVertices"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "index"}]}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "other"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IsExpression": [{"IdentifierName": "other"}, {"IdentifierName": "ILineString"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"thenStmt": {"expression": {"scope": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}}}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {}, "left": {"index": {"value": "0"}, "name": {"name": {"identifier": "minClearancePts"}}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "minClearancePts"}}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "minClearancePts"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "_minClearancePts"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minClearancePts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_minClearancePts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "point"}, "initializer": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "other"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "compare"}, "arguments": [{"scope": {}, "name": {"identifier": "coordinates"}}, {"scope": {"name": {"identifier": "point"}}, "name": {"identifier": "coordinates"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comparer"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "CoordinateSequence"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"IdentifierName": "other"}]}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "DIFFERENCE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Difference"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts0"}, "initializer": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts1"}, "initializer": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "processIntersections"}, "arguments": [{"name": {"identifier": "e0"}}, {"name": {"identifier": "i0"}}, {"name": {"identifier": "e1"}}, {"name": {"identifier": "i1"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i1"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i1"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i1"}}}]}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts0"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i0"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i0"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i0"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i0"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts0"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i0"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i1"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i1"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentIntersector"}, {"IdentifierName": "ProcessIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e0"}]}, {"Argument": [{"IdentifierName": "i0"}]}, {"Argument": [{"IdentifierName": "e1"}]}, {"Argument": [{"IdentifierName": "i1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentIntersector"}}, "name": {"identifier": "si"}, "initializer": {"type": {"name": {"identifier": "SegmentIntersector"}}, "arguments": [{"name": {"identifier": "li"}}, {"value": "true"}, {"value": "false"}]}}]}}, {"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "setIsDoneIfProperInt"}, "arguments": [{"name": {"identifier": "isDoneIfProperInt"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "EdgeSetIntersector"}}, "name": {"identifier": "esi"}, "initializer": {"name": {"identifier": "createEdgeSetIntersector"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isRings"}, "initializer": {"operator": "OR", "right": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "parentGeom"}}}, "left": {"operator": "OR", "right": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "parentGeom"}}}, "left": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "parentGeom"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "computeAllSegments"}, "initializer": {"operator": "OR", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isRings"}}}, "left": {"name": {"identifier": "computeRingSelfNodes"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "esi"}}, "name": {"identifier": "computeIntersections"}, "arguments": [{"name": {"identifier": "edges"}}, {"name": {"identifier": "si"}}, {"name": {"identifier": "computeAllSegments"}}]}}, {"expression": {"name": {"identifier": "addSelfIntersectionNodes"}, "arguments": [{"name": {"identifier": "argIndex"}}]}}, {"expression": {"name": {"identifier": "si"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SegmentIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentIntersector"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "IsDoneIfProperInt"}]}, {"IdentifierName": "isDoneIfProperInt"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeSetIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateEdgeSetIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"IsExpression": [{"IdentifierName": "_parentGeom"}, {"IdentifierName": "ILinearRing"}]}, {"IsExpression": [{"IdentifierName": "_parentGeom"}, {"IdentifierName": "IPolygon"}]}]}, {"IsExpression": [{"IdentifierName": "_parentGeom"}, {"IdentifierName": "IMultiPolygon"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalOrExpression": [{"IdentifierName": "computeRingSelfNodes"}, {"LogicalNotExpression": [{"IdentifierName": "isRings"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "esi"}, {"IdentifierName": "ComputeIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Edges"}]}, {"Argument": [{"IdentifierName": "si"}]}, {"Argument": [{"IdentifierName": "computeAllSegments"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddSelfIntersectionNodes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argIndex"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "si"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeSequence"}}}, {"expression": {"name": {"identifier": "isSequenceable"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeSequence"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_isSequenceable"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"name": {"identifier": "scale"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "round"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "scale"}}, "left": {"name": {"identifier": "x"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Round"}]}, {"ArgumentList": [{"Argument": [{"MultiplyExpression": [{"IdentifierName": "x"}, {"IdentifierName": "scale"}]}]}]}]}, {"IdentifierName": "scale"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SineStarFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "SineStarFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setArmLengthRatio"}, "arguments": [{"value": "0.1"}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumArms"}, "arguments": [{"value": "20"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createSineStar"}}}]}}, {"expression": {"name": {"identifier": "poly"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SineStarFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SineStarFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "ArmLengthRatio"}]}, {"NumericLiteralExpression": "0.1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumArms"}]}, {"NumericLiteralExpression": "20"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateSineStar"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "poly"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineDissolver"}}, "name": {"identifier": "d"}, "initializer": {"type": {"name": {"identifier": "LineDissolver"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "d"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "g"}}]}}, {"expression": {"scope": {"name": {"identifier": "d"}}, "name": {"identifier": "getResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineDissolver"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineDissolver"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "d"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "d"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "TopologyPreservingSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyPreservingSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "4"}}, "condition": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"name": {"identifier": "geom"}}}}, {"thenStmt": {"expression": {"value": "2"}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "LinearRing"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "4"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "LineString"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "2"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Vector3D"}}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Vector3D"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "delAngle"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "delAngle"}}, "value": {"operator": "MINUS", "right": {"name": {"identifier": "ang1"}}, "left": {"name": {"identifier": "ang2"}}}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "delAngle"}}, "value": {"operator": "MINUS", "right": {"name": {"identifier": "ang2"}}, "left": {"name": {"identifier": "ang1"}}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "ang2"}}, "left": {"name": {"identifier": "ang1"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "delAngle"}}, "value": {"operator": "MINUS", "right": {"name": {"identifier": "delAngle"}}, "left": {"inner": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"value": "2"}}}}}}]}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"name": {"identifier": "delAngle"}}}}, {"expression": {"name": {"identifier": "delAngle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": "delAngle"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "ang1"}, {"IdentifierName": "ang2"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "delAngle"}, {"SubtractExpression": [{"IdentifierName": "ang2"}, {"IdentifierName": "ang1"}]}]}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "delAngle"}, {"SubtractExpression": [{"IdentifierName": "ang1"}, {"IdentifierName": "ang2"}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "delAngle"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "delAngle"}, {"SubtractExpression": [{"ParenthesizedExpression": [{"MultiplyExpression": [{"NumericLiteralExpression": "2"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"IdentifierName": "delAngle"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "delAngle"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "DD"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "hi"}}, "left": {"name": {"identifier": "hi"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "hi"}}, "left": {"name": {"identifier": "hi"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "lo"}}, "left": {"name": {"identifier": "lo"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "lo"}}, "left": {"name": {"identifier": "lo"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "o"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_hi"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_hi"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_hi"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_hi"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_lo"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_lo"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_lo"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_lo"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "tolerance"}}}}, {"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "b"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "tolerance"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}, {"IdentifierName": "tolerance"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line0"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "lines0"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line1"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "lines1"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "j"}}]}}}]}}, {"expression": {"name": {"identifier": "computeMinDistance"}, "arguments": [{"name": {"identifier": "line0"}}, {"name": {"identifier": "line1"}}, {"name": {"identifier": "locGeom"}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "terminateDistance"}}, "left": {"name": {"identifier": "minDistance"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "lines1"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "lines0"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines0"}, {"Block": [{"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines1"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line0"}]}, {"Argument": [{"IdentifierName": "line1"}]}, {"Argument": [{"IdentifierName": "locGeom"}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "_terminateDistance"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "shearInstance"}, "arguments": [{"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "10"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "10"}, {"value": "30"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ShearInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkPolygonal"}}}, {"thenStmt": {"expression": {"name": {"identifier": "isValid"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkExpectedEmpty"}}}, {"thenStmt": {"expression": {"name": {"identifier": "isValid"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkEnvelope"}}}, {"thenStmt": {"expression": {"name": {"identifier": "isValid"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkArea"}}}, {"thenStmt": {"expression": {"name": {"identifier": "isValid"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "checkDistance"}}}, {"expression": {"name": {"identifier": "isValid"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckPolygonal"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": [{"IdentifierName": "_isValid"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckExpectedEmpty"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": [{"IdentifierName": "_isValid"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEnvelope"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": [{"IdentifierName": "_isValid"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckArea"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isValid"}]}, {"ReturnStatement": [{"IdentifierName": "_isValid"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDistance"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_isValid"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "linePrefix"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "linePrefix"}}}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"scope": {"name": {"identifier": "StringUtil"}}, "name": {"identifier": "spaces"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "level"}}, "left": {"name": {"identifier": "INDENT_SIZE"}}}]}]}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"name": {"identifier": "text"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "LinePrefix"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "LinePrefix"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "StringOfChar"}]}, {"ArgumentList": [{"Argument": [{"CharacterLiteralExpression": "' '"}]}, {"Argument": [{"MultiplyExpression": [{"IdentifierName": "IndentSize"}, {"IdentifierName": "level"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "text"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "compare0"}, "initializer": {"scope": {"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p0"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p0"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "compare0"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "compare0"}}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "seg0"}}, "name": {"identifier": "p1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P0"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "compare0"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"IdentifierName": "compare0"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg0"}, {"IdentifierName": "P1"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "P1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "segIndex"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segIndex"}}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "addIntersection"}, "arguments": [{"name": {"identifier": "getCoordinate"}}, {"name": {"identifier": "segIndex"}}]}}, {"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "segIndex"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "segIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "Intersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "AddIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Coordinate"}]}, {"Argument": [{"IdentifierName": "segIndex"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addEndpoints"}}}, {"expression": {"name": {"identifier": "addCollapsedNodes"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "eiPrev"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "newEdge"}, "initializer": {"name": {"identifier": "createSplitEdge"}, "arguments": [{"name": {"identifier": "eiPrev"}}, {"name": {"identifier": "ei"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "edgeList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "newEdge"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eiPrev"}}, "value": {"name": {"identifier": "ei"}}}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddEndpoints"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddCollapsedNodes"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEnumerator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ie"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSplitEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eiPrev"}]}, {"Argument": [{"IdentifierName": "ei"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edgeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newEdge"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eiPrev"}, {"IdentifierName": "ei"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "expression": {"scope": {"scope": {"name": {"identifier": "getEdge"}, "arguments": [{"name": {"identifier": "edgeIndex"}}]}, "name": {"identifier": "sym"}}, "name": {"identifier": "getData"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"CastExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edgeIndex"}]}]}]}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "Data"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "ei0"}}, "name": {"identifier": "coord"}}, "name": {"identifier": "equals2D"}, "arguments": [{"scope": {"name": {"identifier": "ei1"}}, "name": {"identifier": "coord"}}]}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "numVerticesBetween"}, "initializer": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "ei0"}}, "name": {"identifier": "segmentIndex"}}, "left": {"scope": {"name": {"identifier": "ei1"}}, "name": {"identifier": "segmentIndex"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "POSTFIX_DECREMENT", "expression": {"name": {"identifier": "numVerticesBetween"}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "ei1"}}, "name": {"identifier": "isInterior"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "collapsedVertexIndex"}}}, "value": {"operator": "PLUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ei0"}}, "name": {"identifier": "segmentIndex"}}}}}, {"expression": {"value": "true"}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"name": {"identifier": "numVerticesBetween"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei0"}, {"IdentifierName": "Coord"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei1"}, {"IdentifierName": "Coord"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei1"}, {"IdentifierName": "SegmentIndex"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ei0"}, {"IdentifierName": "SegmentIndex"}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei1"}, {"IdentifierName": "IsInterior"}]}]}, {"ExpressionStatement": [{"PostDecrementExpression": [{"IdentifierName": "numVerticesBetween"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "numVerticesBetween"}, {"NumericLiteralExpression": "1"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "collapsedVertexIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei0"}, {"IdentifierName": "SegmentIndex"}]}, {"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"name": {"identifier": "geomA"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geom"}}, "value": {"scope": {"scope": {"name": {"identifier": "geomA"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "geomA"}}, {"name": {"identifier": "geomB"}}]}}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "geomB"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometrySnapRounder"}}, "name": {"identifier": "gsr"}, "initializer": {"type": {"name": {"identifier": "GeometrySnapRounder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snapped"}, "initializer": {"scope": {"name": {"identifier": "gsr"}}, "name": {"identifier": "execute"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "snapped"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "geomA"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "geomB"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomA"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"IdentifierName": "geomA"}, {"IdentifierName": "geomB"}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometrySnapRounder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometrySnapRounder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsr"}, {"IdentifierName": "Execute"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapped"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}, {"scope": {"name": {"identifier": "precModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}]}]}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}, {"scope": {"name": {"identifier": "precModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_precModel"}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_precModel"}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nseg"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}}]}}, {"expression": {"operator": "OR", "right": {"inner": {"operator": "AND", "right": {"operator": "GREATER_EQUALS", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segmentFraction"}}}, "left": {"operator": "EQUALS", "right": {"name": {"identifier": "nseg"}}, "left": {"name": {"identifier": "segmentIndex"}}}}}, "left": {"operator": "GREATER_EQUALS", "right": {"name": {"identifier": "nseg"}}, "left": {"name": {"identifier": "segmentIndex"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"LogicalOrExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentIndex"}, {"IdentifierName": "nseg"}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_segmentIndex"}, {"IdentifierName": "nseg"}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "INTERSECTION"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Intersection"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "ring"}, "initializer": {"name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"scope": {"name": {"identifier": "PointLocation"}}, "name": {"identifier": "isInRing"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "ring"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "IsPointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "rawGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "rawGeom"}}}]}, "condition": {"type": {"name": {"identifier": "MultiPolygon"}}, "expression": {"name": {"identifier": "parent"}}}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "rawGeom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "parent"}, {"IdentifierName": "IMultiPolygon"}]}, {"ReturnStatement": [{"IdentifierName": "rawGeom"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "rawGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEquivalentClass"}, "arguments": [{"name": {"identifier": "other"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "otherLineString"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "other"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"scope": {"name": {"identifier": "otherLineString"}}, "name": {"identifier": "points"}}, "name": {"identifier": "size"}}, "left": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "equal"}, "arguments": [{"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}, {"scope": {"scope": {"name": {"identifier": "otherLineString"}}, "name": {"identifier": "points"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "i"}}]}, {"name": {"identifier": "tolerance"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsEquivalentClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "other"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Count"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "otherLineString"}, {"IdentifierName": "NumPoints"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "Equal"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_points"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "otherLineString"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "clear"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Vertex"}}, "name": {"identifier": "v"}, "initializer": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "triEdges"}}}, "name": {"identifier": "orig"}}}]}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getCoordinate"}}]}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "closeRing"}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"thenStmt": {"statements": [{}]}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "4"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"name": {"identifier": "triCoords"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "size"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Clear"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "triEdges"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "CloseRing"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "4"}]}, {"Block": [{"ReturnStatement": "return;"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triCoords"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "index"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "testPt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "extractPoint"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "offsetDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LengthIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "snapper0"}, "initializer": {"type": {"name": {"identifier": "GeometrySnapper"}}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snapGeom"}, "initializer": {"scope": {"name": {"identifier": "snapper0"}}, "name": {"identifier": "snapTo"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "snapTolerance"}}]}}]}}, {"expression": {"name": {"identifier": "snapGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometrySnapper"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapper0"}, {"IdentifierName": "SnapTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_snapTolerance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "graphNode"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeIt"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "newNode"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "addNode"}, "arguments": [{"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getCoordinate"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "newNode"}}, "name": {"identifier": "setLabel"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"scope": {"scope": {"name": {"identifier": "graphNode"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "nodeIt"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeIt"}, "initializer": {"scope": {"name": {"identifier": "geomGraph"}}, "name": {"identifier": "getNodeIterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geomGraph"}, {"IdentifierName": "Nodes"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "AddNode"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "newNode"}, {"IdentifierName": "SetLabel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graphNode"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"scope": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "p1"}}, "name": {"identifier": "x"}}, "left": {"scope": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "p0"}}, "name": {"identifier": "x"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "upwardSeg"}, {"IdentifierName": "P0"}]}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "upwardSeg"}, {"IdentifierName": "P1"}]}, {"IdentifierName": "X"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e0"}, "initializer": {"name": {"identifier": "createEdge"}, "arguments": [{"name": {"identifier": "p0"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e1"}, "initializer": {"name": {"identifier": "createEdge"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "init"}, "arguments": [{"name": {"identifier": "e0"}}, {"name": {"identifier": "e1"}}]}}, {"expression": {"name": {"identifier": "e0"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "HalfEdge"}, {"IdentifierName": "Init"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e0"}]}, {"Argument": [{"IdentifierName": "e1"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e0"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "writer"}, "initializer": {"type": {"name": {"identifier": "WKTWriter"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "writer"}}, "name": {"identifier": "write"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "WKTWriter"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "writer"}, {"IdentifierName": "Write"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "resultSegs"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "seg"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_resultSegs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "inputIndex"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "TaggedLineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "taggedLines"}}, "name": {"identifier": "iterator"}}}]}]}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineStringSimplifier"}}, "name": {"identifier": "tlss"}, "initializer": {"type": {"name": {"identifier": "TaggedLineStringSimplifier"}}, "arguments": [{"name": {"identifier": "inputIndex"}}, {"name": {"identifier": "outputIndex"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "tlss"}}, "name": {"identifier": "setDistanceTolerance"}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, {"expression": {"scope": {"name": {"identifier": "tlss"}}, "name": {"identifier": "simplify"}, "arguments": [{"type": {"name": {"identifier": "TaggedLineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "taggedLines"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "TaggedLineString"}, {"IdentifierName": "taggedLines"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputIndex"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "taggedLineString"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "TaggedLineString"}, {"IdentifierName": "taggedLines"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TaggedLineStringSimplifier"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TaggedLineStringSimplifier"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputIndex"}]}, {"Argument": [{"IdentifierName": "_outputIndex"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tlss"}, {"IdentifierName": "DistanceTolerance"}]}, {"IdentifierName": "DistanceTolerance"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tlss"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "taggedLineString"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"type": {"name": {"identifier": "PointHandler"}}}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POINT"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "PointHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POINTZ"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POINTZ"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "PointHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POINTM"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POINTM"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "PolygonHandler"}}}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POLYGON"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "PolygonHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POLYGONM"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POLYGONM"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "PolygonHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POLYGONZ"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "POLYGONZ"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiLineHandler"}}}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "ARC"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiLineHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "ARCM"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "ARCM"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiLineHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "ARCZ"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "ARCZ"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiPointHandler"}}}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "MULTIPOINT"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiPointHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "MULTIPOINTM"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "MULTIPOINTM"}}}, {"statements": [{"expression": {"type": {"name": {"identifier": "MultiPointHandler"}}, "arguments": [{"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "MULTIPOINTZ"}}]}}], "label": {"scope": {"name": {"identifier": "Shapefile"}}, "name": {"identifier": "MULTIPOINTZ"}}}], "selector": {"name": {"identifier": "type"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"IdentifierName": "type"}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "Point"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "PointM"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "PointZM"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PointHandler"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "type"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "Polygon"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "PolygonM"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "PolygonZM"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "PolygonHandler"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "type"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "LineString"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "LineStringM"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "LineStringZM"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "MultiLineHandler"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "type"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "MultiPoint"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "MultiPointM"}]}]}, {"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "MultiPointZM"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "MultiPointHandler"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "type"}]}]}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ShapeGeometryType"}, {"IdentifierName": "NullShape"}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "NullShapeHandler"}, {"ArgumentList": "()"}]}]}]}, {"SwitchSection": [{"DefaultSwitchLabel": "default:"}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "clone"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}, "expression": {"scope": {}, "name": {"identifier": "clone"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "clone"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "i"}}, {"scope": {"inner": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}, "name": {"identifier": "clone"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "clone"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CoordinateList"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"ThisExpression": "this"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "copy"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "copy"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "vertexMap"}}, "name": {"identifier": "values"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vertexMap"}, {"IdentifierName": "Values"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "DIVIDE", "right": {"value": "180.0"}, "left": {"inner": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"name": {"identifier": "angleDegrees"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ParenthesizedExpression": [{"MultiplyExpression": [{"IdentifierName": "angleDegrees"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"NumericLiteralExpression": "180.0"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "e"}}, "value": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "prev"}}}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "e"}}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "degree"}}}}, {"expression": {"name": {"identifier": "e"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ThisExpression": "this"}]}]}]}]}, {"WhileStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Degree"}]}, {"ArgumentList": "()"}]}, {"NumericLiteralExpression": "2"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "e"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Prev"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "e"}, {"ThisExpression": "this"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Union"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "x1"}, "initializer": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "dx1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "y1"}, "initializer": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "dy1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "x2"}, "initializer": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "dx2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "y2"}, "initializer": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "dy2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DD"}}, "name": {"identifier": "det"}, "initializer": {"scope": {"scope": {"name": {"identifier": "x1"}}, "name": {"identifier": "multiply"}, "arguments": [{"name": {"identifier": "y2"}}]}, "name": {"identifier": "selfSubtract"}, "arguments": [{"scope": {"name": {"identifier": "y1"}}, "name": {"identifier": "multiply"}, "arguments": [{"name": {"identifier": "x2"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "det"}}, "name": {"identifier": "signum"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DD"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x1"}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "y2"}]}]}]}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "y1"}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x2"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "det"}, {"IdentifierName": "IsZero"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "det"}, {"IdentifierName": "IsNegative"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LessThanOrEqualExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "tolerance"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isInTolerance"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "matchNode"}, {"NullLiteralExpression": "null"}]}, {"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "matchDist"}]}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"NotEqualsExpression": [{"IdentifierName": "matchNode"}, {"NullLiteralExpression": "null"}]}, {"EqualsExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "matchDist"}]}]}, {"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "matchNode"}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "update"}, {"TrueLiteralExpression": "true"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "update"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "matchNode"}, {"IdentifierName": "node"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "matchDist"}, {"IdentifierName": "dist"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isIn"}}, "value": {"value": "true"}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "numBoundaries"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "left": {"name": {"identifier": "loc"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isIn"}, {"TrueLiteralExpression": "true"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_numBoundaries"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "snapGeom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "snapper0"}, "initializer": {"type": {"name": {"identifier": "GeometrySnapper"}}, "arguments": [{"name": {"identifier": "g0"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "snapGeom"}}}, "value": {"scope": {"name": {"identifier": "snapper0"}}, "name": {"identifier": "snapTo"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "snapTolerance"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "snapper1"}, "initializer": {"type": {"name": {"identifier": "GeometrySnapper"}}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "snapGeom"}}}, "value": {"scope": {"name": {"identifier": "snapper1"}}, "name": {"identifier": "snapTo"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "snapGeom"}}}, {"name": {"identifier": "snapTolerance"}}]}}}, {"expression": {"name": {"identifier": "snapGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometrySnapper"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "snapGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapper0"}, {"IdentifierName": "SnapTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "snapTolerance"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometrySnapper"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "snapGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapper1"}, {"IdentifierName": "SnapTo"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "snapGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "snapTolerance"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indicesOf"}, "arguments": [{"name": {"identifier": "subLine"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "extractLine"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "loc"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "loc"}}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LengthIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndicesOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "subLine"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractLine"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "loc"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "loc"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, "left": {"name": {"identifier": "location"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "location"}}}}, {"expression": {"name": {"identifier": "NULL_VALUE"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_location"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_location"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"IdentifierName": "@null"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "baseGeom"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_baseGeom"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xAbs"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "x"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xLog10"}, "initializer": {"operator": "DIVIDE", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"value": "10"}]}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "log"}, "arguments": [{"name": {"identifier": "xAbs"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "xMag"}, "initializer": {"type": {"type": "INT"}, "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"name": {"identifier": "xLog10"}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xApprox"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "pow"}, "arguments": [{"value": "10"}, {"name": {"identifier": "xMag"}}]}}]}}, {"thenStmt": {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "xMag"}}, "value": {"value": "1"}}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "xAbs"}}, "left": {"operator": "MULTIPLY", "right": {"value": "10"}, "left": {"name": {"identifier": "xApprox"}}}}}, {"expression": {"name": {"identifier": "xMag"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xAbs"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Log"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "int"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xLog10"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Pow"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"IdentifierName": "xMag"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"MultiplyExpression": [{"IdentifierName": "xApprox"}, {"NumericLiteralExpression": "10"}]}, {"IdentifierName": "xAbs"}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"IdentifierName": "xMag"}, {"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "xMag"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getBoundary"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Boundary"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isStart"}}, "value": {"value": "true"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isStart"}, {"TrueLiteralExpression": "true"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "copy"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Copy"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "label"}}}}, {"expression": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "label"}}, "left": {"name": {"identifier": "label"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_label"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"EqualsExpression": [{"IdentifierName": "_label"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "_label"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equalsGeometry"}}, {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "b"}}]}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equalsObject"}}, {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equals"}, "arguments": [{"type": {"name": {"identifier": "Object"}}, "expression": {"name": {"identifier": "b"}}}]}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equalsExact"}}, {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "b"}}]}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "equalsHash"}}, {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "hashCode"}}, "left": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "hashCode"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equalsGeometry"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equalsObject"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Object"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equalsExact"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "equalsHash"}]}, {"Argument": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "GetHashCode"}]}, {"ArgumentList": "()"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "GetHashCode"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "fontGlyph"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "text"}}, {"type": {"name": {"identifier": "Font"}}, "arguments": [{"scope": {"name": {"identifier": "FontGlyphReader"}}, "name": {"identifier": "FONT_MONOSPACED"}}, {"scope": {"name": {"identifier": "Font"}}, "name": {"identifier": "PLAIN"}}, {"name": {"identifier": "DEFAULT_POINTSIZE"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "FontGlyph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "text"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Font"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontGlyphReader"}, {"IdentifierName": "FontMonospaced"}]}]}, {"Argument": [{"IdentifierName": "DEFAULT_POINTSIZE"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontStyle"}, {"IdentifierName": "Regular"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lineSegStr"}, "initializer": {"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "segsIntersect"}, "initializer": {"scope": {"scope": {"name": {"identifier": "prepLine"}}, "name": {"identifier": "getIntersectionFinder"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "lineSegStr"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "segsIntersect"}}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "lineSegStr"}}, "name": {"identifier": "size"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getDimension"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "prepLine"}}, "name": {"identifier": "isAnyTargetComponentInTest"}, "arguments": [{"name": {"identifier": "geom"}}]}, "left": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getDimension"}}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isAnyTestPointInTarget"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getDimension"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineSegStr"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepLine"}, {"IdentifierName": "IntersectionFinder"}]}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineSegStr"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "segsIntersect"}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Dimension"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Curve"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Dimension"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepLine"}, {"IdentifierName": "IsAnyTargetComponentInTest"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Dimension"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Point"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsAnyTestPointInTarget"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getFarthestPoints"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumBoundingCircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "GetFarthestPoints"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "STRtreeNode"}}, "arguments": [{"name": {"identifier": "level"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AnonymousAbstractNodeImpl"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "opCode"}, "initializer": {"name": {"identifier": "overlayOpCode"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "invoke"}, "arguments": [{"name": {"identifier": "opName"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "opCode"}}}}, {"expression": {"name": {"identifier": "invokeValidatedOverlayOp"}, "arguments": [{"name": {"identifier": "opCode"}}, {"name": {"identifier": "geometry"}}, {"name": {"identifier": "args"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "OverlayOpCode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "opCode"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "Invoke"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "InvokeValidatedOverlayOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opCode"}]}, {"Argument": [{"IdentifierName": "geometry"}]}, {"Argument": [{"IdentifierName": "args"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordRef"}}, "value": {}}}, {"expression": {"name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"value": "1"}, {"name": {"identifier": "value"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordRef"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "value"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordRef"}}, "value": {}}}, {"expression": {"name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "index"}}, {"value": "0"}, {"name": {"identifier": "value"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordRef"}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetOrdinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"IdentifierName": "value"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isSimple"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsSimple"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "100.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "10000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "100000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1000000.0"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1e8"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1e10"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1e14"}, {"value": "1.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "1e14"}, {"value": "291.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "5e14"}, {"value": "291.0"}]}}, {"expression": {"name": {"identifier": "checkBinomialSquare"}, "arguments": [{"value": "5e14"}, {"value": "345291.0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1000000.0"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e8"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e10"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e14"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1e14"}]}, {"Argument": [{"NumericLiteralExpression": "291.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5e14"}]}, {"Argument": [{"NumericLiteralExpression": "291.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckBinomialSquare"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5e14"}]}, {"Argument": [{"NumericLiteralExpression": "345291.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "comp"}}, "name": {"identifier": "compare"}, "arguments": [{"scope": {}, "name": {"identifier": "points"}}, {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "points"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "ILineString"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "LineString"}, {"IdentifierName": "o"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "comp"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_points"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"name": {"identifier": "checkValid"}, "arguments": [{"name": {"identifier": "g"}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "Geometries"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckValid"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxCount"}, "initializer": {"name": {"identifier": "MAX_ITER"}}}]}}, {"expression": {"name": {"identifier": "doAlternatingIteratedBuffer"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "1"}, {"name": {"identifier": "maxCount"}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"value": "FAILED!"}]}}]}, "condition": {"name": {"identifier": "testFailed"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSampleGeometry"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Test"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "randomPointInCircle"}, "arguments": [{"name": {"identifier": "orgX"}}, {"name": {"identifier": "orgY"}}, {"name": {"identifier": "xLen"}}, {"name": {"identifier": "yLen"}}]}}]}, "condition": {"name": {"identifier": "isConstrainedToCircle"}}}, {"expression": {"name": {"identifier": "randomPointInGridCell"}, "arguments": [{"name": {"identifier": "orgX"}}, {"name": {"identifier": "orgY"}}, {"name": {"identifier": "xLen"}}, {"name": {"identifier": "yLen"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"IdentifierName": "_isConstrainedToCircle"}, {"InvocationExpression": [{"IdentifierName": "RandomPointInCircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orgX"}]}, {"Argument": [{"IdentifierName": "orgY"}]}, {"Argument": [{"IdentifierName": "xLen"}]}, {"Argument": [{"IdentifierName": "yLen"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "RandomPointInGridCell"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "orgX"}]}, {"Argument": [{"IdentifierName": "orgY"}]}, {"Argument": [{"IdentifierName": "xLen"}]}, {"Argument": [{"IdentifierName": "yLen"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "IllegalArgumentException"}}, "arguments": [{"value": "Line array must contain at least one vertex"}]}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minDistance"}, "initializer": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "distance"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "line"}}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"name": {"identifier": "distancePointLine"}, "arguments": [{"name": {"identifier": "p"}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "line"}}}, {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "line"}}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDistance"}}, "value": {"name": {"identifier": "dist"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "minDistance"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "X"}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "Y"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "A"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"AddExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"IdentifierName": "len2"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "r"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "A"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "r"}, {"NumericLiteralExpression": "1.0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "B"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Y"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}]}]}]}, {"MultiplyExpression": [{"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "X"}]}]}]}, {"ParenthesizedExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "B"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "A"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"IdentifierName": "len2"}]}]}]}]}]}, {"ReturnStatement": [{"MultiplyExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "s"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "len2"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "distance"}}, "value": {"name": {"identifier": "distance"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "maxCurveSegmentError"}}, "value": {"operator": "MULTIPLY", "right": {"inner": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "cos"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"name": {"identifier": "filletAngleQuantum"}}}]}, "left": {"value": "1"}}}, "left": {"name": {"identifier": "distance"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segList"}}, "value": {"type": {"name": {"identifier": "OffsetSegmentString"}}}}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "setPrecisionModel"}, "arguments": [{"name": {"identifier": "precisionModel"}}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "setMinimumVertexDistance"}, "arguments": [{"operator": "MULTIPLY", "right": {"name": {"identifier": "CURVE_VERTEX_SNAP_DISTANCE_FACTOR"}}, "left": {"name": {"identifier": "distance"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "distance"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_maxCurveSegmentError"}, {"MultiplyExpression": [{"IdentifierName": "distance"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"NumericLiteralExpression": "1"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Cos"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"IdentifierName": "_filletAngleQuantum"}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_segList"}, {"ObjectCreationExpression": [{"IdentifierName": "OffsetSegmentString"}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "_precisionModel"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "MinimumVertexDistance"}]}, {"MultiplyExpression": [{"IdentifierName": "distance"}, {"IdentifierName": "CurveVertexSnapDistanceFactor"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "5"}, {"value": "6"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "6"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "ll"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "ll"}}, "name": {"identifier": "project"}, "arguments": [{"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getCoordinate"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ll"}, {"IdentifierName": "Project"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "xStr"}, "initializer": {"scope": {"name": {"identifier": "x"}}, "name": {"identifier": "toSciNotation"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "xStr"}}, {"name": {"identifier": "expectedStr"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x"}, {"IdentifierName": "ToSciNotation"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xStr"}]}, {"Argument": [{"IdentifierName": "expectedStr"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}, "arguments": [{"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getCoordinates"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "lines"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ISegmentString"}, {"IdentifierName": "segStrings"}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "2"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lines"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "lines"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getTriangles"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetTriangles"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "intersects"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isCrosses"}, "arguments": [{"name": {"identifier": "getDimension"}}, {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsCrosses"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Dimension"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "testLine"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "checkIntersectionWithSegments"}, "arguments": [{"name": {"identifier": "testLine"}}]}}, {"thenStmt": {}, "condition": {"name": {"identifier": "hasIntersection"}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckIntersectionWithSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testLine"}]}]}]}]}, {"IfStatement": [{"IdentifierName": "Intersects"}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "scalarFun"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFunction"}}, "name": {"identifier": "fun"}, "initializer": {"type": {"name": {"identifier": "GeometryFunction"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "scalarFun"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "fun"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "hasGeometryResult"}, "arguments": [{"name": {"identifier": "fun"}}]}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "sortedFunctions"}}, "name": {"identifier": "values"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "scalarFun"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometryFunction"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_sortedFunctions"}, {"IdentifierName": "Values"}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "HasGeometryResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fun"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "scalarFun"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "fun"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "scalarFun"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDe"}}, "value": {"name": {"identifier": "de"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minIndex"}}, "value": {"name": {"identifier": "i"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minCoord"}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}}]}, "condition": {"operator": "OR", "right": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "minCoord"}}, "name": {"identifier": "x"}}, "left": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}, "name": {"identifier": "x"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "minCoord"}}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "minCoord"}, {"NullLiteralExpression": "null"}]}, {"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "minCoord"}, {"IdentifierName": "X"}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minDe"}, {"IdentifierName": "de"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minIndex"}, {"IdentifierName": "i"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minCoord"}, {"ElementAccessExpression": [{"IdentifierName": "coord"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "flip"}}}, {"expression": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "flip"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Flip"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Flip"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "g"}}}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "g"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "ring"}, "initializer": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "ring"}}, {}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IPolygon"}]}, {"ReturnStatement": [{"IdentifierName": "g"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILinearRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineSegment"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SweepLineSegment"}}, "arguments": [{"name": {"identifier": "edge"}}, {"name": {"identifier": "i"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "insertEvent"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "arguments": [{"name": {"identifier": "edgeSet"}}, {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getMinX"}}, {}]}}]}}, {"expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "insertEvent"}}]}}, {"expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "arguments": [{"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getMaxX"}}, {"name": {"identifier": "insertEvent"}}]}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edge"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineEvent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edgeSet"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "MinX"}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "insertEvent"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "SweepLineEvent"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "MaxX"}]}]}, {"Argument": [{"IdentifierName": "insertEvent"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, "value": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p3"}}, "name": {"identifier": "x"}}, "left": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "x"}}}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, "value": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p3"}}, "name": {"identifier": "y"}}, "left": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "p2"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "y"}}}}}}, {}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}, {"AddExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "X"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p3"}, {"IdentifierName": "X"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}, {"AddExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p2"}, {"IdentifierName": "Y"}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p3"}, {"IdentifierName": "Y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "add"}, "arguments": [{}]}}, {"expression": {"operator": "PLUS", "target": {"name": {"identifier": "size"}}, "value": {"value": "1"}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "hole"}, "initializer": {"name": {"identifier": "size"}}}]}}, {"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "set"}, "arguments": [{"value": "0"}, {"name": {"identifier": "x"}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "set"}, "arguments": [{"name": {"identifier": "hole"}}, {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"name": {"identifier": "hole"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "x"}}, "name": {"identifier": "compareTo"}, "arguments": [{"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2"}, "left": {"name": {"identifier": "hole"}}}]}]}}, "update": [{"operator": "DIVIDE", "target": {"name": {"identifier": "hole"}}, "value": {"value": "2"}}]}, {"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "set"}, "arguments": [{"name": {"identifier": "hole"}}, {"name": {"identifier": "x"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "T"}, {"IdentifierName": "T"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "queue"}]}, {"IdentifierName": "Enqueue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}, {"Argument": [{"IdentifierName": "x"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "VWSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "VWSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMaxVertexDistance"}, "arguments": [{"name": {"identifier": "bufferCurve"}}]}}, {"expression": {"name": {"identifier": "computeMaxMidpointDistance"}, "arguments": [{"name": {"identifier": "bufferCurve"}}]}}, {"expression": {"scope": {"name": {"identifier": "maxPtDist"}}, "name": {"identifier": "getDistance"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMaxVertexDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferCurve"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "computeMaxMidpointDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferCurve"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_maxPtDist"}, {"IdentifierName": "Distance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "ExtendedCoordinate"}}}, "name": {"identifier": "cloneCoordinates"}, "initializer": {"elementType": {"name": {"identifier": "ExtendedCoordinate"}}, "levels": [{"dimension": {"name": {"identifier": "size"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "cloneCoordinates"}}}, "value": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "copy"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"type": {"name": {"identifier": "ExtendedCoordinateSequence"}}, "arguments": [{"name": {"identifier": "cloneCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "ExtendedCoordinate"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "CopyInternal"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}, {"Argument": [{"IdentifierName": "copy"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "copy"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xp"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "m02"}}, "left": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}]}, "left": {"name": {"identifier": "m01"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}]}, "left": {"name": {"identifier": "m00"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "yp"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "m12"}}, "left": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}]}, "left": {"name": {"identifier": "m11"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}]}, "left": {"name": {"identifier": "m10"}}}}}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "0"}, {"name": {"identifier": "xp"}}]}}, {"expression": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "setOrdinate"}, "arguments": [{"name": {"identifier": "i"}}, {"value": "1"}, {"name": {"identifier": "yp"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_m00"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "_m01"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"IdentifierName": "_m02"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "_m10"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "_m11"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}, {"IdentifierName": "_m12"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"IdentifierName": "xp"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "SetOrdinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Ordinate"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "yp"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChainOverlapAction"}}, "name": {"identifier": "overlapAction"}, "initializer": {"type": {"name": {"identifier": "SegmentOverlapAction"}}, "arguments": [{"name": {"identifier": "segInt"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "queryChain"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "overlapChains"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryChain"}}, "name": {"identifier": "getEnvelope"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MonotoneChain"}}, "name": {"identifier": "testChain"}, "initializer": {"type": {"name": {"identifier": "MonotoneChain"}}, "expression": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "queryChain"}}, "name": {"identifier": "computeOverlaps"}, "arguments": [{"name": {"identifier": "testChain"}}, {"name": {"identifier": "overlapAction"}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "nOverlaps"}}}}]}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "queryChain"}}, "name": {"identifier": "getId"}}, "left": {"scope": {"name": {"identifier": "testChain"}}, "name": {"identifier": "getId"}}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "isDone"}}}]}, "compare": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "j"}, "initializer": {"scope": {"name": {"identifier": "overlapChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "monoChains"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MonotoneChainOverlapAction"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SegmentOverlapAction"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "SegmentIntersector"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "_monoChains"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "obj"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryChain"}, {"IdentifierName": "Envelope"}]}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "overlapChains"}, {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testChain"}, {"IdentifierName": "Id"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "queryChain"}, {"IdentifierName": "Id"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryChain"}, {"IdentifierName": "ComputeOverlaps"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testChain"}]}, {"Argument": [{"IdentifierName": "overlapAction"}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_nOverlaps"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentIntersector"}, {"IdentifierName": "IsDone"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "findEdge"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}, {"expression": {"name": {"identifier": "assertNotNull"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "FindEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsNotNull"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNextMin"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "NextMin"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "deList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_deList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {}}]}}, {"tryBlock": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geom"}}, "value": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}, {"expression": {"name": {"identifier": "geom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "limit"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "limit"}}, "left": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "size"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "Limit"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Count"}]}, {"IdentifierName": "Limit"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeInteracting"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "int0"}, "initializer": {"name": {"identifier": "extractElements"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "interacts0"}}, {"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "int1"}, "initializer": {"name": {"identifier": "extractElements"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "interacts1"}}, {"value": "true"}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"value": "found empty!"}]}}]}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "int1"}}, "name": {"identifier": "isEmpty"}}, "left": {"scope": {"name": {"identifier": "int0"}}, "name": {"identifier": "isEmpty"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union"}, "initializer": {"scope": {"name": {"identifier": "int0"}}, "name": {"identifier": "union"}, "arguments": [{"name": {"identifier": "int1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "disjoint0"}, "initializer": {"name": {"identifier": "extractElements"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "interacts0"}}, {"value": "false"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "disjoint1"}, "initializer": {"name": {"identifier": "extractElements"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "interacts1"}}, {"value": "false"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "overallUnion"}, "initializer": {"scope": {"name": {"identifier": "GeometryCombiner"}}, "name": {"identifier": "combine"}, "arguments": [{"name": {"identifier": "union"}}, {"name": {"identifier": "disjoint0"}}, {"name": {"identifier": "disjoint1"}}]}}]}}, {"expression": {"name": {"identifier": "overallUnion"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "UnionInteracting"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "UnionInteracting"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "uue"}, {"IdentifierName": "Union"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HoleRemover"}}, "name": {"identifier": "remover"}, "initializer": {"type": {"name": {"identifier": "HoleRemover"}}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "IsSmall"}}, "arguments": [{"name": {"identifier": "areaTolerance"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "remover"}}, "name": {"identifier": "getResult"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HoleRemover"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HoleRemover"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "IsSmall"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "areaTolerance"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "remover"}, {"IdentifierName": "GetResult"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Interval"}}, "name": {"identifier": "insertInterval"}, "initializer": {"name": {"identifier": "ensureExtent"}, "arguments": [{"name": {"identifier": "itemInterval"}}, {"name": {"identifier": "minExtent"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "insertInterval"}}, {"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Interval"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnsureExtent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "itemInterval"}]}, {"Argument": [{"IdentifierName": "_minExtent"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Remove"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "insertInterval"}]}, {"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "inCentre"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "InCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "P0"}]}, {"Argument": [{"IdentifierName": "P1"}]}, {"Argument": [{"IdentifierName": "P2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "funcs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Method"}}}, "name": {"identifier": "method"}, "initializer": {"scope": {"name": {"identifier": "functionClass"}}, "name": {"identifier": "getMethods"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "mod"}, "initializer": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "method"}}}, "name": {"identifier": "getModifiers"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "funcs"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "StaticMethodGeometryFunction"}}, "name": {"identifier": "createFunction"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "method"}}}]}]}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "Modifier"}}, "name": {"identifier": "isPublic"}, "arguments": [{"name": {"identifier": "mod"}}]}, "left": {"scope": {"name": {"identifier": "Modifier"}}, "name": {"identifier": "isStatic"}, "arguments": [{"name": {"identifier": "mod"}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "method"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "funcs"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometryFunction"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "MethodInfo"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "functionClass"}, {"IdentifierName": "GetMethods"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "method"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "method"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "IsStatic"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "method"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "IsPublic"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "funcs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "StaticMethodGeometryFunction"}, {"IdentifierName": "CreateFunction"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "method"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "funcs"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "componentIndex"}}, "left": {"name": {"identifier": "componentIndex"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "segmentFraction"}}}, "left": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"operator": "MINUS", "right": {"name": {"identifier": "segmentIndex"}}, "left": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "segmentIndex"}}}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segmentFraction"}}}, "left": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_componentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "_componentIndex"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "_segmentIndex"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "_segmentIndex"}]}, {"IdentifierName": "_segmentIndex"}]}, {"NumericLiteralExpression": "1"}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "_segmentFraction"}]}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"SubtractExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "_segmentIndex"}]}]}, {"NumericLiteralExpression": "1"}]}, {"EqualsExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "bdyNodes"}}, "value": {"elementType": {"name": {"identifier": "Collection"}}, "levels": [{"dimension": {"value": "2"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "bdyNodes"}}}, "value": {"name": {"identifier": "bdyNodes0"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "bdyNodes"}}}, "value": {"name": {"identifier": "bdyNodes1"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_bdyNodes"}, {"ArrayCreationExpression": [{"ArrayType": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_bdyNodes"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "bdyNodes0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_bdyNodes"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "bdyNodes1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "wktReader"}}, "value": {"type": {"name": {"identifier": "WKTReader"}}, "arguments": [{"type": {"name": {"identifier": "GeometryFactory"}}, "arguments": [{"name": {"identifier": "precisionModel"}}]}]}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_wktReader"}, {"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "precisionModel"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getDirEdge"}, "arguments": [{"value": "0"}]}]}}, {"expression": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getDirEdge"}, "arguments": [{"value": "1"}]}]}}, {"expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getDirEdge"}, "arguments": [{"value": "0"}]}, "name": {"identifier": "getFromNode"}}]}}, {"expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getDirEdge"}, "arguments": [{"value": "1"}]}, "name": {"identifier": "getFromNode"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dirEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "GetDirEdge"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "dirEdges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "GetDirEdge"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "GetDirEdge"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "FromNode"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "GetDirEdge"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "FromNode"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "convexHull"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "ConvexHull"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "NaN"}}, {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "NaN"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "NaN"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "NaN"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "distanceTolerance"}}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p1"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}, {"IdentifierName": "distanceTolerance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"name": {"identifier": "createArray"}, "arguments": [{"name": {"identifier": "SIZE"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "getCSFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq2"}, "initializer": {"scope": {"name": {"identifier": "getCSFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}, "arguments": [{"name": {"identifier": "seq2"}}, {"name": {"identifier": "coords"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateArray"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Size"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CsFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CsFactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "IsEqual"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq2"}]}, {"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "1"}, {"value": "0"}, {"value": "0"}, {"value": "0"}, {"value": "0"}, {"value": "5"}, {"value": "7"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "7"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "nodedSegStrings"}}, "value": {"name": {"identifier": "inputSegStrings"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "edge0"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i0"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "edge1"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i1"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "computeIntersects"}, "arguments": [{"name": {"identifier": "edge0"}}, {"name": {"identifier": "edge1"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i1"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i1"}, "initializer": {"scope": {"name": {"identifier": "inputSegStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i0"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i0"}, "initializer": {"scope": {"name": {"identifier": "inputSegStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nodedSegStrings"}, {"IdentifierName": "inputSegStrings"}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "inputSegStrings"}, {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "inputSegStrings"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeIntersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edge0"}]}, {"Argument": [{"IdentifierName": "edge1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "locations"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "ConnectedElementLocationFilter"}}, "arguments": [{"name": {"identifier": "locations"}}]}]}}, {"expression": {"name": {"identifier": "locations"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "GeometryLocation"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "ConnectedElementLocationFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "locations"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "locations"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "signedArea"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "SignedArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isContained"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "b"}}]}}]}}, {"expression": {"name": {"identifier": "isContained"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "IsEmpty"}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isContained"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "index"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "index"}}}}, {"expression": {"operator": "PLUS", "right": {"name": {"identifier": "index"}}, "left": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getLength"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "index"}, {"NumericLiteralExpression": "0.0"}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}, {"ReturnStatement": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "index"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "pt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "getPrecisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "pt"}}]}}, {"expression": {"name": {"identifier": "pt"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pt"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getNumInteriorRing"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "NumInteriorRings"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "NumInteriorRings"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "increasingDirection"}, "arguments": [{"name": {"identifier": "pts"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "IncreasingDirection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}, {"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "getAdjacentTriangleAcrossEdge"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetAdjacentTriangleAcrossEdge"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isProper"}}, "value": {"value": "false"}}}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isProper"}}, "value": {"value": "true"}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isProper"}}, "value": {"value": "false"}}}]}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p2"}}]}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "p1"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "POINT_INTERSECTION"}}}}, {}]}, "condition": {"operator": "AND", "right": {"inner": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"name": {"identifier": "p2"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "p"}}]}}}, "left": {"inner": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "p"}}]}}}}}]}, "condition": {"scope": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "p"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "NO_INTERSECTION"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsProper"}, {"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Envelope"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"ParenthesizedExpression": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}, {"NumericLiteralExpression": "0"}]}]}, {"ParenthesizedExpression": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "OrientationIndex"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}, {"NumericLiteralExpression": "0"}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsProper"}, {"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p2"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "IsProper"}, {"FalseLiteralExpression": "false"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Result"}, {"IdentifierName": "PointIntersection"}]}]}, {"ReturnStatement": "return;"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Result"}, {"IdentifierName": "NoIntersection"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "resultPolyList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "toPolygon"}, "arguments": [{"name": {"identifier": "geometryFactory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "resultPolyList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "poly"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "resultPolyList"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "shellList"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "ToPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_geometryFactory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultPolyList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "resultPolyList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModelExample"}}, "name": {"identifier": "example"}, "initializer": {"type": {"name": {"identifier": "PrecisionModelExample"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "example"}}, "name": {"identifier": "run"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PrecisionModelExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModelExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "example"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minDimension"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getHeight"}}, {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getWidth"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "snapTol"}, "initializer": {"operator": "MULTIPLY", "right": {"name": {"identifier": "SNAP_PRECISION_FACTOR"}}, "left": {"name": {"identifier": "minDimension"}}}}]}}, {"expression": {"name": {"identifier": "snapTol"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Height"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Width"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"IdentifierName": "minDimension"}, {"IdentifierName": "SnapPrexisionFactor"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapTol"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minFrac"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "segLen"}}, "left": {"name": {"identifier": "minimumLen"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "splitPt"}}, "value": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "pointAlong"}, "arguments": [{"name": {"identifier": "minFrac"}}]}}}, {}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minimumLen"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}]}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "splitPt"}}, "value": {"name": {"identifier": "pointAlongReverse"}, "arguments": [{"name": {"identifier": "seg"}}, {"name": {"identifier": "minFrac"}}]}}}, {}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minimumLen"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "splitPt"}}, "value": {"name": {"identifier": "pt"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "_minimumLen"}, {"IdentifierName": "_segLen"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_seg"}, {"IdentifierName": "P0"}]}]}]}]}, {"IdentifierName": "_minimumLen"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_splitPt"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_seg"}, {"IdentifierName": "PointAlong"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "minFrac"}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_seg"}, {"IdentifierName": "P1"}]}]}]}]}, {"IdentifierName": "_minimumLen"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_splitPt"}, {"InvocationExpression": [{"IdentifierName": "PointAlongReverse"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_seg"}]}, {"Argument": [{"IdentifierName": "minFrac"}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_splitPt"}, {"IdentifierName": "pt"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "name": {"identifier": "oca"}, "initializer": {"type": {"name": {"identifier": "OrientedCoordinateArray"}}, "arguments": [{"scope": {"name": {"identifier": "segString"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "existing"}, "initializer": {"name": {"identifier": "findMatching"}, "arguments": [{"name": {"identifier": "oca"}}, {"name": {"identifier": "segString"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "oca"}}, {"name": {"identifier": "segString"}}]}}]}, "elseStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isSameOrientation"}, "initializer": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "existing"}}, "name": {"identifier": "getCoordinates"}}, {"scope": {"name": {"identifier": "segString"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "merger"}}, "name": {"identifier": "merge"}, "arguments": [{"name": {"identifier": "existing"}}, {"name": {"identifier": "segString"}}, {"name": {"identifier": "isSameOrientation"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "merger"}}}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "existing"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "OrientedCoordinateArray"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OrientedCoordinateArray"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segString"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ISegmentString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindMatching"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "existing"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oca"}]}, {"Argument": [{"IdentifierName": "segString"}]}]}]}]}, {"ElseClause": [{"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_merger"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "existing"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segString"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_merger"}, {"IdentifierName": "Merge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "existing"}]}, {"Argument": [{"IdentifierName": "segString"}]}, {"Argument": [{"IdentifierName": "isSameOrientation"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"index": {"value": "0"}, "name": {"name": {"identifier": "inputLines"}}}}, "value": {"name": {"identifier": "p1"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"index": {"value": "0"}, "name": {"name": {"identifier": "inputLines"}}}}, "value": {"name": {"identifier": "p2"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"index": {"value": "1"}, "name": {"name": {"identifier": "inputLines"}}}}, "value": {"name": {"identifier": "p3"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"index": {"value": "1"}, "name": {"name": {"identifier": "inputLines"}}}}, "value": {"name": {"identifier": "p4"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"name": {"identifier": "computeIntersect"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "p3"}}, {"name": {"identifier": "p4"}}]}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "p1"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "p2"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "p3"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "InputLines"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "p4"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Result"}, {"InvocationExpression": [{"IdentifierName": "ComputeIntersect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "p3"}]}, {"Argument": [{"IdentifierName": "p4"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "coord"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": "res"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeMap"}, {"IdentifierName": "TryGetValue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "res"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "res"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "testSameStructure"}}}, {"expression": {"name": {"identifier": "testValid"}}}, {"expression": {"name": {"identifier": "testExpectedResult"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestSameStructure"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestValid"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestExpectedResult"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isInCircleNormalized"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "c"}}, {"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsInCircleNormalized"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "c"}]}, {"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "getGeometry"}, "arguments": [{"type": {"name": {"identifier": "GeometryFactory"}}}]}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetGeometry"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "elems"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "extractElements"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "elems"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "inputGeoms"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createGeometryCollection"}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "geomFactory"}}}}, {"expression": {}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "elems"}}, "name": {"identifier": "size"}}}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "elems"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "_inputGeoms"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ExtractElements"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "elems"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "elems"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"ConditionalExpression": [{"NotEqualsExpression": [{"IdentifierName": "_geomFactory"}, {"NullLiteralExpression": "null"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}]}]}, {"NullLiteralExpression": "null"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elems"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "position"}}, "name": {"name": {"identifier": "depth"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_depth"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"IdentifierName": "position"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "mapped"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "gr"}, "initializer": {"scope": {"name": {"identifier": "op"}}, "name": {"identifier": "map"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "mapped"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "gr"}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "gr"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "mapped"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "op"}, {"IdentifierName": "Map"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "gr"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mapped"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "gr"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "mapped"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "roughGeom"}, "initializer": {"scope": {}, "name": {"identifier": "transformMultiPolygon"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "parent"}}]}}]}}, {"expression": {"name": {"identifier": "createValidArea"}, "arguments": [{"name": {"identifier": "roughGeom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "TransformMultiPolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "parent"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateValidArea"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "roughGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "lineEdgeMap"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "line"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_lineEdgeMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkDD"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "checkShewchuk"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "true"}]}}, {"expression": {"name": {"identifier": "checkOriginalJTS"}, "arguments": [{"name": {"identifier": "pts"}}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckShewchuk"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOriginalJTS"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PreparedGeometry"}}, "name": {"identifier": "prepGeom"}, "initializer": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "prepGeom"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepGeom"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "splitSS"}, "initializer": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getNodedSubstrings"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "rescale"}, "arguments": [{"name": {"identifier": "splitSS"}}]}}, "condition": {"name": {"identifier": "isScaled"}}}, {"expression": {"name": {"identifier": "splitSS"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_noder"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isScaled"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Rescale"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "splitSS"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "splitSS"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Point"}}, "arguments": [{"name": {"identifier": "coordinates"}}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Point"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "numBits"}, "initializer": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "doubleToLongBits"}, "arguments": [{"name": {"identifier": "num"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonBits"}}, "value": {"name": {"identifier": "numBits"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonSignExp"}}, "value": {"name": {"identifier": "signExpBits"}, "arguments": [{"name": {"identifier": "commonBits"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isFirst"}}, "value": {"value": "false"}}}, {}]}, "condition": {"name": {"identifier": "isFirst"}}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "numSignExp"}, "initializer": {"name": {"identifier": "signExpBits"}, "arguments": [{"name": {"identifier": "numBits"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonBits"}}, "value": {"value": "0"}}}, {}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "commonSignExp"}}, "left": {"name": {"identifier": "numSignExp"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonMantissaBitsCount"}}, "value": {"name": {"identifier": "numCommonMostSigMantissaBits"}, "arguments": [{"name": {"identifier": "commonBits"}}, {"name": {"identifier": "numBits"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "commonBits"}}, "value": {"name": {"identifier": "zeroLowerBits"}, "arguments": [{"name": {"identifier": "commonBits"}}, {"operator": "MINUS", "right": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "commonMantissaBitsCount"}}, "left": {"value": "12"}}}, "left": {"value": "64"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BitConverter"}, {"IdentifierName": "DoubleToInt64Bits"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "num"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "_isFirst"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonBits"}, {"IdentifierName": "numBits"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonSignExp"}, {"InvocationExpression": [{"IdentifierName": "SignExpBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_commonBits"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isFirst"}, {"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": "return;"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "SignExpBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "numBits"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "numSignExp"}, {"IdentifierName": "_commonSignExp"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonBits"}, {"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": "return;"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonMantissaBitsCount"}, {"InvocationExpression": [{"IdentifierName": "NumCommonMostSigMantissaBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_commonBits"}]}, {"Argument": [{"IdentifierName": "numBits"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_commonBits"}, {"InvocationExpression": [{"IdentifierName": "ZeroLowerBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_commonBits"}]}, {"Argument": [{"SubtractExpression": [{"NumericLiteralExpression": "64"}, {"ParenthesizedExpression": [{"AddExpression": [{"NumericLiteralExpression": "12"}, {"IdentifierName": "_commonMantissaBitsCount"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "coordArrayType"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coordList"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tempList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tempList"}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "line"}}, "value": {"name": {"identifier": "line"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "linePts"}}, "value": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getParentCoordinates"}}}}, {"expression": {"name": {"identifier": "simplifySection"}, "arguments": [{"value": "0"}, {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "linePts"}}, "name": {"identifier": "length"}}}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_line"}, {"IdentifierName": "line"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_linePts"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "ParentCoordinates"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SimplifySection"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linePts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "nodedSegStrings"}}, "value": {"name": {"identifier": "inputSegmentStrings"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "noder"}}, "value": {"type": {"name": {"identifier": "MCIndexNoder"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pointSnapper"}}, "value": {"type": {"name": {"identifier": "MCIndexPointSnapper"}}, "arguments": [{"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "getIndex"}}]}}}, {"expression": {"name": {"identifier": "snapRound"}, "arguments": [{"name": {"identifier": "inputSegmentStrings"}}, {"name": {"identifier": "li"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nodedSegStrings"}, {"IdentifierName": "inputSegmentStrings"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_noder"}, {"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": "()"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_pointSnapper"}, {"ObjectCreationExpression": [{"IdentifierName": "MCIndexPointSnapper"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_noder"}, {"IdentifierName": "Index"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SnapRound"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputSegmentStrings"}]}, {"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "ringCoord"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minDiam"}, "initializer": {"value": "0.0"}}]}}, {"thenStmt": {"expression": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "bufferDistance"}}}}, "condition": {"operator": "LESS", "right": {"value": "4"}, "left": {"scope": {"name": {"identifier": "ringCoord"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {"name": {"identifier": "isTriangleErodedCompletely"}, "arguments": [{"name": {"identifier": "ringCoord"}}, {"name": {"identifier": "bufferDistance"}}]}}, "condition": {"operator": "EQUALS", "right": {"value": "4"}, "left": {"scope": {"name": {"identifier": "ringCoord"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getEnvelopeInternal"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "envMinDimension"}, "initializer": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getHeight"}}, {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getWidth"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"name": {"identifier": "envMinDimension"}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "abs"}, "arguments": [{"name": {"identifier": "bufferDistance"}}]}, "left": {"value": "2"}}}, "left": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "bufferDistance"}}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ringCoord"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "4"}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "bufferDistance"}, {"NumericLiteralExpression": "0"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ringCoord"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "4"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsTriangleErodedCompletely"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ringCoord"}]}, {"Argument": [{"IdentifierName": "bufferDistance"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ringCoord"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumDiameter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "md"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "minDiam"}, {"MultiplyExpression": [{"NumericLiteralExpression": "2"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Abs"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufferDistance"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "getIndex"}, "arguments": [{"name": {"identifier": "dirEdge"}}]}}]}}, {"expression": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "getIndex"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdge"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_outEdges"}, {"BracketedArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetIndex"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "coord"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "pt"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "nodeMap"}, {"IdentifierName": "Values"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "gc"}}}]}, "condition": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "widestGeometry"}, "initializer": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"value": "0"}]}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "widestGeometry"}}, "value": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "condition": {"operator": "GREATER", "right": {"scope": {"scope": {"name": {"identifier": "widestGeometry"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "getWidth"}}, "left": {"scope": {"scope": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "getWidth"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "gc"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "widestGeometry"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"IdentifierName": "gc"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Width"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "widestGeometry"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Width"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "widestGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gc"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "widestGeometry"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "m10"}}, "left": {"name": {"identifier": "m01"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "m11"}}, "left": {"name": {"identifier": "m00"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"MultiplyExpression": [{"IdentifierName": "m00"}, {"IdentifierName": "m11"}]}, {"MultiplyExpression": [{"IdentifierName": "m01"}, {"IdentifierName": "m10"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "vertexDist"}, "initializer": {"scope": {"name": {"identifier": "vertex"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "queryPt"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "smc"}}, "name": {"identifier": "updateClearance"}, "arguments": [{"name": {"identifier": "vertexDist"}}, {"name": {"identifier": "queryPt"}}, {"name": {"identifier": "vertex"}}]}}]}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "vertexDist"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "vertex"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_queryPt"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "vertexDist"}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_smc"}, {"IdentifierName": "UpdateClearance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vertexDist"}]}, {"Argument": [{"IdentifierName": "_queryPt"}]}, {"Argument": [{"IdentifierName": "vertex"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "boundablesAtLevel"}, "arguments": [{"name": {"identifier": "level"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "BoundablesAtLevel"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "reduceToGeometries"}, "arguments": [{"name": {"identifier": "geomTree"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "union"}, "initializer": {"name": {"identifier": "binaryUnion"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"expression": {"name": {"identifier": "union"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReduceToGeometries"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomTree"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BinaryUnion"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "union"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "eLoc"}, "initializer": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "argIndex"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "eiIt"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "addSelfIntersectionNode"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "coord"}}, {"name": {"identifier": "eLoc"}}]}}]}, "compare": {"scope": {"name": {"identifier": "eiIt"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "eiIt"}, "initializer": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "eiList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Edge"}, {"IdentifierName": "Edges"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeIntersection"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "EdgeIntersectionList"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddSelfIntersectionNode"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "argIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"IdentifierName": "eLoc"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"name": {"identifier": "node"}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "nodeEdgeStack"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "MarkHalfEdge"}}, "name": {"identifier": "isMarked"}, "arguments": [{"name": {"identifier": "e"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "e"}}, "value": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "node"}}, "left": {"name": {"identifier": "e"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "node"}]}]}]}]}, {"DoStatement": [{"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "IsMarked"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeEdgeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "e"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "e"}, {"IdentifierName": "node"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "input"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "expected"}, "initializer": {"name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktExpected"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "octEnv"}, "initializer": {"scope": {"name": {"identifier": "OctagonalEnvelope"}}, "name": {"identifier": "octagonalEnvelope"}, "arguments": [{"name": {"identifier": "input"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isEqual"}, "initializer": {"scope": {"name": {"identifier": "octEnv"}}, "name": {"identifier": "equalsNorm"}, "arguments": [{"name": {"identifier": "expected"}}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"name": {"identifier": "isEqual"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Read"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktExpected"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OctagonalEnvelope"}, {"IdentifierName": "GetOctagonalEnvelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "input"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "octEnv"}, {"IdentifierName": "EqualsNormalized"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expected"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "isEqual"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "alpha"}, "initializer": {"operator": "DIVIDE", "right": {"name": {"identifier": "quadSegs"}}, "left": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}}}]}}, {"expression": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "cos"}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"name": {"identifier": "alpha"}}}]}, "left": {"value": "1"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "PI"}]}, {"NumericLiteralExpression": "2.0"}]}, {"IdentifierName": "quadSegs"}]}]}]}]}]}, {"ReturnStatement": [{"SubtractExpression": [{"NumericLiteralExpression": "1"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Cos"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"IdentifierName": "alpha"}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "srcPts"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "toCoordinateArray"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newPts"}, "initializer": {"name": {"identifier": "snapLine"}, "arguments": [{"name": {"identifier": "srcPts"}}, {"name": {"identifier": "snapPts"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "getCoordinateSequenceFactory"}}, "name": {"identifier": "create"}, "arguments": [{"name": {"identifier": "newPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "SnapLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "srcPts"}]}, {"Argument": [{"IdentifierName": "_snapPts"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CoordinateSequenceFactory"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newPts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeMinDistance"}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "nearestPts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "name": {"identifier": "getCoordinate"}}]}}}]}}, {"expression": {"name": {"identifier": "nearestPts"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeMinDistance"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Coordinate"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "nearestPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "StringBuffer"}}, "name": {"identifier": "buf"}, "initializer": {"type": {"name": {"identifier": "StringBuffer"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "toLocationSymbol"}, "arguments": [{"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, "name": {"name": {"identifier": "location"}}}]}]}}, "condition": {"operator": "GREATER", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "toLocationSymbol"}, "arguments": [{"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "ON"}}, "name": {"name": {"identifier": "location"}}}]}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "append"}, "arguments": [{"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "toLocationSymbol"}, "arguments": [{"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, "name": {"name": {"identifier": "location"}}}]}]}}, "condition": {"operator": "GREATER", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "location"}}, "name": {"identifier": "length"}}}}, {"expression": {"scope": {"name": {"identifier": "buf"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "StringBuilder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "StringBuilder"}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationUtility"}, {"IdentifierName": "ToLocationSymbol"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationUtility"}, {"IdentifierName": "ToLocationSymbol"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "On"}]}]}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_location"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "Append"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LocationUtility"}, {"IdentifierName": "ToLocationSymbol"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sb"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineIntersector"}}, "name": {"identifier": "lineIntersector"}, "initializer": {"type": {"name": {"identifier": "RobustLineIntersector"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pt"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pt"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "lineIntersector"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"scope": {"name": {"identifier": "lineIntersector"}}, "name": {"identifier": "hasIntersection"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineIntersector"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineIntersector"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineIntersector"}, {"IdentifierName": "HasIntersection"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "triangles"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "arguments": [{"name": {"identifier": "edges"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triangles"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "edges"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "queryEnv"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "queryEnv"}}, "name": {"identifier": "expandBy"}, "arguments": [{"name": {"identifier": "tolerance"}}]}}, {"expression": {"name": {"identifier": "queryEnv"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryEnv"}, {"IdentifierName": "ExpandBy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "queryEnv"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "writeRepeatedSqr"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": ".9"}]}]}}, {"expression": {"name": {"identifier": "writeRepeatedSqr"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}, "name": {"identifier": "divide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "10"}]}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteRepeatedSqr"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": ".9"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "WriteRepeatedSqr"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}, {"IdentifierName": "Divide"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "createSupercircle"}, "arguments": [{"value": "4"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateSupercircle"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "db"}, "initializer": {"type": {"name": {"identifier": "DoubleBits"}}, "arguments": [{"name": {"identifier": "d"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "db"}}, "name": {"identifier": "zeroLowerBits"}, "arguments": [{"value": "52"}]}}, {"expression": {"scope": {"name": {"identifier": "db"}}, "name": {"identifier": "getDouble"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DoubleBits"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DoubleBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "d"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db"}, {"IdentifierName": "ZeroLowerBits"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "52"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db"}, {"IdentifierName": "Double"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "delx"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dely"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "sqrt"}, "arguments": [{"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "dely"}}, "left": {"name": {"identifier": "dely"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "delx"}}, "left": {"name": {"identifier": "delx"}}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}, {"IdentifierName": "_x"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}, {"IdentifierName": "_y"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"MultiplyExpression": [{"IdentifierName": "delx"}, {"IdentifierName": "delx"}]}, {"MultiplyExpression": [{"IdentifierName": "dely"}, {"IdentifierName": "dely"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "envelopeCentre"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "scaleInstance"}, "arguments": [{"value": "1"}, {"operator": "MINUS", "expression": {"value": "1"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ScaleInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "envelopeCentre"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "scaleInstance"}, "arguments": [{"operator": "MINUS", "expression": {"value": "1"}}, {"value": "1"}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "g"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "EnvelopeCentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ScaleInstance"}]}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_j"}, "initializer": {"name": {"identifier": "Two_One_Diff__x2"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_0"}, "initializer": {"name": {"identifier": "Two_One_Diff__x1"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x2"}, "initializer": {"name": {"identifier": "Two_One_Diff__x1"}, "arguments": [{"name": {"identifier": "_j"}}, {"name": {"identifier": "_0"}}, {"name": {"identifier": "b1"}}]}}]}}, {"expression": {"name": {"identifier": "x2"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x1"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x1"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_j"}]}, {"Argument": [{"IdentifierName": "_0"}]}, {"Argument": [{"IdentifierName": "b1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x2"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_j"}, "initializer": {"name": {"identifier": "Two_One_Diff__x2"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_0"}, "initializer": {"name": {"identifier": "Two_One_Diff__x1"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x1"}, "initializer": {"name": {"identifier": "Two_One_Diff__x0"}, "arguments": [{"name": {"identifier": "_j"}}, {"name": {"identifier": "_0"}}, {"name": {"identifier": "b1"}}]}}]}}, {"expression": {"name": {"identifier": "x1"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x1"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x0"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_j"}]}, {"Argument": [{"IdentifierName": "_0"}]}, {"Argument": [{"IdentifierName": "b1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x1"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x0"}, "initializer": {"name": {"identifier": "Two_One_Diff__x0"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"name": {"identifier": "x0"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x0"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x0"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "Envelope"}}}}]}, "condition": {"name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "getX"}, "arguments": [{"value": "0"}]}, {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "getY"}, "arguments": [{"value": "0"}]}]}}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "IsEmpty"}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "Y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "p"}, "initializer": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{}, {}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "2"}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getDimension"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}}, {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "isSimple"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geometryFactory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Dimension"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": "()"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "IsSimple"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "cc"}, "initializer": {"scope": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "circumcentre"}, "arguments": [{"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}, {"name": {"identifier": "c"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ccRadius"}, "initializer": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "cc"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "pRadiusDiff"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "ccRadius"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "cc"}}]}}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "pRadiusDiff"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Triangle"}, {"IdentifierName": "Circumcentre"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}, {"Argument": [{"IdentifierName": "c"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cc"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cc"}]}]}]}, {"IdentifierName": "ccRadius"}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "pRadiusDiff"}, {"NumericLiteralExpression": "0"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "holeER"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "assignHoleToShell"}, "arguments": [{"name": {"identifier": "holeER"}}, {"name": {"identifier": "shellList"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "holeList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "holeList"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AssignHoleToShell"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holeEdgeRing"}]}, {"Argument": [{"IdentifierName": "shellList"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"name": {"identifier": "measure1"}}, {"name": {"identifier": "measure2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "measure1"}]}, {"Argument": [{"IdentifierName": "measure2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxSegIndex"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "size"}}}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "maxSegIndex"}}]}, {"name": {"identifier": "maxSegIndex"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "maxSegIndex"}]}]}]}]}, {"Argument": [{"IdentifierName": "maxSegIndex"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "name": {"identifier": "intCounter"}, "initializer": {"scope": {"name": {"identifier": "InteriorIntersectionFinder"}}, "name": {"identifier": "createIntersectionCounter"}, "arguments": [{"type": {"name": {"identifier": "RobustLineIntersector"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}, "arguments": [{"name": {"identifier": "intCounter"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"scope": {"name": {"identifier": "SegmentStringUtil"}}, "name": {"identifier": "extractNodedSegmentStrings"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "intCounter"}}, "name": {"identifier": "count"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "InteriorIntersectionFinder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "InteriorIntersectionFinder"}, {"IdentifierName": "CreateIntersectionCounter"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "RobustLineIntersector"}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "INoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intCounter"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentStringUtil"}, {"IdentifierName": "ExtractNodedSegmentStrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intCounter"}, {"IdentifierName": "Count"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getEdges"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetEdges"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "ring"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "reverse"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "p0"}}]}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p1"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Reverse"}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "expectedSameStructure"}}, "value": {"value": "true"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_expectedSameStructure"}, {"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "0"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dy"}}, "left": {"name": {"identifier": "dy"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dx"}}, "left": {"name": {"identifier": "dx"}}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "quadrant"}}, "left": {"name": {"identifier": "quadrant"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "quadrant"}}, "left": {"name": {"identifier": "quadrant"}}}}, {"expression": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "p1"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_dx"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_dx"}]}]}, {"EqualsExpression": [{"IdentifierName": "_dy"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_dy"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_quadrant"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_quadrant"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_quadrant"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_quadrant"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_p0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "_p1"}]}]}, {"Argument": [{"IdentifierName": "_p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "sourceEnvelope"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "sourceEnvelope"}}, {"name": {"identifier": "sourceEnvelope"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "sourceEnvelopes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "build"}}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "sourceEnvelopes"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sourceEnvelope"}]}, {"Argument": [{"IdentifierName": "sourceEnvelope"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "Build"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "SYMDIFFERENCE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "SymDifference"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "item"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_items"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "item"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MULTIPLY", "right": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumBoundingCircle"}}, "arguments": [{"name": {"identifier": "g"}}]}}, "name": {"identifier": "getRadius"}}, "left": {"value": "2"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"MultiplyExpression": [{"NumericLiteralExpression": "2"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumBoundingCircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"IdentifierName": "GetRadius"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distance"}, "initializer": {"scope": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}, {"name": {"identifier": "DENSIFY_FRACTION"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "env"}, "initializer": {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "envSize"}, "initializer": {"name": {"identifier": "diagonalSize"}, "arguments": [{"name": {"identifier": "env"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "measure"}, "initializer": {"operator": "MINUS", "right": {"operator": "DIVIDE", "right": {"name": {"identifier": "envSize"}}, "left": {"name": {"identifier": "distance"}}}, "left": {"value": "1"}}}]}}, {"expression": {"name": {"identifier": "measure"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}, {"Argument": [{"IdentifierName": "DensifyFraction"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "DiagonalSize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "env"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"NumericLiteralExpression": "1"}, {"DivideExpression": [{"IdentifierName": "distance"}, {"IdentifierName": "envSize"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "measure"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Set"}}, "name": {"identifier": "nodeSet"}, "initializer": {"type": {"name": {"identifier": "TreeSet"}}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isFirst"}, "initializer": {"value": "true"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeIntersection"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "EdgeIntersection"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isFirst"}}, "value": {"value": "false"}}}, {}]}, "condition": {"name": {"identifier": "isFirst"}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "validErr"}}, "value": {"type": {"name": {"identifier": "TopologyValidationError"}}, "arguments": [{"scope": {"name": {"identifier": "TopologyValidationError"}}, "name": {"identifier": "RING_SELF_INTERSECTION"}}, {"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "coord"}}]}}}, {}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "nodeSet"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "coord"}}]}}]}, "condition": {"scope": {"name": {"identifier": "nodeSet"}}, "name": {"identifier": "contains"}, "arguments": [{"scope": {"name": {"identifier": "ei"}}, "name": {"identifier": "coord"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "eiList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "EdgeIntersection"}, {"IdentifierName": "eiList"}, {"Block": [{"IfStatement": [{"IdentifierName": "isFirst"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isFirst"}, {"FalseLiteralExpression": "false"}]}]}, {"ContinueStatement": "continue;"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeSet"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}]}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "validErr"}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyValidationError"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "TopologyValidationErrors"}, {"IdentifierName": "RingSelfIntersection"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}, {"ReturnStatement": "return;"}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeSet"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ei"}, {"IdentifierName": "Coordinate"}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"type": "BOOLEAN"}}}, "condition": {"name": {"identifier": "isPreparedOp"}, "arguments": [{"name": {"identifier": "opName"}}]}}, {"expression": {"scope": {"name": {"identifier": "chainOp"}}, "name": {"identifier": "getReturnType"}, "arguments": [{"name": {"identifier": "opName"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsPreparedOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}, {"ReturnStatement": [{"TypeOfExpression": [{"PredefinedType": "bool"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_chainOp"}, {"IdentifierName": "GetReturnType"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "t"}, "initializer": {"scope": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "reflectionInstance"}, "arguments": [{"value": "0"}, {"value": "5"}, {"value": "5"}, {"value": "0"}]}}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "5"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "5"}, {"value": "0"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"value": "0"}, {"value": "0"}, {"name": {"identifier": "t"}}, {"value": "5"}, {"value": "5"}]}}, {"expression": {"name": {"identifier": "checkTransformation"}, "arguments": [{"operator": "MINUS", "expression": {"value": "10"}}, {"operator": "MINUS", "expression": {"value": "10"}}, {"name": {"identifier": "t"}}, {"value": "15"}, {"value": "15"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "AffineTransformation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AffineTransformation"}, {"IdentifierName": "ReflectionInstance"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}, {"Argument": [{"NumericLiteralExpression": "5"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckTransformation"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "10"}]}]}, {"Argument": [{"IdentifierName": "t"}]}, {"Argument": [{"NumericLiteralExpression": "15"}]}, {"Argument": [{"NumericLiteralExpression": "15"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "sr"}, "initializer": {"type": {"name": {"identifier": "MCIndexSnapRounder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "sr"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexSnapRounder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sr"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nextNode"}}, "value": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "nodeIt"}}, "name": {"identifier": "next"}}}}}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nextNode"}}, "value": {}}}, "condition": {"scope": {"name": {"identifier": "nodeIt"}}, "name": {"identifier": "hasNext"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeIt"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nextNode"}, {"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_nodeIt"}, {"IdentifierName": "Current"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nextNode"}, {"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "children"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "AbstractNode"}}, "expression": {"name": {"identifier": "bndComposite"}}}}, "name": {"identifier": "getChildBoundables"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "child"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BoundablePair"}}, "name": {"identifier": "bp"}, "initializer": {"type": {"name": {"identifier": "BoundablePair"}}, "arguments": [{"name": {"identifier": "child"}}, {"name": {"identifier": "bndOther"}}, {"name": {"identifier": "itemDistance"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "priQ"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "bp"}}]}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minDistance"}}, "left": {"scope": {"name": {"identifier": "bp"}}, "name": {"identifier": "getDistance"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "children"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Envelope"}, {"IdentifierName": "TItem"}]}]}, {"IdentifierName": "bndComposite"}]}]}, {"IdentifierName": "ChildBoundables"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "children"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "TItem"}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "child"}]}, {"Argument": [{"IdentifierName": "bndOther"}]}, {"Argument": [{"IdentifierName": "_itemDistance"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bp"}, {"IdentifierName": "Distance"}]}, {"IdentifierName": "minDistance"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "priQ"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bp"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "EQUALS", "right": {"index": {"name": {"identifier": "locIndex"}}, "name": {"scope": {"name": {"identifier": "le"}}, "name": {"identifier": "location"}}}, "left": {"index": {"name": {"identifier": "locIndex"}}, "name": {"name": {"identifier": "location"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "_location"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "locIndex"}]}]}]}, {"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "le"}, {"IdentifierName": "_location"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "locIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Angle"}}, "name": {"identifier": "diff"}, "arguments": [{"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "angle"}}, {"name": {"identifier": "angle"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "AngleUtility"}, {"IdentifierName": "Diff"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Angle"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "findEdge"}, "arguments": [{"name": {"identifier": "p"}}, {"index": {"value": "0"}, "name": {"name": {"identifier": "dest"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "onext"}, "initializer": {"name": {"identifier": "e"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "onext"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "dest"}}}]}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "onext"}}, "value": {"scope": {"name": {"identifier": "onext"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "e"}}, "left": {"name": {"identifier": "onext"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "graph"}, {"IdentifierName": "FindEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "dest"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "e"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "onext"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "dest"}, {"BracketedArgumentList": [{"Argument": [{"PostIncrementExpression": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "onext"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "onext"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "onext"}, {"IdentifierName": "e"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "CoordinateArraySequenceFactory"}}, "name": {"identifier": "instance"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArraySequenceFactory"}, {"IdentifierName": "Instance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "isValid"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "IsValid"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "NodedSegmentString"}}, "expression": {"scope": {"name": {"identifier": "mc"}}, "name": {"identifier": "getContext"}}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {}, "condition": {"operator": "AND", "right": {"inner": {"operator": "EQUALS", "right": {"name": {"identifier": "hotPixelVertexIndex"}}, "left": {"name": {"identifier": "startIndex"}}}}, "left": {"operator": "EQUALS", "right": {"name": {"identifier": "parentEdge"}}, "left": {"name": {"identifier": "ss"}}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "parentEdge"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isNodeAdded"}}, "value": {"scope": {"name": {"identifier": "hotPixel"}}, "name": {"identifier": "addSnappedNode"}, "arguments": [{"name": {"identifier": "ss"}}, {"name": {"identifier": "startIndex"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "INodableSegmentString"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "mc"}, {"IdentifierName": "Context"}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_parentEdge"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "_parentEdge"}]}, {"ParenthesizedExpression": [{"EqualsExpression": [{"IdentifierName": "startIndex"}, {"IdentifierName": "_hotPixelVertexIndex"}]}]}]}, {"ReturnStatement": "return;"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isNodeAdded"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_hotPixel"}, {"IdentifierName": "AddSnappedNode"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss"}]}, {"Argument": [{"IdentifierName": "startIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "locator"}}, "name": {"identifier": "locate"}, "arguments": [{"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"name": {"identifier": "p0"}}]}]}}]}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "e"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "base"}, "initializer": {"name": {"identifier": "e"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "base"}}, "value": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}}}, "condition": {"scope": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p0"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "locEdge"}, "initializer": {"name": {"identifier": "base"}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "locEdge"}}}, "condition": {"scope": {"scope": {"scope": {"name": {"identifier": "locEdge"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "p1"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "locEdge"}}, "value": {"scope": {"name": {"identifier": "locEdge"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "base"}}, "left": {"name": {"identifier": "locEdge"}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_locator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "e"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "e"}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "baseQE"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "baseQE"}]}]}]}]}, {"DoStatement": [{"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locEdge"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Coordinate"}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "locEdge"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "locEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "locEdge"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "locEdge"}, {"IdentifierName": "baseQE"}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "geom"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "geom"}}}}}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0"}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygonal"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}, {"type": {"name": {"identifier": "ArrayList"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "GetLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seqProj"}, "initializer": {"name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "facingPlane"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "ptProj"}, "initializer": {"name": {"identifier": "project"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "facingPlane"}}]}}]}}, {"expression": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "RayCrossingCounter"}}, "name": {"identifier": "locatePointInRing"}, "arguments": [{"name": {"identifier": "ptProj"}}, {"name": {"identifier": "seqProj"}}]}, "left": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Project"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "_facingPlane"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Project"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "_facingPlane"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RayCrossingCounter"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ptProj"}]}, {"Argument": [{"IdentifierName": "seqProj"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0.0"}, {"value": "0.0"}, {"value": "0.0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord2"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.0"}, {"value": "200.0"}, {"value": "50.0"}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distance"}, "initializer": {"scope": {"name": {"identifier": "coord1"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "coord2"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "distance"}}, {"value": "223.60679774997897"}, {"value": "0.00001"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "200.0"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord1"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"NumericLiteralExpression": "223.60679774997897"}]}, {"Argument": [{"NumericLiteralExpression": "0.00001"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c2"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "c1"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "c2"}}]}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c3"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "22"}, {"value": "3"}]}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "c1"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "c3"}}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "22"}]}, {"Argument": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsFalse"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c1"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "c3"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LineStringExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygonizer"}}, "name": {"identifier": "polygonizer"}, "initializer": {"type": {"name": {"identifier": "Polygonizer"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "lines"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Collection"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getInvalidRingLines"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineStringExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetInvalidRingLines"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DistanceOp"}}, "name": {"identifier": "distOp"}, "initializer": {"type": {"name": {"identifier": "DistanceOp"}}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "distance"}}, "left": {"scope": {"name": {"identifier": "distOp"}}, "name": {"identifier": "distance"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DistanceOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DistanceOp"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distOp"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "distance"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TriangleCoordinatesVisitor"}}, "name": {"identifier": "visitor"}, "initializer": {"type": {"name": {"identifier": "TriangleCoordinatesVisitor"}}}}]}}, {"expression": {"name": {"identifier": "visitTriangles"}, "arguments": [{"name": {"identifier": "visitor"}}, {"name": {"identifier": "includeFrame"}}]}}, {"expression": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "getTriangles"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TriangleCoordinatesVisitor"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "VisitTriangles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "visitor"}]}, {"Argument": [{"IdentifierName": "includeFrame"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "GetTriangles"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxSegIndex"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"index": {"value": "0"}, "name": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "pts"}}}, {"value": "0"}, {"value": "0.0"}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "maxSegIndex"}}, "name": {"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "pts"}}}, {"name": {"identifier": "maxSegIndex"}}, {"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edge"}, {"IdentifierName": "Points"}]}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edge"}, {"IdentifierName": "Points"}]}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "edge"}, {"IdentifierName": "Points"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "maxSegIndex"}]}]}]}]}, {"Argument": [{"IdentifierName": "maxSegIndex"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "seg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"value": "100"}, {"value": "100"}, {"value": "110"}, {"value": "110"}]}}]}}, {"expression": {"name": {"identifier": "checkOrientationIndex"}, "arguments": [{"name": {"identifier": "seg"}}, {"value": "100"}, {"value": "101"}, {"value": "105"}, {"value": "106"}, {"value": "1"}]}}, {"expression": {"name": {"identifier": "checkOrientationIndex"}, "arguments": [{"name": {"identifier": "seg"}}, {"value": "100"}, {"value": "99"}, {"value": "105"}, {"value": "96"}, {"operator": "MINUS", "expression": {"value": "1"}}]}}, {"expression": {"name": {"identifier": "checkOrientationIndex"}, "arguments": [{"name": {"identifier": "seg"}}, {"value": "200"}, {"value": "200"}, {"value": "210"}, {"value": "210"}, {"value": "0"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "110"}]}, {"Argument": [{"NumericLiteralExpression": "110"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientationIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "101"}]}, {"Argument": [{"NumericLiteralExpression": "105"}]}, {"Argument": [{"NumericLiteralExpression": "106"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientationIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"NumericLiteralExpression": "99"}]}, {"Argument": [{"NumericLiteralExpression": "105"}]}, {"Argument": [{"NumericLiteralExpression": "96"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckOrientationIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seg"}]}, {"Argument": [{"NumericLiteralExpression": "200"}]}, {"Argument": [{"NumericLiteralExpression": "200"}]}, {"Argument": [{"NumericLiteralExpression": "210"}]}, {"Argument": [{"NumericLiteralExpression": "210"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "centre"}}, "value": {}}}, {}], "label": {"value": "0"}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "centre"}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}}}, {}], "label": {"value": "1"}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "centre"}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "extremalPts"}}}, "name": {"identifier": "x"}}, "left": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}, "name": {"identifier": "x"}}}}}, {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"index": {"value": "1"}, "name": {"name": {"identifier": "extremalPts"}}}, "name": {"identifier": "y"}}, "left": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}, "name": {"identifier": "y"}}}}}]}}}, {}], "label": {"value": "2"}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "centre"}}, "value": {"scope": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "circumcentre"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "extremalPts"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "extremalPts"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "extremalPts"}}}]}}}, {}], "label": {"value": "3"}}], "selector": {"scope": {"name": {"identifier": "extremalPts"}}, "name": {"identifier": "length"}}}]}, "cs_ast": {"Block": [{"SwitchStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_extremalPts"}, {"IdentifierName": "Length"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "0"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_centre"}, {"NullLiteralExpression": "null"}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "1"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_centre"}, {"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "2"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_centre"}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "X"}]}]}]}, {"NumericLiteralExpression": "2.0"}]}]}, {"Argument": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Y"}]}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"NumericLiteralExpression": "3"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_centre"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Triangle"}, {"IdentifierName": "Circumcentre"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_extremalPts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"BreakStatement": "break;"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "convertFromString"}, "arguments": [{"name": {"identifier": "destClass"}}, {"type": {"name": {"identifier": "String"}}, "expression": {"name": {"identifier": "srcValue"}}}]}}]}, "condition": {"type": {"name": {"identifier": "String"}}, "expression": {"name": {"identifier": "srcValue"}}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "srcValue"}}}]}, "condition": {"scope": {"name": {"identifier": "destClass"}}, "name": {"identifier": "isAssignableFrom"}, "arguments": [{"scope": {"name": {"identifier": "srcValue"}}, "name": {"identifier": "getClass"}}]}}, {"expression": {"name": {"identifier": "throwInvalidConversion"}, "arguments": [{"name": {"identifier": "destClass"}}, {"name": {"identifier": "srcValue"}}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "srcValue"}, {"IdentifierName": "String"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ConvertFromString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "destClass"}]}, {"Argument": [{"CastExpression": [{"IdentifierName": "String"}, {"IdentifierName": "srcValue"}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "destClass"}, {"IdentifierName": "IsAssignableFrom"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "srcValue"}, {"IdentifierName": "GetType"}]}, {"ArgumentList": "()"}]}]}]}]}, {"Block": [{"ReturnStatement": [{"IdentifierName": "srcValue"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ThrowInvalidConversion"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "destClass"}]}, {"Argument": [{"IdentifierName": "srcValue"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "Vector2D"}}, "expression": {"name": {"identifier": "o"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Vector2D"}}, "name": {"identifier": "v"}, "initializer": {"type": {"name": {"identifier": "Vector2D"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "Vector2D"}]}]}]}, {"Block": [{"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Vector2D"}, {"IdentifierName": "o"}]}]}]}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}, {"EqualsExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "checkEmpty"}, "arguments": [{"name": {"identifier": "buffer"}}]}}, {}]}, "condition": {"name": {"identifier": "isEmptyBufferExpected"}, "arguments": [{"name": {"identifier": "geom"}}]}}, {"expression": {"name": {"identifier": "checkContainment"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "buffer"}}]}}, {"expression": {"name": {"identifier": "checkDistance"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "buffer"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsEmptyBufferExpected"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEmpty"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "buffer"}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckContainment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "buffer"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckDistance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_distance"}]}, {"Argument": [{"IdentifierName": "buffer"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "ee"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeEnd"}, {"IdentifierName": "ee"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkClosedRing"}, "arguments": [{"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getExteriorRing"}}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}, {"body": {"statements": [{"expression": {"name": {"identifier": "checkClosedRing"}, "arguments": [{"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getInteriorRingN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "validErr"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckClosedRing"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "Shell"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ForEachStatement": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "Holes"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckClosedRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hole"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "validErr"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "offsetPts"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "extractPoints"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "offsetDistance"}}, {"name": {"identifier": "offsetPts"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "offsetPts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_g"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ExtractPoints"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}, {"Argument": [{"IdentifierName": "offsetPts"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "offsetPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "x"}}, "name": {"identifier": "subtract"}, "arguments": [{"name": {"identifier": "y"}}]}, "name": {"identifier": "abs"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "x"}, {"IdentifierName": "Subtract"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "y"}]}]}]}, {"IdentifierName": "Abs"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "elt"}}}, "value": {"type": {"name": {"identifier": "TopologyLocation"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "elt"}}}]}}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "merge"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "elt"}}}]}}]}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"scope": {"name": {"identifier": "lbl"}}, "name": {"identifier": "elt"}}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "elt"}}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "2"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"NotEqualsExpression": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "TopologyLocation"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Merge"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lbl"}, {"IdentifierName": "elt"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m00"}}, "value": {"name": {"identifier": "cosTheta"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m01"}}, "value": {"operator": "MINUS", "expression": {"name": {"identifier": "sinTheta"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m02"}}, "value": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "sinTheta"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "cosTheta"}}, "left": {"name": {"identifier": "x"}}}, "left": {"name": {"identifier": "x"}}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m10"}}, "value": {"name": {"identifier": "sinTheta"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m11"}}, "value": {"name": {"identifier": "cosTheta"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "m12"}}, "value": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "cosTheta"}}, "left": {"name": {"identifier": "y"}}}, "left": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "sinTheta"}}, "left": {"name": {"identifier": "x"}}}, "left": {"name": {"identifier": "y"}}}}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m00"}, {"IdentifierName": "cosTheta"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m01"}, {"UnaryMinusExpression": [{"IdentifierName": "sinTheta"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m02"}, {"AddExpression": [{"SubtractExpression": [{"IdentifierName": "x"}, {"MultiplyExpression": [{"IdentifierName": "x"}, {"IdentifierName": "cosTheta"}]}]}, {"MultiplyExpression": [{"IdentifierName": "y"}, {"IdentifierName": "sinTheta"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m10"}, {"IdentifierName": "sinTheta"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m11"}, {"IdentifierName": "cosTheta"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_m12"}, {"SubtractExpression": [{"SubtractExpression": [{"IdentifierName": "y"}, {"MultiplyExpression": [{"IdentifierName": "x"}, {"IdentifierName": "sinTheta"}]}]}, {"MultiplyExpression": [{"IdentifierName": "y"}, {"IdentifierName": "cosTheta"}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "o"}, "initializer": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geom"}}, "value": {"name": {"identifier": "unionTree"}, "arguments": [{"type": {"name": {"identifier": "List"}}, "expression": {"name": {"identifier": "o"}}}]}}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geom"}}, "value": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}}]}, "condition": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}, "condition": {"type": {"name": {"identifier": "List"}}, "expression": {"name": {"identifier": "o"}}}}, {"expression": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "geomTree"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "geoms"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geomTree"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "IList"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geom"}, {"InvocationExpression": [{"IdentifierName": "UnionTree"}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IList"}, {"IdentifierName": "o"}]}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "IGeometry"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geom"}, {"CastExpression": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "o"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geoms"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getNumGeometries"}}}}, {"body": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isSameStructure"}, "arguments": [{"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}, {"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "g1"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "NumGeometries"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "NumGeometries"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsSameStructure"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "GREATER_EQUALS", "right": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "componentIndex"}}}, "left": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "componentIndex"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}, "left": {"name": {"identifier": "segmentIndex"}}}, "left": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "segmentIndex"}}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segmentFraction"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}, "left": {"name": {"identifier": "segmentIndex"}}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"operator": "GREATER", "right": {"value": "1.0"}, "left": {"name": {"identifier": "segmentFraction"}}}, "left": {"operator": "LESS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "segmentFraction"}}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"LessThanExpression": [{"IdentifierName": "_componentIndex"}, {"NumericLiteralExpression": "0"}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "_componentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "NumGeometries"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LessThanExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "0"}]}, {"GreaterThanExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_segmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}]}, {"NotEqualsExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"LessThanExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "0.0"}]}, {"GreaterThanExpression": [{"IdentifierName": "_segmentFraction"}, {"NumericLiteralExpression": "1.0"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "insert"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "setNode"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Node"}]}, {"ThisExpression": "this"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedLoc"}}, {"scope": {"name": {"identifier": "PointLocation"}}, "name": {"identifier": "locateInRing"}, "arguments": [{"name": {"identifier": "pt"}}, {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedLoc"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "poly"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedLoc"}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "LocatePointInRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "ExteriorRing"}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "nPts"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "length"}}}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "IllegalArgumentException"}}, "arguments": [{"value": "Ring has fewer than 4 points, so orientation cannot be determined"}]}}, "condition": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "nPts"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "hiPt"}, "initializer": {"index": {"value": "0"}, "name": {"name": {"identifier": "ring"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "hiIndex"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "ring"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hiPt"}}, "value": {"name": {"identifier": "p"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hiIndex"}}, "value": {"name": {"identifier": "i"}}}}]}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "hiPt"}}, "name": {"identifier": "y"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}}]}, "compare": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "nPts"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "iPrev"}, "initializer": {"name": {"identifier": "hiIndex"}}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "iPrev"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "iPrev"}}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "iPrev"}}, "value": {"name": {"identifier": "nPts"}}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "iPrev"}}}}]}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "hiIndex"}}, "left": {"name": {"identifier": "iPrev"}}}, "left": {"scope": {"index": {"name": {"identifier": "iPrev"}}, "name": {"name": {"identifier": "ring"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "hiPt"}}]}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "iNext"}, "initializer": {"name": {"identifier": "hiIndex"}}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "iNext"}}, "value": {"operator": "REMAINDER", "right": {"name": {"identifier": "nPts"}}, "left": {"inner": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "iNext"}}}}}}}]}, "condition": {"operator": "AND", "right": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "hiIndex"}}, "left": {"name": {"identifier": "iNext"}}}, "left": {"scope": {"index": {"name": {"identifier": "iNext"}}, "name": {"name": {"identifier": "ring"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "hiPt"}}]}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "prev"}, "initializer": {"index": {"name": {"identifier": "iPrev"}}, "name": {"name": {"identifier": "ring"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "next"}, "initializer": {"index": {"name": {"identifier": "iNext"}}, "name": {"name": {"identifier": "ring"}}}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "OR", "right": {"scope": {"name": {"identifier": "prev"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "next"}}]}, "left": {"operator": "OR", "right": {"scope": {"name": {"identifier": "next"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "hiPt"}}]}, "left": {"scope": {"name": {"identifier": "prev"}}, "name": {"identifier": "equals2D"}, "arguments": [{"name": {"identifier": "hiPt"}}]}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "disc"}, "initializer": {"name": {"identifier": "computeOrientation"}, "arguments": [{"name": {"identifier": "prev"}}, {"name": {"identifier": "hiPt"}}, {"name": {"identifier": "next"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isCCW"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isCCW"}}, "value": {"inner": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "next"}}, "name": {"identifier": "x"}}, "left": {"scope": {"name": {"identifier": "prev"}}, "name": {"identifier": "x"}}}}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isCCW"}}, "value": {"inner": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "disc"}}}}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "disc"}}}}, {"expression": {"name": {"identifier": "isCCW"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsCCW"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "PrecisionModel"}}, "expression": {"name": {"identifier": "other"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "otherPrecisionModel"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "expression": {"name": {"identifier": "other"}}}}]}}, {"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "otherPrecisionModel"}}, "name": {"identifier": "scale"}}, "left": {"name": {"identifier": "scale"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "otherPrecisionModel"}}, "name": {"identifier": "modelType"}}, "left": {"name": {"identifier": "modelType"}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_modelType"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "otherPrecisionModel"}, {"IdentifierName": "PrecisionModelType"}]}]}, {"EqualsExpression": [{"IdentifierName": "_scale"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "otherPrecisionModel"}, {"IdentifierName": "Scale"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "setToTranslation"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}, {"expression": {"name": {"identifier": "trans"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "SetToTranslation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "trans"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "rings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "ring"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ring"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "last"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "mid"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2"}, "left": {"name": {"identifier": "last"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "tmp"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coord"}}}, "value": {"index": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "last"}}}, "name": {"name": {"identifier": "coord"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"name": {"identifier": "last"}}}, "name": {"name": {"identifier": "coord"}}}, "value": {"name": {"identifier": "tmp"}}}}]}, "compare": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "mid"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "COORDS_EMPTY"}}, {"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"value": "1"}, {"value": "2"}, {"value": "1"}, {"value": "2"}]}]}, {"name": {"identifier": "COORDS_EMPTY"}}]}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "Empty"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"Argument": [{"IdentifierName": "Empty"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "ComponentCoordinateExtracter"}}, "name": {"identifier": "getCoordinates"}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "targetPointLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ComponentCoordinateExtracter"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetPointLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "SmallHoleRemover"}}, "name": {"identifier": "clean"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "areaTolerance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SmallHoleRemover"}, {"IdentifierName": "Clean"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "areaTolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeEnd"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "EdgeEnd"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"expression": {"name": {"identifier": "compareDirection"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CompareDirection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createMultiPoint"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFact"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"scope": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "1"}]}, "name": {"identifier": "divide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "0"}]}]}, "name": {"identifier": "isNaN"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"scope": {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "valueOf"}, "arguments": [{"value": "1"}]}, "name": {"identifier": "multiply"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "NaN"}}]}, "name": {"identifier": "isNaN"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Divide"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "ValueOf"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"IdentifierName": "Multiply"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "NaN"}]}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "linkResultDirectedEdges"}}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"IdentifierName": "Nodes"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "LinkResultDirectedEdges"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "MINUS", "right": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}, "left": {"index": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}, "name": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "depth"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SubtractExpression": [{"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "depth"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "OR", "right": {"operator": "NOT_EQUALS", "right": {"value": "0"}, "left": {"operator": "REMAINDER", "right": {"name": {"identifier": "coordsPerLine"}}, "left": {"name": {"identifier": "coordIndex"}}}}, "left": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "coordsPerLine"}}}}}, {"expression": {"name": {"identifier": "indent"}, "arguments": [{"name": {"identifier": "level"}}, {"name": {"identifier": "writer"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"LessThanOrEqualExpression": [{"IdentifierName": "_coordsPerLine"}, {"NumericLiteralExpression": "0"}]}, {"NotEqualsExpression": [{"ModuloExpression": [{"IdentifierName": "coordIndex"}, {"IdentifierName": "_coordsPerLine"}]}, {"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Indent"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}, {"Argument": [{"IdentifierName": "writer"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "addTestPts"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "geom"}}}]}}, {"expression": {"name": {"identifier": "addTestPts"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "geom"}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"name": {"identifier": "checkValid"}, "arguments": [{"name": {"identifier": "overlayOp"}}]}}]}}, {"expression": {"name": {"identifier": "isValid"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddTestPts"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddTestPts"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_geom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CheckValid"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "overlayOp"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isValid"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "wellOrientedDE"}, "initializer": {}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "unvisitedDE"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "unvisitedDE"}}, "value": {"name": {"identifier": "de"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "wellOrientedDE"}}, "value": {"name": {"identifier": "de"}}}}, "condition": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdgeDirection"}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "isVisited"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "iterator"}}}]}]}, {"thenStmt": {"expression": {"name": {"identifier": "wellOrientedDE"}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "wellOrientedDE"}}}}, {"expression": {"name": {"identifier": "unvisitedDE"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ForEachStatement": [{"PredefinedType": "object"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "obj"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "IsVisited"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "unvisitedDE"}, {"IdentifierName": "de"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "EdgeDirection"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "wellOrientedDE"}, {"IdentifierName": "de"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "wellOrientedDE"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "wellOrientedDE"}]}]}, {"ReturnStatement": [{"IdentifierName": "unvisitedDE"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTestFromCommcast2003AtYahooDotCa"}, "arguments": [{"type": {"name": {"identifier": "WKTReader"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "doTestFromCommcast2003AtYahooDotCa"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "WKTReader"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {}}, "condition": {"operator": "LESS_EQUALS", "right": {"name": {"identifier": "index"}}, "left": {"scope": {"name": {"identifier": "args"}}, "name": {"identifier": "length"}}}}, {"thenStmt": {"expression": {}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "args"}}}}}, {"expression": {"type": {"name": {"identifier": "Double"}}, "expression": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "args"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "args"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "index"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "Double"}, {"ElementAccessExpression": [{"IdentifierName": "args"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "b"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "b"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compute"}}}, {"expression": {"name": {"identifier": "extremalPts"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_extremalPts"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "ioGeom"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"value": "2"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "ioGeom"}}}, "value": {"scope": {"name": {"identifier": "DouglasPeuckerSimplifier"}}, "name": {"identifier": "simplify"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "ioGeom"}}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"name": {"identifier": "ioGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rdr"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DouglasPeuckerSimplifier"}, {"IdentifierName": "Simplify"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "ioGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "ioGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "insertPoint"}, "arguments": [{"name": {"identifier": "argIndex"}}, {"name": {"identifier": "pt"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertPoint"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argIndex"}]}, {"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "index"}}, "left": {"name": {"identifier": "start"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pts"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "_start"}, {"IdentifierName": "index"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "polygonize"}, "arguments": [{"name": {"identifier": "g"}}, {"value": "false"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineStringExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetPolygons"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToPolygonArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polyArray"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "count"}}}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "getBit"}, "arguments": [{"name": {"identifier": "num2"}}, {"name": {"identifier": "i"}}]}, "left": {"name": {"identifier": "getBit"}, "arguments": [{"name": {"identifier": "num1"}}, {"name": {"identifier": "i"}}]}}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}]}, "compare": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "52"}}]}], "update": [{"operator": "POSTFIX_DECREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "52"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "52"}]}]}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"PostDecrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"InvocationExpression": [{"IdentifierName": "GetBit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "num1"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"IdentifierName": "GetBit"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "num2"}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "count"}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "count"}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "52"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "buildBufferLineSimplifiedSet"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "BuildBufferLineSimplifiedSet"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {}}]}}, {"entries": [{"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createGeometryCollection"}}}}, {}], "label": {"operator": "MINUS", "expression": {"value": "1"}}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPoint"}}}}, {}], "label": {"value": "0"}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createLineString"}}}}, {}], "label": {"value": "1"}}, {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createPolygon"}}}}, {}], "label": {"value": "2"}}], "selector": {"name": {"identifier": "resultDimension"}, "arguments": [{"name": {"identifier": "overlayOpCode"}}, {"name": {"identifier": "a"}}, {"name": {"identifier": "b"}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"SwitchStatement": [{"InvocationExpression": [{"IdentifierName": "ResultDimension"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "overlayOpCode"}]}, {"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"IdentifierName": "b"}]}]}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "False"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Point"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "Coordinate"}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Curve"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"NullLiteralExpression": "null"}]}]}]}]}]}]}, {"BreakStatement": "break;"}]}, {"SwitchSection": [{"CaseSwitchLabel": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Dimension"}, {"IdentifierName": "Surface"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}, {"BreakStatement": "break;"}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "ep0"}}]}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Quadrant"}}, "name": {"identifier": "quadrant"}, "arguments": [{"name": {"identifier": "ep0"}}, {"name": {"identifier": "ep1"}}]}, "left": {"scope": {"name": {"identifier": "Quadrant"}}, "name": {"identifier": "quadrant"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "COLLINEAR"}}, "left": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}, {"name": {"identifier": "ep1"}}]}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ep0"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "ep1"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "Collinear"}]}]}, {"EqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "QuadrantOp"}, {"IdentifierName": "Quadrant"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "QuadrantOp"}, {"IdentifierName": "Quadrant"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ep0"}]}, {"Argument": [{"IdentifierName": "ep1"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Noder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "ScaledNoder"}}, "arguments": [{"type": {"name": {"identifier": "MCIndexSnapRounder"}}, "arguments": [{"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"value": "1.0"}]}]}, {"scope": {"name": {"identifier": "fixedPM"}}, "name": {"identifier": "getScale"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "BufferBuilder"}}, "name": {"identifier": "bufBuilder"}, "initializer": {"type": {"name": {"identifier": "BufferBuilder"}}, "arguments": [{"name": {"identifier": "bufParams"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "bufBuilder"}}, "name": {"identifier": "setWorkingPrecisionModel"}, "arguments": [{"name": {"identifier": "fixedPM"}}]}}, {"expression": {"scope": {"name": {"identifier": "bufBuilder"}}, "name": {"identifier": "setNoder"}, "arguments": [{"name": {"identifier": "noder"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "resultGeometry"}}, "value": {"scope": {"name": {"identifier": "bufBuilder"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "argGeom"}}, {"name": {"identifier": "distance"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "INoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ScaledNoder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexSnapRounder"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fixedPrecModel"}, {"IdentifierName": "Scale"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferBuilder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_bufParams"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufBuilder"}, {"IdentifierName": "WorkingPrecisionModel"}]}, {"IdentifierName": "fixedPrecModel"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufBuilder"}, {"IdentifierName": "Noder"}]}, {"IdentifierName": "noder"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_resultGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufBuilder"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_argGeom"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "ptLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"index": {"name": {"identifier": "targetIndex"}}, "name": {"name": {"identifier": "arg"}}}, "name": {"identifier": "getGeometry"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "n"}}, "name": {"identifier": "getLabel"}}, "name": {"identifier": "setAllLocations"}, "arguments": [{"name": {"identifier": "targetIndex"}}, {"name": {"identifier": "loc"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_arg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}]}]}, {"IdentifierName": "Geometry"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "n"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "SetAllLocations"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "targetIndex"}]}, {"Argument": [{"IdentifierName": "loc"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "copy"}}}, "condition": {"scope": {"name": {"identifier": "inputGeom"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "VWTransformer"}}, "arguments": [{"name": {"identifier": "isEnsureValidTopology"}}, {"name": {"identifier": "distanceTolerance"}}]}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": [{"CastExpression": [{"IdentifierName": "IGeometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputGeom"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "VWTransformer"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "VWTransformer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "IsEnsureValidTopology"}]}, {"Argument": [{"IdentifierName": "DistanceTolerance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "transformer"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "minEdgeRings"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"name": {"identifier": "startDe"}}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "minEr"}, "initializer": {"type": {"name": {"identifier": "MinimalEdgeRing"}}, "arguments": [{"name": {"identifier": "de"}}, {"name": {"identifier": "geometryFactory"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "minEdgeRings"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "minEr"}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getMinEdgeRing"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "de"}}, "value": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "startDe"}}, "left": {"name": {"identifier": "de"}}}}, {"expression": {"name": {"identifier": "minEdgeRings"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "EdgeRing"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "startDe"}]}]}]}]}, {"DoStatement": [{"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "MinEdgeRing"}]}, {"NullLiteralExpression": "null"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "EdgeRing"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MinimalEdgeRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}, {"Argument": [{"IdentifierName": "GeometryFactory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "minEdgeRings"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "minEr"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "de"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Next"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "de"}, {"IdentifierName": "startDe"}]}]}, {"ReturnStatement": [{"IdentifierName": "minEdgeRings"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "setCoordinates"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}, {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}, "name": {"identifier": "getCoordinate"}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "dist"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"operator": "LESS", "right": {"name": {"identifier": "edgeCoincidenceTolerance"}}, "left": {"name": {"identifier": "dist"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "SetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"LessThanExpression": [{"IdentifierName": "dist"}, {"IdentifierName": "_edgeCoincidenceTolerance"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "linkAllDirectedEdges"}}}]}, "compare": {"scope": {"name": {"identifier": "nodeit"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "nodeit"}, "initializer": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "Node"}, {"IdentifierName": "Nodes"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}, {"IdentifierName": "LinkAllDirectedEdges"}]}, {"ArgumentList": "()"}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "segInt"}}}}, {"expression": {"name": {"identifier": "checkInteriorIntersections"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_segInt"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckInteriorIntersections"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeBoundingBox"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subdiv"}}, "value": {"type": {"name": {"identifier": "QuadEdgeSubdivision"}}, "arguments": [{"name": {"identifier": "computeAreaEnv"}}, {"name": {"identifier": "tolerance"}}]}}}, {"expression": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "setLocator"}, "arguments": [{"type": {"name": {"identifier": "LastFoundQuadEdgeLocator"}}, "arguments": [{"name": {"identifier": "subdiv"}}]}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "incDel"}}, "value": {"type": {"name": {"identifier": "IncrementalDelaunayTriangulator"}}, "arguments": [{"name": {"identifier": "subdiv"}}]}}}, {"expression": {"name": {"identifier": "insertSites"}, "arguments": [{"name": {"identifier": "initialVertices"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeBoundingBox"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_subdiv"}, {"ObjectCreationExpression": [{"IdentifierName": "QuadEdgeSubdivision"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_computeAreaEnv"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "SetLocator"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "LastFoundQuadEdgeLocator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_subdiv"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_incDel"}, {"ObjectCreationExpression": [{"IdentifierName": "IncrementalDelaunayTriangulator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_subdiv"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "InsertSites"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_initialVertices"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isAdjacentSegments"}, "arguments": [{"name": {"identifier": "segIndex0"}}, {"name": {"identifier": "segIndex1"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxSegIndex"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "getNumPoints"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "OR", "right": {"inner": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegIndex"}}, "left": {"name": {"identifier": "segIndex0"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segIndex1"}}}}}, "left": {"inner": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegIndex"}}, "left": {"name": {"identifier": "segIndex1"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segIndex0"}}}}}}}]}, "condition": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "isClosed"}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersectionNum"}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "e1"}}, "left": {"name": {"identifier": "e0"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "ReferenceEquals"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e0"}]}, {"Argument": [{"IdentifierName": "e1"}]}]}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "IntersectionNum"}]}, {"NumericLiteralExpression": "1"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsAdjacentSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segIndex0"}]}, {"Argument": [{"IdentifierName": "segIndex1"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "IsClosed"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "segIndex0"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "segIndex1"}, {"IdentifierName": "maxSegIndex"}]}]}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "segIndex1"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "segIndex0"}, {"IdentifierName": "maxSegIndex"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a1"}, "initializer": {"name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "tail"}}, {"name": {"identifier": "tip1"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a2"}, "initializer": {"name": {"identifier": "angle"}, "arguments": [{"name": {"identifier": "tail"}}, {"name": {"identifier": "tip2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "angDel"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "a1"}}, "left": {"name": {"identifier": "a2"}}}}]}}, {"thenStmt": {"expression": {"operator": "PLUS", "right": {"name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angDel"}}}}, "condition": {"operator": "LESS_EQUALS", "right": {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}, "left": {"name": {"identifier": "angDel"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "right": {"name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angDel"}}}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"name": {"identifier": "angDel"}}}}, {"expression": {"name": {"identifier": "angDel"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tail"}]}, {"Argument": [{"IdentifierName": "tip1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tail"}]}, {"Argument": [{"IdentifierName": "tip2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "a2"}, {"IdentifierName": "a1"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "angDel"}, {"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"ReturnStatement": [{"AddExpression": [{"IdentifierName": "angDel"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "angDel"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}, {"ReturnStatement": [{"SubtractExpression": [{"IdentifierName": "angDel"}, {"IdentifierName": "PiTimes2"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "angDel"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "orientationIndex"}, "arguments": [{"name": {"identifier": "p1"}}, {"name": {"identifier": "p2"}}, {"name": {"identifier": "q"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "OrientationIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}, {"Argument": [{"IdentifierName": "p2"}]}, {"Argument": [{"IdentifierName": "q"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKT"}, "arguments": [{"name": {"identifier": "wkt1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKT"}, "arguments": [{"name": {"identifier": "wkt2"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distance"}, "initializer": {"scope": {"name": {"identifier": "DiscreteHausdorffDistance"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}, {"name": {"identifier": "densifyFrac"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "distance"}}, {"name": {"identifier": "expectedDistance"}}, {"name": {"identifier": "TOLERANCE"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DiscreteHausdorffDistance"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}, {"Argument": [{"IdentifierName": "densifyFrac"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "expectedDistance"}]}, {"Argument": [{"IdentifierName": "TOLERANCE"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"index": {"name": {"identifier": "start"}}, "name": {"name": {"identifier": "linePts"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"index": {"name": {"identifier": "end"}}, "name": {"name": {"identifier": "linePts"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "newSeg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}}, {"expression": {"name": {"identifier": "remove"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}]}}, {"expression": {"scope": {"name": {"identifier": "outputIndex"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "newSeg"}}]}}, {"expression": {"name": {"identifier": "newSeg"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_linePts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "start"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_linePts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "end"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineSegment"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Remove"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_line"}]}, {"Argument": [{"IdentifierName": "start"}]}, {"Argument": [{"IdentifierName": "end"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outputIndex"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newSeg"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "newSeg"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "points"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "toArray"}, "arguments": [{"elementType": {"name": {"identifier": "Point"}}, "levels": [{}], "initializer": {}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IPoint"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Count"}]}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_coordinateSequencefactory"}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Ordinates"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "cs"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "points"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "points"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"BaseExpression": "base"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "comps"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPolygon"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_comps"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "originalEx"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "originalEx"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CommonBitsOp"}}, "name": {"identifier": "cbo"}, "initializer": {"type": {"name": {"identifier": "CommonBitsOp"}}, "arguments": [{"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "resultEP"}, "initializer": {"scope": {"name": {"identifier": "cbo"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "distance"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "originalEx"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "resultEP"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "resultEP"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "originalEx"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex2"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ApplicationException"}, {"VariableDeclarator": "originalEx"}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "originalEx"}, {"IdentifierName": "ex"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CommonBitsOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CommonBitsOp"}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbo"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultEP"}, {"IdentifierName": "IsValid"}]}]}, {"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}, {"ReturnStatement": [{"IdentifierName": "resultEP"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "isEmpty"}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "minSize"}, "initializer": {"thenExpr": {"value": "4"}, "elseExpr": {"value": "2"}, "condition": {"scope": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "line"}}}}, "name": {"identifier": "isClosed"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineString"}}, "name": {"identifier": "taggedLine"}, "initializer": {"type": {"name": {"identifier": "TaggedLineString"}}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "line"}}}, {"name": {"identifier": "minSize"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "tps"}}, "name": {"identifier": "linestringMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "line"}}, {"name": {"identifier": "taggedLine"}}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "line"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "IsEmpty"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "IsClosed"}]}, {"NumericLiteralExpression": "4"}, {"NumericLiteralExpression": "2"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "TaggedLineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "TaggedLineString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "minSize"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_container"}, {"IdentifierName": "_lineStringMap"}]}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}, {"Argument": [{"IdentifierName": "taggedLine"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "isNull"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "IsNull"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LineStringExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygonizer"}}, "name": {"identifier": "polygonizer"}, "initializer": {"type": {"name": {"identifier": "Polygonizer"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "lines"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "errs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "errs"}}, "name": {"identifier": "addAll"}, "arguments": [{"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getDangles"}}]}}, {"expression": {"scope": {"name": {"identifier": "errs"}}, "name": {"identifier": "addAll"}, "arguments": [{"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getCutEdges"}}]}}, {"expression": {"scope": {"name": {"identifier": "errs"}}, "name": {"identifier": "addAll"}, "arguments": [{"scope": {"name": {"identifier": "polygonizer"}}, "name": {"identifier": "getInvalidRingLines"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "errs"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LineStringExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Polygonizer"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lines"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "errs"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetDangles"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "errs"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetCutEdges"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "errs"}, {"IdentifierName": "AddRange"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "ILineString"}]}]}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "polygonizer"}, {"IdentifierName": "GetInvalidRingLines"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CollectionUtil"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ILineString"}, {"IdentifierName": "IGeometry"}]}]}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "errs"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "loc"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "isEndpoint"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "compIndex"}, "initializer": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "getComponentIndex"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "loc"}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getNumGeometries"}}}, "left": {"name": {"identifier": "compIndex"}}}}, {"body": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "compIndex"}}}}]}, "condition": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"scope": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "compIndex"}}]}, "name": {"identifier": "getLength"}}}, "left": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getNumGeometries"}}}, "left": {"name": {"identifier": "compIndex"}}}}}, {"expression": {"type": {"name": {"identifier": "LinearLocation"}}, "arguments": [{"name": {"identifier": "compIndex"}}, {"value": "0"}, {"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "IsEndpoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "loc"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "ComponentIndex"}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "compIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "NumGeometries"}]}, {"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"IdentifierName": "loc"}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "compIndex"}]}]}]}, {"LogicalAndExpression": [{"LessThanExpression": [{"IdentifierName": "compIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "NumGeometries"}]}, {"NumericLiteralExpression": "1"}]}]}, {"EqualsExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "compIndex"}]}]}]}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "0"}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LinearLocation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "compIndex"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coordList"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}}}]}}, {"expression": {"name": {"identifier": "addEndpoints"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "eiPrev"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "ei"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "addEdgeCoordinates"}, "arguments": [{"name": {"identifier": "eiPrev"}}, {"name": {"identifier": "ei"}}, {"name": {"identifier": "coordList"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "eiPrev"}}, "value": {"name": {"identifier": "ei"}}}}]}, "condition": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}}, {"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddEndpoints"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetEnumerator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"WhileStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "MoveNext"}]}, {"ArgumentList": "()"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "it"}, {"IdentifierName": "Current"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddEdgeCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "eiPrev"}]}, {"Argument": [{"IdentifierName": "ei"}]}, {"Argument": [{"IdentifierName": "coordList"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "eiPrev"}, {"IdentifierName": "ei"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "external"}}, "name": {"identifier": "x"}}, "value": {"scope": {"name": {"identifier": "internal"}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "external"}}, "name": {"identifier": "y"}}, "value": {"scope": {"name": {"identifier": "internal"}}, "name": {"identifier": "y"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cexternal"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "cinternal"}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cexternal"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "cinternal"}, {"IdentifierName": "Y"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "init"}}}, {"expression": {"scope": {"name": {"identifier": "root"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "min"}}, {"name": {"identifier": "max"}}, {"name": {"identifier": "visitor"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Init"}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_root"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "min"}]}, {"Argument": [{"IdentifierName": "max"}]}, {"Argument": [{"IdentifierName": "visitor"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts0"}, "initializer": {"scope": {"name": {"identifier": "ss0"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts1"}, "initializer": {"scope": {"name": {"identifier": "ss1"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "processIntersections"}, "arguments": [{"name": {"identifier": "ss0"}}, {"name": {"identifier": "i0"}}, {"name": {"identifier": "ss1"}}, {"name": {"identifier": "i1"}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "isDone"}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i1"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i1"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i1"}}}]}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts0"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i0"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i0"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i0"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss0"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss1"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i0"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts0"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i0"}]}, {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i1"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i1"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segInt"}, {"IdentifierName": "ProcessIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ss0"}]}, {"Argument": [{"IdentifierName": "i0"}]}, {"Argument": [{"IdentifierName": "ss1"}]}, {"Argument": [{"IdentifierName": "i1"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segInt"}, {"IdentifierName": "IsDone"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "setLocation"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "ON"}}, {"name": {"identifier": "location"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "SetLocation"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "On"}]}]}, {"Argument": [{"IdentifierName": "_location"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPts"}, "arguments": [{"name": {"identifier": "pt"}}, {"name": {"identifier": "isForward"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPts"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pt"}]}, {"Argument": [{"IdentifierName": "isForward"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compose"}, "arguments": [{"name": {"identifier": "translationInstance"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compose"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "TranslationInstance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "4"}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "value": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "3"}, "name": {"name": {"identifier": "pts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}]}}}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "DIFFERENCE"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Difference"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}, {"expression": {"name": {"identifier": "curveList"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_curveList"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "vorCells"}, "initializer": {"name": {"identifier": "getVoronoiCellPolygons"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geomFact"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "vorCells"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetVoronoiCellPolygons"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomFact"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryFactory"}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vorCells"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "name": {"identifier": "finder"}, "initializer": {"type": {"name": {"identifier": "InteriorIntersectionFinder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "finder"}}, "name": {"identifier": "setFindAllIntersections"}, "arguments": [{"value": "true"}]}}, {"expression": {"name": {"identifier": "finder"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "InteriorIntersectionFinder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "finder"}, {"IdentifierName": "FindAllIntersections"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"IdentifierName": "finder"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateList"}}, "name": {"identifier": "coord"}, "initializer": {"type": {"name": {"identifier": "CoordinateList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdNode"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "KdNode"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"thenExpr": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getCount"}}, "elseExpr": {"value": "1"}, "condition": {"name": {"identifier": "includeRepeated"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getCoordinate"}}, {"value": "true"}]}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "count"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "kdnodes"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "toCoordinateArray"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "kdnodes"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"IdentifierName": "includeRepeated"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "count"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "ToCoordinateArray"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "copy"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "g2"}}, "name": {"identifier": "normalize"}}}, {"expression": {"name": {"identifier": "g2"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Geometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Geometry"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g2"}, {"IdentifierName": "Normalize"}]}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "g2"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts0"}, "initializer": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts1"}, "initializer": {"scope": {"name": {"identifier": "e1"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "si"}}, "name": {"identifier": "addIntersections"}, "arguments": [{"name": {"identifier": "e0"}}, {"name": {"identifier": "i0"}}, {"name": {"identifier": "e1"}}, {"name": {"identifier": "i1"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts1"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i1"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i1"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i1"}}}]}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts0"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i0"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i0"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i0"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e1"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i0"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts0"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i0"}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i1"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts1"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i1"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "si"}, {"IdentifierName": "AddIntersections"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e0"}]}, {"Argument": [{"IdentifierName": "i0"}]}, {"Argument": [{"IdentifierName": "e1"}]}, {"Argument": [{"IdentifierName": "i1"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "orig"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "350.2"}, {"value": "4566.8"}, {"value": "5266.3"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "setCoordinate"}, "arguments": [{"name": {"identifier": "orig"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, {"value": "350.2"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, {"value": "4566.8"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "z"}}, {"value": "5266.3"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "350.2"}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "CoordinateValue"}, {"IdentifierName": "orig"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "350.2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Z"}]}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "toText"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToText"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "DD"}}, "arguments": [{"name": {"identifier": "dd"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dd"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "GeometryUtils"}}, "name": {"identifier": "readWKT"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "EdgeGraphBuilder"}}, "name": {"identifier": "build"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryUtils"}, {"IdentifierName": "ReadWKT"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EdgeGraphBuilder"}, {"IdentifierName": "Build"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isCCW"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsCcw"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "freeHoleList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "er"}}]}}]}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isHole"}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "edgeRings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "edgeRings"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "SetInResult"}]}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsHole"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "freeHoleList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shellList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "er"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, {"value": "false"}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "elseStmt": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "coordList"}}, "name": {"identifier": "add"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coords"}}}, {"value": "false"}]}}]}, "compare": {"operator": "GREATER_EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "length"}}}}]}], "update": [{"operator": "POSTFIX_DECREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "condition": {"name": {"identifier": "isForward"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IdentifierName": "isForward"}, {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coords"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"GreaterThanOrEqualExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"PostDecrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "coords"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"FalseLiteralExpression": "false"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "n"}, "initializer": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Geometry"}}}, "name": {"identifier": "revGeoms"}, "initializer": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{"dimension": {"name": {"identifier": "n"}}}]}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "revGeoms"}}}, "value": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometries"}}}, "name": {"identifier": "reverse"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"name": {"identifier": "revGeoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometries"}, {"IdentifierName": "Length"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"IdentifierName": "n"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_geometries"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "revGeoms"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "revGeoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "edgeMap"}}, "name": {"identifier": "put"}, "arguments": [{"name": {"identifier": "e"}}, {"name": {"identifier": "obj"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "edgeList"}}, "value": {}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "edgeMap"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}, {"IdentifierName": "obj"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "edgeList"}, {"NullLiteralExpression": "null"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "degree"}, "initializer": {"value": "0"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HalfEdge"}}, "name": {"identifier": "e"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "degree"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "e"}}, "value": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "oNext"}}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "e"}}}}, {"expression": {"name": {"identifier": "degree"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "HalfEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ThisExpression": "this"}]}]}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "degree"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "e"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "ONext"}]}]}]}]}, {"NotEqualsExpression": [{"IdentifierName": "e"}, {"ThisExpression": "this"}]}]}, {"ReturnStatement": [{"IdentifierName": "degree"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "lineComp"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "linearGeom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "componentIndex"}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"name": {"identifier": "segmentIndex"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "prev"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}]}}]}}, {"expression": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "prev"}}, {"name": {"identifier": "p0"}}]}}]}, "condition": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getNumPoints"}}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "lineComp"}}, "name": {"identifier": "getCoordinateN"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "segmentIndex"}}}]}}]}}, {"expression": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "linearGeom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_componentIndex"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segmentIndex"}]}]}]}]}]}]}]}, {"IfStatement": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "_segmentIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "1"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "NumPoints"}]}, {"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prev"}]}, {"Argument": [{"IdentifierName": "p0"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineComp"}, {"IdentifierName": "GetCoordinateN"}]}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "_segmentIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "getDimension"}}}, "left": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}}}}, {"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getLength"}}}, "left": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "1"}, "left": {"name": {"identifier": "getDimension"}}}, "left": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "covers"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isCovers"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Covers"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "IsRectangle"}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsCovers"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Edge"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "eCoord"}, "initializer": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "e"}}}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "p1"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"value": "1"}, "name": {"name": {"identifier": "eCoord"}}}]}, "left": {"scope": {"name": {"identifier": "p0"}}, "name": {"identifier": "equals"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "eCoord"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Edge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_edges"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p0"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "eCoord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "p1"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "eCoord"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "e"}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineMerger"}}, "name": {"identifier": "lineMerger"}, "initializer": {"type": {"name": {"identifier": "LineMerger"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "lineMerger"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "toGeometries"}, "arguments": [{"name": {"identifier": "inputWKT"}}]}]}}, {"expression": {"name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "toGeometries"}, "arguments": [{"name": {"identifier": "expectedOutputWKT"}}]}, {"scope": {"name": {"identifier": "lineMerger"}}, "name": {"identifier": "getMergedLineStrings"}}, {"name": {"identifier": "compareDirections"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LineMerger"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LineMerger"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineMerger"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToGeometries"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "inputWKT"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compare"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToGeometries"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedOutputWKT"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lineMerger"}, {"IdentifierName": "GetMergedLineStrings"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"IdentifierName": "compareDirections"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "reverse"}, "arguments": [{"name": {"identifier": "computeLinear"}, "arguments": [{"name": {"identifier": "end"}}, {"name": {"identifier": "start"}}]}]}}]}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "end"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "start"}}]}}}, {"expression": {"name": {"identifier": "computeLinear"}, "arguments": [{"name": {"identifier": "start"}}, {"name": {"identifier": "end"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "end"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Reverse"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ComputeLinear"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "end"}]}, {"Argument": [{"IdentifierName": "start"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeLinear"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "start"}]}, {"Argument": [{"IdentifierName": "end"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEquivalentClass"}, "arguments": [{"name": {"identifier": "other"}}]}}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}, "left": {"name": {"identifier": "isEmpty"}}}}, {"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "isEmpty"}}, "left": {"name": {"identifier": "isEmpty"}}}}, {"expression": {"name": {"identifier": "equal"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "other"}}}}, "name": {"identifier": "getCoordinate"}}, {"scope": {}, "name": {"identifier": "getCoordinate"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsEquivalentClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "IsEmpty"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "IsEmpty"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Equal"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "Coordinate"}]}]}, {"Argument": [{"IdentifierName": "Coordinate"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a1"}, "initializer": {"name": {"identifier": "angle"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "a2"}, "initializer": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "angle"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "angDel"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "a1"}}, "left": {"name": {"identifier": "a2"}}}}]}}, {"thenStmt": {"expression": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "Angle"}}, "name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angDel"}}}}, "condition": {"operator": "LESS_EQUALS", "right": {"operator": "MINUS", "expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}}, "left": {"name": {"identifier": "angDel"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "Angle"}}, "name": {"identifier": "PI_TIMES_2"}}, "left": {"name": {"identifier": "angDel"}}}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "PI"}}, "left": {"name": {"identifier": "angDel"}}}}, {"expression": {"name": {"identifier": "angDel"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Angle"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Angle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "a2"}, {"IdentifierName": "a1"}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"IdentifierName": "angDel"}, {"UnaryMinusExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}]}, {"ReturnStatement": [{"AddExpression": [{"IdentifierName": "angDel"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "AngleUtility"}, {"IdentifierName": "PiTimes2"}]}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "angDel"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "System"}, {"IdentifierName": "Math"}]}, {"IdentifierName": "PI"}]}]}, {"ReturnStatement": [{"SubtractExpression": [{"IdentifierName": "angDel"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "AngleUtility"}, {"IdentifierName": "PiTimes2"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "angDel"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomFactory"}}, "value": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getFactory"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "graph"}}, "value": {"type": {"name": {"identifier": "PolygonizeGraph"}}, "arguments": [{"name": {"identifier": "geomFactory"}}]}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "graph"}}}}, {"expression": {"scope": {"name": {"identifier": "graph"}}, "name": {"identifier": "addEdge"}, "arguments": [{"name": {"identifier": "line"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_geomFactory"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Factory"}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_graph"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_graph"}, {"ObjectCreationExpression": [{"IdentifierName": "PolygonizeGraph"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Factory"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_graph"}, {"IdentifierName": "AddEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "line"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "c"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "350.2"}, {"value": "4566.8"}, {"value": "5266.3"}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "x"}}, {"value": "350.2"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "y"}}, {"value": "4566.8"}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"scope": {"name": {"identifier": "c"}}, "name": {"identifier": "z"}}, {"value": "5266.3"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "350.2"}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"NumericLiteralExpression": "350.2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"NumericLiteralExpression": "4566.8"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "c"}, {"IdentifierName": "Z"}]}]}, {"Argument": [{"NumericLiteralExpression": "5266.3"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "nextToken"}, "initializer": {"name": {"identifier": "getNextEmptyOrOpener"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"elementType": {"name": {"identifier": "Point"}}, "levels": [{"dimension": {"value": "0"}}]}]}}]}, "condition": {"scope": {"name": {"identifier": "nextToken"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "EMPTY"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "nextWord"}, "initializer": {"name": {"identifier": "lookaheadWord"}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"name": {"identifier": "toPoints"}, "arguments": [{"name": {"identifier": "getCoordinatesNoLeftParen"}}]}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {"name": {"identifier": "L_PAREN"}}, "left": {"name": {"identifier": "nextWord"}}}}]}, "condition": {"name": {"identifier": "ALLOW_OLD_JTS_MULTIPOINT_SYNTAX"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ArrayList"}}, "name": {"identifier": "points"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "point"}, "initializer": {"name": {"identifier": "readPointText"}}}]}}, {"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "point"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nextToken"}}, "value": {"name": {"identifier": "getNextCloserOrComma"}}}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "point"}}, "value": {"name": {"identifier": "readPointText"}}}}, {"expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "point"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nextToken"}}, "value": {"name": {"identifier": "getNextCloserOrComma"}}}}]}, "condition": {"scope": {"name": {"identifier": "nextToken"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "COMMA"}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "name": {"identifier": "array"}, "initializer": {"elementType": {"name": {"identifier": "Point"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "size"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geometryFactory"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Point"}}}, "expression": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "toArray"}, "arguments": [{"name": {"identifier": "array"}}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"FalseLiteralExpression": "false"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "tokens"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}, {"Argument": [{"IdentifierName": "hasZ"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToPoints"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "ToSequence"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hasZ"}]}, {"Argument": [{"IdentifierName": "coords"}]}]}]}]}, {"Argument": [{"IdentifierName": "factory"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "sections"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "GeometryComponentFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "seq"}}, "value": {"scope": {"inner": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}, "name": {"identifier": "getCoordinateSequence"}}}}, {"expression": {"name": {"identifier": "addFacetSequences"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "sections"}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "seq"}}, "value": {"scope": {"inner": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}, "name": {"identifier": "getCoordinateSequence"}}}}, {"expression": {"name": {"identifier": "addFacetSequences"}, "arguments": [{"name": {"identifier": "seq"}}, {"name": {"identifier": "sections"}}]}}]}, "condition": {"type": {"name": {"identifier": "Point"}}, "expression": {"name": {"identifier": "geom"}}}}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "geom"}}}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}}]}]}]}}, {"expression": {"name": {"identifier": "sections"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "FacetSequence"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryComponentFilter"}, {"ArgumentList": [{"Argument": [{"AnonymousMethodExpression": [{"ParameterList": [{"Parameter": [{"IdentifierName": "IGeometry"}]}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": "seq"}]}]}, {"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "ILineString"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "seq"}, {"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "ILineString"}, {"IdentifierName": "geom"}]}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddFacetSequences"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "sections"}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "IPoint"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "seq"}, {"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IPoint"}, {"IdentifierName": "geom"}]}]}, {"IdentifierName": "CoordinateSequence"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddFacetSequences"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "seq"}]}, {"Argument": [{"IdentifierName": "sections"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "sections"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "ip"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getInteriorPoint"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "contains"}, "arguments": [{"name": {"identifier": "ip"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "InteriorPoint"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ip"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "16"}, {"scope": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"scope": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "FLOATING"}}]}, "name": {"identifier": "getMaximumSignificantDigits"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "6"}, {"scope": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"scope": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "FLOATING_SINGLE"}}]}, "name": {"identifier": "getMaximumSignificantDigits"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"scope": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "FIXED"}}]}, "name": {"identifier": "getMaximumSignificantDigits"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "4"}, {"scope": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"value": "1000"}]}, "name": {"identifier": "getMaximumSignificantDigits"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "16"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModels"}, {"IdentifierName": "Floating"}]}]}]}]}, {"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "6"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModels"}, {"IdentifierName": "FloatingSingle"}]}]}]}]}, {"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PrecisionModels"}, {"IdentifierName": "Fixed"}]}]}]}]}, {"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "4"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1000"}]}]}]}, {"IdentifierName": "MaximumSignificantDigits"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "fact"}, "initializer": {"type": {"name": {"identifier": "GeometryFactory"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "p1"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPoint"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "p1"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Point"}}, "name": {"identifier": "p2"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createPoint"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "p2"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "MultiPoint"}}, "name": {"identifier": "mpt"}, "initializer": {"scope": {"name": {"identifier": "fact"}}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "1"}]}]}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"name": {"identifier": "mpt"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPoint"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPoint"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IMultiPoint"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "fact"}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mpt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "buf"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "errMsg"}, "initializer": {"scope": {"name": {"identifier": "BufferResultValidator"}}, "name": {"identifier": "isValidMsg"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "distance"}}, {"name": {"identifier": "buf"}}]}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "IllegalStateException"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "errMsg"}}, "left": {"value": "Buffer Validation error: "}}]}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "errMsg"}}}}, {"expression": {"name": {"identifier": "buf"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "BufferResultValidator"}, {"IdentifierName": "IsValidMessage"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"IdentifierName": "buf"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "errMsg"}, {"NullLiteralExpression": "null"}]}, {"ThrowStatement": [{"ObjectCreationExpression": [{"IdentifierName": "InvalidOperationException"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "errMsg"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "buf"}]}]}}, {"java_ast": {"statements": [{"expression": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_x"}]}, {"Argument": [{"IdentifierName": "_y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"scope": {"name": {"identifier": "SubgraphDepthLocater"}}, "name": {"identifier": "DepthSegment"}}, "name": {"identifier": "ds0"}, "initializer": {"name": {"identifier": "depthSeg"}, "arguments": [{"value": "0.7"}, {"value": "0.2"}, {"value": "1.4"}, {"value": "0.9"}]}}]}}, {"expression": {"variables": [{"type": {"scope": {"name": {"identifier": "SubgraphDepthLocater"}}, "name": {"identifier": "DepthSegment"}}, "name": {"identifier": "ds1"}, "initializer": {"name": {"identifier": "depthSeg"}, "arguments": [{"value": "0.3"}, {"value": "1.1"}, {"value": "0.7"}, {"value": "0.2"}]}}]}}, {"expression": {"name": {"identifier": "checkContract"}, "arguments": [{"name": {"identifier": "ds0"}}, {"name": {"identifier": "ds1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "depthSeg"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.7"}]}, {"Argument": [{"NumericLiteralExpression": "0.2"}]}, {"Argument": [{"NumericLiteralExpression": "1.4"}]}, {"Argument": [{"NumericLiteralExpression": "0.9"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "depthSeg"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.3"}]}, {"Argument": [{"NumericLiteralExpression": "1.1"}]}, {"Argument": [{"NumericLiteralExpression": "0.7"}]}, {"Argument": [{"NumericLiteralExpression": "0.2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "checkContract"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ds0"}]}, {"Argument": [{"IdentifierName": "ds1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "buffer"}, "arguments": [{"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "union"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Union"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"scope": {}, "name": {"identifier": "getClass"}}, "name": {"identifier": "getName"}}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "getClass"}}, "name": {"identifier": "getName"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "GetType"}, {"ArgumentList": "()"}]}, {"IdentifierName": "FullName"}]}, {"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "GetType"}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "FullName"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "DefaultCoordinateSequenceFactory"}}, "name": {"identifier": "instance"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IdentifierName": "Instance"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "min"}, "arguments": [{"scope": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "computeSizeBasedSnapTolerance"}, "arguments": [{"name": {"identifier": "g0"}}]}, {"scope": {"name": {"identifier": "GeometrySnapper"}}, "name": {"identifier": "computeSizeBasedSnapTolerance"}, "arguments": [{"name": {"identifier": "g1"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Min"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometrySnapper"}, {"IdentifierName": "ComputeSizeBasedSnapTolerance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}]}]}]}, {"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometrySnapper"}, {"IdentifierName": "ComputeSizeBasedSnapTolerance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "checkMultiplyDivide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI"}}, {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkMultiplyDivide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "TWO_PI"}}, {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkMultiplyDivide"}, "arguments": [{"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "PI_2"}}, {"scope": {"name": {"identifier": "DD"}}, "name": {"identifier": "E"}}, {"value": "1e-30"}]}}, {"expression": {"name": {"identifier": "checkMultiplyDivide"}, "arguments": [{"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "39.4"}]}, {"type": {"name": {"identifier": "DD"}}, "arguments": [{"value": "10"}]}, {"value": "1e-30"}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMultiplyDivide"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PI"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMultiplyDivide"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "TwoPi"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMultiplyDivide"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "PiHalf"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DD"}, {"IdentifierName": "E"}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckMultiplyDivide"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "39.4"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DD"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "1e-30"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x1"}, "initializer": {"scope": {"index": {"index": {"name": {"identifier": "chainIndex"}}, "name": {"name": {"identifier": "startIndex"}}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "x"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x2"}, "initializer": {"scope": {"index": {"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "chainIndex"}}}, "name": {"name": {"identifier": "startIndex"}}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "x"}}}]}}, {"expression": {"thenExpr": {"name": {"identifier": "x1"}}, "elseExpr": {"name": {"identifier": "x2"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "x2"}}, "left": {"name": {"identifier": "x1"}}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "chainIndex"}]}]}]}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "startIndex"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "chainIndex"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}, {"IdentifierName": "X"}]}]}]}]}]}, {"ReturnStatement": [{"ConditionalExpression": [{"GreaterThanExpression": [{"IdentifierName": "x1"}, {"IdentifierName": "x2"}]}, {"IdentifierName": "x1"}, {"IdentifierName": "x2"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "centre"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}, {"IdentifierName": "Centre"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "isRectangle"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "IsRectangle"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "upwardSeg"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_upwardSeg"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "expectedBuffer"}}, "name": {"identifier": "isEmpty"}}, "left": {"scope": {"name": {"identifier": "actualBuffer"}}, "name": {"identifier": "isEmpty"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isSymDiffAreaInTolerance"}, "arguments": [{"name": {"identifier": "actualBuffer"}}, {"name": {"identifier": "expectedBuffer"}}]}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isBoundaryHausdorffDistanceInTolerance"}, "arguments": [{"name": {"identifier": "actualBuffer"}}, {"name": {"identifier": "expectedBuffer"}}, {"name": {"identifier": "distance"}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "actualBuffer"}, {"IdentifierName": "IsEmpty"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "expectedBuffer"}, {"IdentifierName": "IsEmpty"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsSymDiffAreaInTolerance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "actualBuffer"}]}, {"Argument": [{"IdentifierName": "expectedBuffer"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsBoundaryHausdorffDistanceInTolerance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "actualBuffer"}]}, {"Argument": [{"IdentifierName": "expectedBuffer"}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}]}}, {"expression": {"name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "formatter"}}, "name": {"identifier": "format"}, "arguments": [{"name": {"identifier": "d"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "d"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_format"}]}, {"Argument": [{"IdentifierName": "_formatter"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_useMaxPrecision"}]}, {"Block": [{"ReturnStatement": [{"IdentifierName": "standard"}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Convert"}, {"IdentifierName": "ToDouble"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "standard"}]}, {"Argument": [{"IdentifierName": "_formatter"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "converted"}, {"IdentifierName": "d"}]}, {"ReturnStatement": [{"IdentifierName": "standard"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "String"}, {"IdentifierName": "Format"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_formatter"}]}, {"Argument": [{"IdentifierName": "MaxPrecisionFormat"}]}, {"Argument": [{"IdentifierName": "d"}]}]}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "OverflowException"}]}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "String"}, {"IdentifierName": "Format"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_formatter"}]}, {"Argument": [{"IdentifierName": "MaxPrecisionFormat"}]}, {"Argument": [{"IdentifierName": "d"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "ConvexHull"}}, "arguments": [{}]}}, "name": {"identifier": "getConvexHull"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "ConvexHull"}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}, {"IdentifierName": "GetConvexHull"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"name": {"identifier": "n"}}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"value": "100"}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"value": "100"}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "n"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "pts"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"IdentifierName": "n"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "n"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"NumericLiteralExpression": "100"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "random"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"NumericLiteralExpression": "100"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "random"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pts"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "count"}}, "value": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "count"}}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_count"}, {"AddExpression": [{"IdentifierName": "_count"}, {"NumericLiteralExpression": "1"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segs"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "segs"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "BasicSegmentString"}}, "arguments": [{"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}, {}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "segs"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "ILineString"}, {"IdentifierName": "lines"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segs"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "BasicSegmentString"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segs"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "createParentBoundablesFromVerticalSlice"}, "arguments": [{"name": {"identifier": "childBoundables"}}, {"name": {"identifier": "newLevel"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "CreateParentBoundablesFromVerticalSlice"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundables"}]}, {"Argument": [{"IdentifierName": "newLevel"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "defaultMatcher"}}, "name": {"identifier": "isMatch"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "opName"}}, {"name": {"identifier": "args"}}, {"name": {"identifier": "actualResult"}}, {"name": {"identifier": "expectedResult"}}, {"name": {"identifier": "tolerance"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "opName"}}, "name": {"identifier": "equalsIgnoreCase"}, "arguments": [{"value": "buffer"}]}}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distance"}, "initializer": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "parseDouble"}, "arguments": [{"type": {"name": {"identifier": "String"}}, "expression": {"index": {"value": "0"}, "name": {"name": {"identifier": "args"}}}}]}}]}}, {"expression": {"name": {"identifier": "isBufferResultMatch"}, "arguments": [{"scope": {"inner": {"type": {"name": {"identifier": "GeometryResult"}}, "expression": {"name": {"identifier": "actualResult"}}}}, "name": {"identifier": "getGeometry"}}, {"scope": {"inner": {"type": {"name": {"identifier": "GeometryResult"}}, "expression": {"name": {"identifier": "expectedResult"}}}}, "name": {"identifier": "getGeometry"}}, {"name": {"identifier": "distance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsMatch"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "args"}]}, {"Argument": [{"AsExpression": [{"IdentifierName": "actualResult"}, {"IdentifierName": "GeometryResult"}]}]}, {"Argument": [{"AsExpression": [{"IdentifierName": "expectedResult"}, {"IdentifierName": "GeometryResult"}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ptRadius"}, "initializer": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "error"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"name": {"identifier": "ptRadius"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "Assert"}}, "name": {"identifier": "shouldNeverReachHere"}}}]}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "tolerance"}}, "left": {"name": {"identifier": "error"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "ptRadius"}, {"IdentifierName": "radius"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "LessOrEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "error"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "add"}, "arguments": [{"operator": "MINUS", "expression": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"UnaryMinusExpression": [{"IdentifierName": "y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "resultAreaEdgeList"}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "resultAreaEdgeList"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "resultAreaEdgeList"}}, "value": {"type": {"name": {"identifier": "ArrayList"}}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "resultAreaEdgeList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}, "condition": {"operator": "OR", "right": {"scope": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}, "name": {"identifier": "isInResult"}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInResult"}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "resultAreaEdgeList"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_resultAreaEdgeList"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"IdentifierName": "_resultAreaEdgeList"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_resultAreaEdgeList"}, {"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"ArgumentList": "()"}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "Edges"}, {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInResult"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "IsInResult"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_resultAreaEdgeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "_resultAreaEdgeList"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setLabel"}, "arguments": [{"name": {"identifier": "label"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "dirEdges"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "dirEdges"}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "label"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geoms"}, "initializer": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}, "name": {"identifier": "createMultiPoint"}, "arguments": [{"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"IdentifierName": "g1"}, {"IdentifierName": "g2"}]}]}]}]}]}, {"IdentifierName": "CreateMultiPoint"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Quadtree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "buildQuadtree"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "queryEnv"}}, "value": {"name": {"identifier": "geoms"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "queryEnv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "query"}, "arguments": [{"scope": {"name": {"identifier": "queryEnv"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "result"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "BuildQuadtree"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "queryEnv"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "result"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "currTri"}}, "name": {"identifier": "getNeighbours"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "name": {"identifier": "neighTri"}, "initializer": {"type": {"name": {"identifier": "QuadEdgeTriangle"}}, "expression": {"scope": {"scope": {"scope": {"name": {"identifier": "currTri"}}, "name": {"identifier": "getEdge"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "sym"}}, "name": {"identifier": "getData"}}}}]}}, {"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "neighTri"}}}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "triQueue"}}, "name": {"identifier": "addLast"}, "arguments": [{"name": {"identifier": "neighTri"}}]}}, "condition": {"scope": {"name": {"identifier": "visitor"}}, "name": {"identifier": "visit"}, "arguments": [{"name": {"identifier": "currTri"}}, {"name": {"identifier": "i"}}, {"name": {"identifier": "neighTri"}}]}}]}, "compare": {"operator": "LESS", "right": {"value": "3"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "currTri"}, {"IdentifierName": "GetNeighbours"}]}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "3"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdgeTriangle"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "QuadEdgeTriangle"}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "currTri"}, {"IdentifierName": "GetEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Sym"}]}, {"IdentifierName": "Data"}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "neighTri"}, {"NullLiteralExpression": "null"}]}, {"ContinueStatement": "continue;"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "visitor"}, {"IdentifierName": "Visit"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "currTri"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "neighTri"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_triQueue"}, {"IdentifierName": "AddLast"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "neighTri"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Distance"}}, "name": {"identifier": "pointToSegment"}, "arguments": [{"name": {"identifier": "p"}}, {"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "DistancePointLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"name": {"identifier": "components"}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "Collections"}}, "name": {"identifier": "sort"}, "arguments": [{"name": {"identifier": "geoms"}}, {"type": {"name": {"identifier": "GeometryAreaComparator"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "setUserData"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getArea"}}]}}]}, "variable": {"variables": [{"type": {"name": {"identifier": "Object"}}, "name": {"identifier": "o"}}]}, "iterable": {"name": {"identifier": "geoms"}}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Components"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Sort"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryAreaComparator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geoms"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "UserData"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Area"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "LESS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "startPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "get"}, "arguments": [{"value": "0"}]}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "lastPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}]}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "last2Pt"}, "initializer": {}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "last2Pt"}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "MINUS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}]}}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "startPt"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "lastPt"}}]}}, {"expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "startPt"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_ptList"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_ptList"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "startPt"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lastPt"}]}]}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startPt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometrySnapRounder"}}, "name": {"identifier": "gsr"}, "initializer": {"type": {"name": {"identifier": "GeometrySnapRounder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "gsr"}}, "name": {"identifier": "setLineworkOnly"}, "arguments": [{"value": "true"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snapped"}, "initializer": {"scope": {"name": {"identifier": "gsr"}}, "name": {"identifier": "execute"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"expression": {"name": {"identifier": "snapped"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometrySnapRounder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsr"}, {"IdentifierName": "LineworkOnly"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsr"}, {"IdentifierName": "Execute"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapped"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "bufParam"}, "initializer": {"type": {"name": {"identifier": "BufferParameters"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "bufParam"}}, "name": {"identifier": "setSingleSided"}, "arguments": [{"value": "true"}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "OffsetCurveBuilder"}}, "name": {"identifier": "ocb"}, "initializer": {"type": {"name": {"identifier": "OffsetCurveBuilder"}}, "arguments": [{"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "getPrecisionModel"}}, {"name": {"identifier": "bufParam"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "ocb"}}, "name": {"identifier": "getLineCurve"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "curve"}, "initializer": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}}, {"expression": {"name": {"identifier": "curve"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IBufferParameters"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "BufferParameters"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bufParam"}, {"IdentifierName": "IsSingleSided"}]}, {"TrueLiteralExpression": "true"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "OffsetCurveBuilder"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "PrecisionModel"}]}]}, {"Argument": [{"IdentifierName": "bufParam"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ocb"}, {"IdentifierName": "GetLineCurve"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}, {"Argument": [{"IdentifierName": "distance"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "curve"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "CoordinateList"}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geom"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"name": {"identifier": "unique"}, "arguments": [{"name": {"identifier": "coords"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "geom"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "CoordinateList"}, {"ArgumentList": "()"}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Unique"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coords"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "hi"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "IsNaN"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "value"}, {"IdentifierName": "_hi"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "xm"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ym"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "zm"}, "initializer": {"operator": "DIVIDE", "right": {"value": "2.0"}, "left": {"inner": {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getZ"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "z"}}}}}}]}}, {"expression": {"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"name": {"identifier": "xm"}}, {"name": {"identifier": "ym"}}, {"name": {"identifier": "zm"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "X"}]}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Y"}]}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "Z"}]}]}]}, {"NumericLiteralExpression": "2.0"}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xm"}]}, {"Argument": [{"IdentifierName": "ym"}]}, {"Argument": [{"IdentifierName": "zm"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "result"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "result"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "func"}}, "name": {"identifier": "execute"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coll"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "object"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"PredefinedType": "object"}, {"IdentifierName": "coll"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "result"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "func"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "obj"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "tolerance"}, "initializer": {"value": "0.5"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minx"}}, "value": {"operator": "MINUS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "maxx"}}, "value": {"operator": "PLUS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "x"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "miny"}}, "value": {"operator": "MINUS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "maxy"}}, "value": {"operator": "PLUS", "right": {"name": {"identifier": "tolerance"}}, "left": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "y"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "corner"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "maxx"}}, {"name": {"identifier": "maxy"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "corner"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "minx"}}, {"name": {"identifier": "maxy"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "2"}, "name": {"name": {"identifier": "corner"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "minx"}}, {"name": {"identifier": "miny"}}]}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "3"}, "name": {"name": {"identifier": "corner"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"name": {"identifier": "maxx"}}, {"name": {"identifier": "miny"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0.5"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minx"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}, {"IdentifierName": "tolerance"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_maxx"}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "X"}]}, {"IdentifierName": "tolerance"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_miny"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "tolerance"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_maxy"}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "tolerance"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_corner"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_maxx"}]}, {"Argument": [{"IdentifierName": "_maxy"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_corner"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_minx"}]}, {"Argument": [{"IdentifierName": "_maxy"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_corner"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_minx"}]}, {"Argument": [{"IdentifierName": "_miny"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_corner"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_maxx"}]}, {"Argument": [{"IdentifierName": "_miny"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "s1"}, "initializer": {"scope": {"scope": {"name": {"identifier": "CoordinateArraySequenceFactory"}}, "name": {"identifier": "instance"}}, "name": {"identifier": "create"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "1"}, {"value": "2"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "3"}, {"value": "4"}]}]}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "s2"}, "initializer": {"type": {"name": {"identifier": "CoordinateSequence"}}, "expression": {"scope": {"name": {"identifier": "s1"}}, "name": {"identifier": "copy"}}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"scope": {"name": {"identifier": "s1"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}, "name": {"identifier": "equals"}, "arguments": [{"scope": {"name": {"identifier": "s2"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "s2"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}, "left": {"scope": {"name": {"identifier": "s1"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArraySequenceFactory"}, {"IdentifierName": "Instance"}]}, {"IdentifierName": "Create"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "3"}]}, {"Argument": [{"NumericLiteralExpression": "4"}]}]}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ICoordinateSequence"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s1"}, {"IdentifierName": "Clone"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s1"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s2"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"NotEqualsExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s1"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s2"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "30"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "0"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "11"}, {"value": "90"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasIntersection"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersectionNum"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "isProper"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "11"}]}, {"Argument": [{"NumericLiteralExpression": "90"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "HasIntersection"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IsProper"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "computeIntersection"}, "arguments": [{"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "30"}, {"value": "10"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "30"}, {"value": "30"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "10"}, {"value": "10"}]}, {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "90"}, {"value": "11"}]}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasIntersection"}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"value": "1"}, {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "getIntersectionNum"}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "isProper"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "ComputeIntersection"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "30"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "30"}]}, {"Argument": [{"NumericLiteralExpression": "30"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "10"}]}, {"Argument": [{"NumericLiteralExpression": "10"}]}]}]}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "90"}]}, {"Argument": [{"NumericLiteralExpression": "11"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "HasIntersection"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IntersectionNum"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "i"}, {"IdentifierName": "IsProper"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "instance"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"IdentifierName": "instance"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {}, "name": {"identifier": "minDistance"}}, "value": {"name": {"identifier": "dist"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "index"}, "initializer": {"thenExpr": {"value": "1"}, "elseExpr": {"value": "0"}, "condition": {"name": {"identifier": "flip"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"name": {"identifier": "loc0"}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "MINUS", "right": {"name": {"identifier": "index"}}, "left": {"value": "1"}}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"name": {"identifier": "loc1"}}}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isDone"}}, "value": {"value": "true"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "terminateDistance"}}, "left": {"name": {"identifier": "minDistance"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "dist"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ConditionalExpression": [{"IdentifierName": "flip"}, {"NumericLiteralExpression": "1"}, {"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "loc0"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"NumericLiteralExpression": "1"}, {"IdentifierName": "index"}]}]}]}]}, {"IdentifierName": "loc1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_minDistance"}, {"IdentifierName": "_terminateDistance"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_isDone"}, {"TrueLiteralExpression": "true"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"scope": {"name": {"identifier": "SubgraphDepthLocater"}}, "name": {"identifier": "DepthSegment"}}, "name": {"identifier": "ds0"}, "initializer": {"name": {"identifier": "depthSeg"}, "arguments": [{"value": "0.1"}, {"value": "1.9"}, {"value": "0.5"}, {"value": "1.0"}]}}]}}, {"expression": {"variables": [{"type": {"scope": {"name": {"identifier": "SubgraphDepthLocater"}}, "name": {"identifier": "DepthSegment"}}, "name": {"identifier": "ds1"}, "initializer": {"name": {"identifier": "depthSeg"}, "arguments": [{"value": "1.0"}, {"value": "0.9"}, {"value": "1.9"}, {"value": "1.4"}]}}]}}, {"expression": {"name": {"identifier": "checkContract"}, "arguments": [{"name": {"identifier": "ds0"}}, {"name": {"identifier": "ds1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "depthSeg"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.1"}]}, {"Argument": [{"NumericLiteralExpression": "1.9"}]}, {"Argument": [{"NumericLiteralExpression": "0.5"}]}, {"Argument": [{"NumericLiteralExpression": "1.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "depthSeg"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.9"}]}, {"Argument": [{"NumericLiteralExpression": "1.9"}]}, {"Argument": [{"NumericLiteralExpression": "1.4"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "checkContract"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ds0"}]}, {"Argument": [{"IdentifierName": "ds1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"thenExpr": {"inner": {"name": {"identifier": "a"}}}, "elseExpr": {"operator": "MINUS", "expression": {"inner": {"name": {"identifier": "a"}}}}, "condition": {"operator": "GREATER_EQUALS", "right": {"value": "0.0"}, "left": {"inner": {"name": {"identifier": "a"}}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"ConditionalExpression": [{"GreaterThanOrEqualExpression": [{"ParenthesizedExpression": [{"IdentifierName": "a"}]}, {"NumericLiteralExpression": "0.0"}]}, {"ParenthesizedExpression": [{"IdentifierName": "a"}]}, {"UnaryMinusExpression": [{"ParenthesizedExpression": [{"IdentifierName": "a"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isSolvable"}, "initializer": {"name": {"identifier": "compute"}}}]}}, {"thenStmt": {"expression": {"type": {"name": {"identifier": "AffineTransformation"}}, "arguments": [{"name": {"identifier": "m00"}}, {"name": {"identifier": "m01"}}, {"name": {"identifier": "m02"}}, {"name": {"identifier": "m10"}}, {"name": {"identifier": "m11"}}, {"name": {"identifier": "m12"}}]}}, "condition": {"name": {"identifier": "isSolvable"}}}, {"expression": {}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Compute"}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "isSolvable"}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_m00"}]}, {"Argument": [{"IdentifierName": "_m01"}]}, {"Argument": [{"IdentifierName": "_m02"}]}, {"Argument": [{"IdentifierName": "_m10"}]}, {"Argument": [{"IdentifierName": "_m11"}]}, {"Argument": [{"IdentifierName": "_m12"}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "shell"}, "initializer": {"scope": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "findEdgeRingContaining"}, "arguments": [{"name": {"identifier": "holeER"}}, {"name": {"identifier": "shellList"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "shell"}}, "name": {"identifier": "addHole"}, "arguments": [{"name": {"identifier": "holeER"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "shell"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EdgeRing"}, {"IdentifierName": "FindEdgeRingContaining"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holeEdgeRing"}]}, {"Argument": [{"IdentifierName": "shellList"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "shell"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "shell"}, {"IdentifierName": "AddHole"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "holeEdgeRing"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "doTest"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "QUERY_ENVELOPE_EXTENT_1"}}, {"name": {"identifier": "sourceData"}}]}}, {"expression": {"name": {"identifier": "doTest"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "QUERY_ENVELOPE_EXTENT_2"}}, {"name": {"identifier": "sourceData"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "SpatialIndex"}]}, {"Argument": [{"IdentifierName": "QueryEnvelopeExtent1"}]}, {"Argument": [{"IdentifierName": "_sourceData"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "DoTest"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "SpatialIndex"}]}, {"Argument": [{"IdentifierName": "QueryEnvelopeExtent2"}]}, {"Argument": [{"IdentifierName": "_sourceData"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "clip"}, "initializer": {"scope": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "mask"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "clip"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "a"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "geoms"}}, {"name": {"identifier": "a"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "a"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "mask"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "clip"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geoms"}]}, {"Argument": [{"IdentifierName": "a"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minSegLen"}, "initializer": {"name": {"identifier": "computeMinimumSegmentLength"}, "arguments": [{"name": {"identifier": "ringPts"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "snapTol"}, "initializer": {"operator": "DIVIDE", "right": {"value": "10"}, "left": {"name": {"identifier": "minSegLen"}}}}]}}, {"expression": {"name": {"identifier": "snapTol"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ComputeMinimumSegmentLength"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "ringPts"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"DivideExpression": [{"IdentifierName": "minSegLen"}, {"NumericLiteralExpression": "10"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "snapTol"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "setSym"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "setSym"}, "arguments": [{}]}}, {"expression": {"name": {"identifier": "setNext"}, "arguments": [{"name": {"identifier": "e"}}]}}, {"expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "setNext"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Sym"}, {"IdentifierName": "e"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}, {"ThisExpression": "this"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Next"}, {"IdentifierName": "e"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Next"}]}, {"ThisExpression": "this"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LocationIndexedLine"}}, "name": {"identifier": "indexedLine"}, "initializer": {"type": {"name": {"identifier": "LocationIndexedLine"}}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "afterLoc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "afterPt"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "testLoc"}, "initializer": {"scope": {"name": {"identifier": "indexedLine"}}, "name": {"identifier": "indexOfAfter"}, "arguments": [{"name": {"identifier": "testPt"}}, {"name": {"identifier": "afterLoc"}}]}}]}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "testLoc"}}, "name": {"identifier": "compareTo"}, "arguments": [{"name": {"identifier": "afterLoc"}}]}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LocationIndexedLine"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LocationIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOf"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "IndexOfAfter"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}, {"Argument": [{"IdentifierName": "loc1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc2"}, {"IdentifierName": "CompareTo"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc1"}]}]}]}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "indexedLine"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "loc2"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt1"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt2"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testPt"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "circumcentre"}, "arguments": [{"scope": {}, "name": {"identifier": "p0"}}, {"scope": {}, "name": {"identifier": "p1"}}, {"scope": {}, "name": {"identifier": "p2"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Circumcentre"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}, {"Argument": [{"IdentifierName": "_p2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geom"}}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "elemGeom"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "elemGeom"}}, "name": {"identifier": "isEmpty"}}, "left": {"name": {"identifier": "skipEmpty"}}}}, {"expression": {"scope": {"name": {"identifier": "elems"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "elemGeom"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "geom"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "SkipEmpty"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "elemGeom"}, {"IdentifierName": "IsEmpty"}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "elems"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elemGeom"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}]}}, {}]}, "condition": {"operator": "LESS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "OFFSET_SEGMENT_SEPARATION_FACTOR"}}, "left": {"name": {"identifier": "distance"}}}, "left": {"scope": {"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}, "name": {"identifier": "distance"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}]}}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "addMitreJoin"}, "arguments": [{"name": {"identifier": "s1"}}, {"name": {"identifier": "offset0"}}, {"name": {"identifier": "offset1"}}, {"name": {"identifier": "distance"}}]}}]}, "elseStmt": {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "addBevelJoin"}, "arguments": [{"name": {"identifier": "offset0"}}, {"name": {"identifier": "offset1"}}]}}]}, "elseStmt": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}]}}, "condition": {"name": {"identifier": "addStartPoint"}}}, {"expression": {"name": {"identifier": "addCornerFillet"}, "arguments": [{"name": {"identifier": "s1"}}, {"scope": {"name": {"identifier": "offset0"}}, "name": {"identifier": "p1"}}, {"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}, {"name": {"identifier": "orientation"}}, {"name": {"identifier": "distance"}}]}}, {"expression": {"scope": {"name": {"identifier": "segList"}}, "name": {"identifier": "addPt"}, "arguments": [{"scope": {"name": {"identifier": "offset1"}}, "name": {"identifier": "p0"}}]}}]}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "JOIN_BEVEL"}}, "left": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getJoinStyle"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "BufferParameters"}}, "name": {"identifier": "JOIN_MITRE"}}, "left": {"scope": {"name": {"identifier": "bufParams"}}, "name": {"identifier": "getJoinStyle"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "_distance"}, {"IdentifierName": "OffsetSegmentSeparationFactor"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}]}]}]}]}, {"ReturnStatement": "return;"}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "JoinStyle"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "JoinStyle"}, {"IdentifierName": "Mitre"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddMitreJoin"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_s1"}]}, {"Argument": [{"IdentifierName": "_offset0"}]}, {"Argument": [{"IdentifierName": "_offset1"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}, {"ElseClause": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_bufParams"}, {"IdentifierName": "JoinStyle"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "JoinStyle"}, {"IdentifierName": "Bevel"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddBevelJoin"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_offset0"}]}, {"Argument": [{"IdentifierName": "_offset1"}]}]}]}]}]}, {"ElseClause": [{"Block": [{"IfStatement": [{"IdentifierName": "addStartPoint"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddFillet"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_s1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset0"}, {"IdentifierName": "P1"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"IdentifierName": "orientation"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_segList"}, {"IdentifierName": "AddPt"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_offset1"}, {"IdentifierName": "P0"}]}]}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "size"}, "initializer": {"scope": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "powerOf2"}, "arguments": [{"name": {"identifier": "level"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "pt"}}, "value": {"operator": "MULTIPLY", "right": {"name": {"identifier": "size"}}, "left": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "floor"}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "size"}}, "left": {"scope": {"name": {"identifier": "itemInterval"}}, "name": {"identifier": "getMin"}}}]}}}}, {"expression": {"scope": {"name": {"identifier": "interval"}}, "name": {"identifier": "init"}, "arguments": [{"name": {"identifier": "pt"}}, {"operator": "PLUS", "right": {"name": {"identifier": "size"}}, "left": {"name": {"identifier": "pt"}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DoubleBits"}, {"IdentifierName": "PowerOf2"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_pt"}, {"MultiplyExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Math"}, {"IdentifierName": "Floor"}]}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "itemInterval"}, {"IdentifierName": "Min"}]}, {"IdentifierName": "size"}]}]}]}]}, {"IdentifierName": "size"}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_interval"}, {"IdentifierName": "Init"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_pt"}]}, {"Argument": [{"AddExpression": [{"IdentifierName": "_pt"}, {"IdentifierName": "size"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "NodedSegmentString"}}, "name": {"identifier": "getNodedSubstrings"}, "arguments": [{"name": {"identifier": "nodedSegStrings"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "NodedSegmentString"}, {"IdentifierName": "GetNodedSubstrings"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_nodedSegStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineInterval"}}, "name": {"identifier": "s1"}, "initializer": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getInterval"}}}]}}, {"expression": {"scope": {"name": {"identifier": "action"}}, "name": {"identifier": "overlap"}, "arguments": [{"name": {"identifier": "s0"}}, {"name": {"identifier": "s1"}}]}}, {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "nOverlaps"}}}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isInsert"}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "end"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "start"}}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "start"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "end"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsInsert"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineInterval"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "Interval"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "action"}, {"IdentifierName": "Overlap"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "s0"}]}, {"Argument": [{"IdentifierName": "s1"}]}]}]}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "_nOverlaps"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "extractedGeoms"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "elem"}, "initializer": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "extractedGeoms"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "elem"}}]}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "isInteracting"}}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "interacts"}}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "extractedGeoms"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "interacts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "isInteracting"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "extractedGeoms"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "elem"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "extractedGeoms"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomFactory"}}, "value": {"type": {"name": {"identifier": "GeometryFactory"}}}}}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "geomFactory"}}}}, {"expression": {"name": {"identifier": "polygonize"}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "polyList"}}]}}]}, "condition": {"name": {"identifier": "extractOnlyPolygonal"}}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createGeometryCollection"}, "arguments": [{"scope": {"name": {"identifier": "GeometryFactory"}}, "name": {"identifier": "toGeometryArray"}, "arguments": [{"name": {"identifier": "polyList"}}]}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "_geomFactory"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_geomFactory"}, {"ObjectCreationExpression": [{"QualifiedName": [{"IdentifierName": "Geometries"}, {"IdentifierName": "GeometryFactory"}]}, {"ArgumentList": "()"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Polygonize"}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"IdentifierName": "_extractOnlyPolygonal"}, {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_polyList"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateGeometryCollection"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Geometries"}, {"IdentifierName": "GeometryFactory"}]}, {"IdentifierName": "ToGeometryArray"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_polyList"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "GeometricShapeFactory"}}, "name": {"identifier": "gsf"}, "initializer": {"type": {"name": {"identifier": "GeometricShapeFactory"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setCentre"}, "arguments": [{"name": {"identifier": "origin"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setSize"}, "arguments": [{"name": {"identifier": "size"}}]}}, {"expression": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "setNumPoints"}, "arguments": [{"name": {"identifier": "nPts"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "circle"}, "initializer": {"scope": {"name": {"identifier": "gsf"}}, "name": {"identifier": "createCircle"}}}]}}, {"expression": {"name": {"identifier": "circle"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "GeometricShapeFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometricShapeFactory"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Centre"}]}, {"IdentifierName": "origin"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "Size"}]}, {"IdentifierName": "size"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "NumPoints"}]}, {"IdentifierName": "nPts"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "gsf"}, {"IdentifierName": "CreateCircle"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "circle"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bvirt"}, "initializer": {"type": {"type": "DOUBLE"}, "expression": {"inner": {"operator": "MINUS", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "x"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "avirt"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "bvirt"}}, "left": {"name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bround"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "bvirt"}}, "left": {"name": {"identifier": "b"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "around"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "avirt"}}, "left": {"name": {"identifier": "a"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "bround"}}, "left": {"name": {"identifier": "around"}}}}]}}, {"expression": {"name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"PredefinedType": "double"}, {"ParenthesizedExpression": [{"SubtractExpression": [{"IdentifierName": "x"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "x"}, {"IdentifierName": "bvirt"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "b"}, {"IdentifierName": "bvirt"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "a"}, {"IdentifierName": "avirt"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "around"}, {"IdentifierName": "bround"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "y"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "KdTree"}}, "name": {"identifier": "index"}, "initializer": {"name": {"identifier": "build"}, "arguments": [{"name": {"identifier": "wktInput"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"name": {"identifier": "testQuery"}, "arguments": [{"name": {"identifier": "index"}}, {"name": {"identifier": "queryEnv"}}, {"value": "true"}, {"scope": {"scope": {"name": {"identifier": "IOUtil"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wktExpected"}}]}, "name": {"identifier": "getCoordinates"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Build"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktInput"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "TestQuery"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}, {"Argument": [{"IdentifierName": "queryEnv"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "IOUtil"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wktExpected"}]}]}]}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "polys"}, "initializer": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "getVoronoiDiagram"}, "arguments": [{"name": {"identifier": "geomFact"}}]}}]}}, {"expression": {"name": {"identifier": "clipGeometryCollection"}, "arguments": [{"name": {"identifier": "polys"}}, {"name": {"identifier": "diagramEnv"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryCollection"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "GetVoronoiDiagram"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomFact"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ClipGeometryCollection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}, {"Argument": [{"IdentifierName": "_diagramEnv"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"scope": {"name": {"identifier": "minDe"}}, "name": {"identifier": "getNode"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdgeStar"}}, "name": {"identifier": "star"}, "initializer": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDe"}}, "value": {"scope": {"name": {"identifier": "star"}}, "name": {"identifier": "getRightmostEdge"}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minDe"}}, "value": {"scope": {"name": {"identifier": "minDe"}}, "name": {"identifier": "getSym"}}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minIndex"}}, "value": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"scope": {"scope": {"name": {"identifier": "minDe"}}, "name": {"identifier": "getEdge"}}, "name": {"identifier": "getCoordinates"}}, "name": {"identifier": "length"}}}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "minDe"}}, "name": {"identifier": "isForward"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "minDe"}, {"IdentifierName": "Node"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdgeStar"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minDe"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "star"}, {"IdentifierName": "GetRightmostEdge"}]}, {"ArgumentList": "()"}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "minDe"}, {"IdentifierName": "IsForward"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minDe"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "minDe"}, {"IdentifierName": "Sym"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minIndex"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "minDe"}, {"IdentifierName": "Edge"}]}, {"IdentifierName": "Coordinates"}]}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "minSegLen"}, "initializer": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "MAX_VALUE"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "segLen"}, "initializer": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "distance"}, "arguments": [{"index": {"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "pts"}}}]}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "minSegLen"}}, "value": {"name": {"identifier": "segLen"}}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minSegLen"}}, "left": {"name": {"identifier": "segLen"}}}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "minSegLen"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Double"}, {"IdentifierName": "MaxValue"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "segLen"}, {"IdentifierName": "minSegLen"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "minSegLen"}, {"IdentifierName": "segLen"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "minSegLen"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "fontGlyph"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "text"}}, {"type": {"name": {"identifier": "Font"}}, "arguments": [{"scope": {"name": {"identifier": "FontGlyphReader"}}, "name": {"identifier": "FONT_SERIF"}}, {"scope": {"name": {"identifier": "Font"}}, "name": {"identifier": "PLAIN"}}, {"name": {"identifier": "DEFAULT_POINTSIZE"}}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "FontGlyph"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "text"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Font"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontGlyphReader"}, {"IdentifierName": "FontSerif"}]}]}, {"Argument": [{"IdentifierName": "DEFAULT_POINTSIZE"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FontStyle"}, {"IdentifierName": "Regular"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PointLocator"}}, "name": {"identifier": "locator"}, "initializer": {"type": {"name": {"identifier": "PointLocator"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "ComponentCoordinateExtracter"}}, "name": {"identifier": "getCoordinates"}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"scope": {"name": {"identifier": "locator"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p"}}, {"scope": {"name": {"identifier": "prepLine"}}, "name": {"identifier": "getGeometry"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PointLocator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PointLocator"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ComponentCoordinateExtracter"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locator"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepLine"}, {"IdentifierName": "Geometry"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "expectedInterior"}, "initializer": {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "isResultOfOp"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "location"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "location"}}}, {"name": {"identifier": "overlayOp"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "resultInInterior"}, "initializer": {"inner": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"index": {"value": "2"}, "name": {"name": {"identifier": "location"}}}}}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isValid"}, "initializer": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"operator": "XOR", "right": {"name": {"identifier": "resultInInterior"}}, "left": {"name": {"identifier": "expectedInterior"}}}}}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "reportResult"}, "arguments": [{"name": {"identifier": "overlayOp"}}, {"name": {"identifier": "location"}}, {"name": {"identifier": "expectedInterior"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "isValid"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "OverlayOp"}, {"IdentifierName": "IsResultOfOp"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"IdentifierName": "overlayOp"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ParenthesizedExpression": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "location"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"ExclusiveOrExpression": [{"IdentifierName": "expectedInterior"}, {"IdentifierName": "resultInInterior"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "isValid"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ReportResult"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "overlayOp"}]}, {"Argument": [{"IdentifierName": "location"}]}, {"Argument": [{"IdentifierName": "expectedInterior"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isValid"}]}]}}, {"java_ast": {"statements": [{"expression": {"thenExpr": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, "elseExpr": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "condition": {"scope": {"name": {"identifier": "boundaryNodeRule"}}, "name": {"identifier": "isInBoundary"}, "arguments": [{"name": {"identifier": "boundaryCount"}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ConditionalExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "boundaryNodeRule"}, {"IdentifierName": "IsInBoundary"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "boundaryCount"}]}]}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "computeLabelSide"}, "arguments": [{"name": {"identifier": "geomIndex"}}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}]}}, {"expression": {"name": {"identifier": "computeLabelSide"}, "arguments": [{"name": {"identifier": "geomIndex"}}, {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeLabelSide"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeLabelSide"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "minX"}}, "left": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "maxX"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "minX"}}, "left": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "maxX"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "minY"}}, "left": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "maxY"}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS_EQUALS", "right": {"scope": {"name": {"identifier": "seg1"}}, "name": {"identifier": "minY"}}, "left": {"scope": {"name": {"identifier": "seg2"}}, "name": {"identifier": "maxY"}}}}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "MaxX"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "MinX"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "MaxX"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "MinX"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "MaxY"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "MinY"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"LessThanOrEqualExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg2"}, {"IdentifierName": "MaxX"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seg1"}, {"IdentifierName": "MinY"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "getIndex"}, "arguments": [{"name": {"identifier": "dirEdge"}}]}}]}}, {"expression": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "outEdges"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "getIndex"}, "arguments": [{"operator": "PLUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}]}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetIndex"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "dirEdge"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_outEdges"}, {"BracketedArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetIndex"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentNode"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "SegmentNode"}}, "expression": {"name": {"identifier": "obj"}}}}]}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "segmentIndex"}}, "left": {"name": {"identifier": "segmentIndex"}}}}, {"thenStmt": {"expression": {"value": "0"}}, "condition": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "equals2D"}, "arguments": [{"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "coord"}}]}}, {"expression": {"scope": {"name": {"identifier": "SegmentPointComparator"}}, "name": {"identifier": "compare"}, "arguments": [{"name": {"identifier": "segmentOctant"}}, {"name": {"identifier": "coord"}}, {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "SegmentNode"}, {"IdentifierName": "obj"}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "SegmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentIndex"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "SegmentIndex"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "SegmentIndex"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Coord"}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "Coord"}]}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SegmentPointComparator"}, {"IdentifierName": "Compare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_segmentOctant"}]}, {"Argument": [{"IdentifierName": "Coord"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "Coord"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "coordinates"}}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "env"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Coordinates"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "env"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "b"}}, "name": {"identifier": "difference"}, "arguments": [{"name": {"identifier": "a"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "b"}, {"IdentifierName": "Difference"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"scope": {"name": {"identifier": "comps"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "geom"}}]}}, "condition": {"operator": "OR", "right": {"name": {"identifier": "isOfClass"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "clz"}}]}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "clz"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "T"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_comps"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "T"}, {"IdentifierName": "geom"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snapped"}, "initializer": {"scope": {"name": {"identifier": "SnapRoundFunctions"}}, "name": {"identifier": "snapRound"}, "arguments": [{"name": {"identifier": "geomA"}}, {"name": {"identifier": "geomB"}}, {"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "aSnap"}, "initializer": {"name": {"identifier": "snapped"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "bSnap"}, "initializer": {}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "aSnap"}}, "value": {"scope": {"name": {"identifier": "snapped"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"value": "0"}]}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "bSnap"}}, "value": {"scope": {"name": {"identifier": "snapped"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"value": "1"}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "geomB"}}}}, {"expression": {"elementType": {"name": {"identifier": "Geometry"}}, "levels": [{}], "initializer": {"values": [{"name": {"identifier": "aSnap"}}, {"name": {"identifier": "bSnap"}}]}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SnapRoundFunctions"}, {"IdentifierName": "SnapRound"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomA"}]}, {"Argument": [{"IdentifierName": "geomB"}]}, {"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Clean"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapped"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Clean"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapped"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "IGeometry"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"ArrayInitializerExpression": [{"IdentifierName": "aSnap"}, {"IdentifierName": "bSnap"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pt"}, "initializer": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Triangle"}}, "name": {"identifier": "t"}, "initializer": {"type": {"name": {"identifier": "Triangle"}}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "2"}, "name": {"name": {"identifier": "pt"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isAcute"}, "initializer": {"scope": {"name": {"identifier": "t"}}, "name": {"identifier": "isAcute"}}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "expectedValue"}}, {"name": {"identifier": "isAcute"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Triangle"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "2"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "t"}, {"IdentifierName": "IsAcute"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedValue"}]}, {"Argument": [{"IdentifierName": "isAcute"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getLength"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Length"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MinimumDiameter"}}, "arguments": [{"name": {"identifier": "geom"}}]}}, "name": {"identifier": "getDiameter"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "MinimumDiameter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}, {"IdentifierName": "Diameter"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geomToBuffer"}, "initializer": {"name": {"identifier": "geom"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "geomToBuffer"}}, "value": {"name": {"identifier": "changePM"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "targetPM"}}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "changePrecisionModel"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "bufGeom"}, "initializer": {"scope": {"name": {"identifier": "geomToBuffer"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "finalGeom"}, "initializer": {"name": {"identifier": "bufGeom"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "finalGeom"}}, "value": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createGeometry"}, "arguments": [{"name": {"identifier": "bufGeom"}}]}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "changePrecisionModel"}}}}, {"expression": {"name": {"identifier": "finalGeom"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "geom"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_changePrecisionModel"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "geomToBuffer"}, {"InvocationExpression": [{"IdentifierName": "ChangePrecModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "_targetPrecModel"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomToBuffer"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "bufGeom"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_changePrecisionModel"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "finalGeom"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "bufGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "finalGeom"}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "n"}}, "name": {"name": {"identifier": "geometries"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_geometries"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "bvirt"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "x"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "MINUS", "right": {"name": {"identifier": "bvirt"}}, "left": {"name": {"identifier": "b"}}}}]}}, {"expression": {"name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "x"}, {"IdentifierName": "a"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"IdentifierName": "b"}, {"IdentifierName": "bvirt"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "y"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "0.0"}, {"value": "0.0"}, {"value": "0.0"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "coord2"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"value": "100.0"}, {"value": "200.0"}, {"value": "50.0"}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "distance"}, "initializer": {"scope": {"name": {"identifier": "coord1"}}, "name": {"identifier": "distance3D"}, "arguments": [{"name": {"identifier": "coord2"}}]}}]}}, {"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"name": {"identifier": "distance"}}, {"value": "229.128784747792"}, {"value": "0.000001"}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}, {"Argument": [{"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Coordinate"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "100.0"}]}, {"Argument": [{"NumericLiteralExpression": "200.0"}]}, {"Argument": [{"NumericLiteralExpression": "50.0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord1"}, {"IdentifierName": "Distance3D"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distance"}]}, {"Argument": [{"NumericLiteralExpression": "229.128784747792"}]}, {"Argument": [{"NumericLiteralExpression": "0.000001"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "0.0"}}, "condition": {"operator": "OR", "right": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "d2"}}}, "left": {"operator": "EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "d1"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "db1"}, "initializer": {"type": {"name": {"identifier": "DoubleBits"}}, "arguments": [{"name": {"identifier": "d1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DoubleBits"}}, "name": {"identifier": "db2"}, "initializer": {"type": {"name": {"identifier": "DoubleBits"}}, "arguments": [{"name": {"identifier": "d2"}}]}}]}}, {"thenStmt": {"expression": {"value": "0.0"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "db2"}}, "name": {"identifier": "getExponent"}}, "left": {"scope": {"name": {"identifier": "db1"}}, "name": {"identifier": "getExponent"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxCommon"}, "initializer": {"scope": {"name": {"identifier": "db1"}}, "name": {"identifier": "numCommonMantissaBits"}, "arguments": [{"name": {"identifier": "db2"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "db1"}}, "name": {"identifier": "zeroLowerBits"}, "arguments": [{"operator": "MINUS", "right": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "maxCommon"}}, "left": {"value": "12"}}}, "left": {"value": "64"}}]}}, {"expression": {"scope": {"name": {"identifier": "db1"}}, "name": {"identifier": "getDouble"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "d1"}, {"NumericLiteralExpression": "0.0"}]}, {"EqualsExpression": [{"IdentifierName": "d2"}, {"NumericLiteralExpression": "0.0"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0.0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DoubleBits"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DoubleBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "d1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DoubleBits"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "DoubleBits"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "d2"}]}]}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db1"}, {"IdentifierName": "Exponent"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "db2"}, {"IdentifierName": "Exponent"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0.0"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db1"}, {"IdentifierName": "NumCommonMantissaBits"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "db2"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db1"}, {"IdentifierName": "ZeroLowerBits"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"NumericLiteralExpression": "64"}, {"ParenthesizedExpression": [{"AddExpression": [{"NumericLiteralExpression": "12"}, {"IdentifierName": "maxCommon"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "db1"}, {"IdentifierName": "Double"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isEquivalentClass"}, "arguments": [{"name": {"identifier": "other"}}]}}}, {"expression": {"scope": {}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "other"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"IdentifierName": "IsEquivalentClass"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "other"}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isAdjacentSegments"}, "arguments": [{"name": {"identifier": "segIndex0"}}, {"name": {"identifier": "segIndex1"}}]}}, {"thenStmt": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "maxSegIndex"}, "initializer": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "size"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "OR", "right": {"inner": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegIndex"}}, "left": {"name": {"identifier": "segIndex0"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segIndex1"}}}}}, "left": {"inner": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"name": {"identifier": "maxSegIndex"}}, "left": {"name": {"identifier": "segIndex1"}}}, "left": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "segIndex0"}}}}}}}]}, "condition": {"scope": {"name": {"identifier": "e0"}}, "name": {"identifier": "isClosed"}}}]}, "condition": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "li"}}, "name": {"identifier": "getIntersectionNum"}}}}]}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "e1"}}, "left": {"name": {"identifier": "e0"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "e1"}]}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_li"}, {"IdentifierName": "IntersectionNum"}]}, {"NumericLiteralExpression": "1"}]}, {"Block": [{"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsAdjacentSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segIndex0"}]}, {"Argument": [{"IdentifierName": "segIndex1"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "IsClosed"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e0"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"IfStatement": [{"LogicalOrExpression": [{"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "segIndex0"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "segIndex1"}, {"IdentifierName": "maxSegIndex"}]}]}]}, {"ParenthesizedExpression": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "segIndex1"}, {"NumericLiteralExpression": "0"}]}, {"EqualsExpression": [{"IdentifierName": "segIndex0"}, {"IdentifierName": "maxSegIndex"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Interval"}}, "name": {"identifier": "bounds"}, "initializer": {}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Boundable"}}, "name": {"identifier": "childBoundable"}, "initializer": {"type": {"name": {"identifier": "Boundable"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "bounds"}}, "value": {"type": {"name": {"identifier": "Interval"}}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}}]}, "elseStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "bounds"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"type": {"name": {"identifier": "Interval"}}, "expression": {"scope": {"name": {"identifier": "childBoundable"}}, "name": {"identifier": "getBounds"}}}]}}]}, "condition": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "bounds"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "getChildBoundables"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "bounds"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Interval"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NullLiteralExpression": "null"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "ChildBoundables"}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"IdentifierName": "bounds"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "bounds"}, {"ObjectCreationExpression": [{"IdentifierName": "Interval"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundable"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "bounds"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "childBoundable"}, {"IdentifierName": "Bounds"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "bounds"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "actualResult"}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "expectedResult"}}, {"name": {"identifier": "tolerance"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsMatch"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"IdentifierName": "args"}]}, {"Argument": [{"AsExpression": [{"IdentifierName": "actualResult"}, {"IdentifierName": "TResult"}]}]}, {"Argument": [{"AsExpression": [{"IdentifierName": "expectedResult"}, {"IdentifierName": "TResult"}]}]}, {"Argument": [{"IdentifierName": "tolerance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "level"}, "initializer": {"name": {"identifier": "recursionLevelForSize"}, "arguments": [{"name": {"identifier": "numPts"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "baseLine"}, "initializer": {"name": {"identifier": "getSquareBaseLine"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "origin"}, "initializer": {"scope": {"name": {"identifier": "baseLine"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"value": "0"}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "LinearRing"}}}, "name": {"identifier": "holes"}, "initializer": {"name": {"identifier": "getHoles"}, "arguments": [{"name": {"identifier": "level"}}, {"scope": {"name": {"identifier": "origin"}}, "name": {"identifier": "x"}}, {"scope": {"name": {"identifier": "origin"}}, "name": {"identifier": "y"}}, {"name": {"identifier": "getDiameter"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "shell"}, "initializer": {"type": {"name": {"identifier": "LinearRing"}}, "expression": {"scope": {"inner": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "toGeometry"}, "arguments": [{"name": {"identifier": "getSquareExtent"}}]}}}, "name": {"identifier": "getExteriorRing"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "shell"}}, {"name": {"identifier": "holes"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "RecursionLevelForSize"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "NumPoints"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetSquareBaseLine"}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "baseLine"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetHoles"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "level"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "origin"}, {"IdentifierName": "X"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "origin"}, {"IdentifierName": "Y"}]}]}, {"Argument": [{"IdentifierName": "Diameter"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "ILinearRing"}, {"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "ToGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "GetSquareExtent"}, {"ArgumentList": "()"}]}]}]}]}]}]}, {"IdentifierName": "ExteriorRing"}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeomFactory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "shell"}]}, {"Argument": [{"IdentifierName": "holes"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "nOverlaps"}}, "value": {"value": "0"}}}, {"expression": {"name": {"identifier": "buildIndex"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SweepLineEvent"}}, "name": {"identifier": "ev"}, "initializer": {"type": {"name": {"identifier": "SweepLineEvent"}}, "expression": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}]}}, {"thenStmt": {"statements": [{"expression": {"name": {"identifier": "processOverlaps"}, "arguments": [{"name": {"identifier": "i"}}, {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getDeleteEventIndex"}}, {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "getInterval"}}, {"name": {"identifier": "action"}}]}}]}, "condition": {"scope": {"name": {"identifier": "ev"}}, "name": {"identifier": "isInsert"}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "events"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_nOverlaps"}, {"NumericLiteralExpression": "0"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "BuildIndex"}, {"ArgumentList": "()"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_events"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SweepLineEvent"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_events"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "IsInsert"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ProcessOverlaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "DeleteEventIndex"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ev"}, {"IdentifierName": "Interval"}]}]}, {"Argument": [{"IdentifierName": "action"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "AverageZFilter"}}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "AverageZFilter"}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}, "initializer": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "lineWKT"}}]}}]}}, {"expression": {"name": {"identifier": "geom"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lineWKT"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "geom"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "supercircle"}, "arguments": [{"name": {"identifier": "g"}}, {"name": {"identifier": "nPts"}}, {"value": "0.5"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Supercircle"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}, {"Argument": [{"IdentifierName": "nPts"}]}, {"Argument": [{"NumericLiteralExpression": "0.5"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "PLUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"type": {"name": {"identifier": "Vertex"}}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}]}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "Vertex"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeExample"}}, "name": {"identifier": "test"}, "initializer": {"type": {"name": {"identifier": "PolygonizeExample"}}}}]}}, {"tryBlock": {"statements": [{"expression": {"scope": {"name": {"identifier": "test"}}, "name": {"identifier": "run"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "ex"}}, "name": {"identifier": "printStackTrace"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "Exception"}}, "name": {"identifier": "ex"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "PolygonizeExample"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PolygonizeExample"}, {"ArgumentList": "()"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "test"}, {"IdentifierName": "Run"}]}, {"ArgumentList": "()"}]}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "Exception"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ex"}, {"IdentifierName": "StackTrace"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "sum"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "b"}}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "b"}}, "left": {"operator": "MULTIPLY", "right": {"name": {"identifier": "a"}}, "left": {"value": "2"}}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "diff"}, "initializer": {"operator": "MINUS", "right": {"operator": "MULTIPLY", "right": {"name": {"identifier": "a"}}, "left": {"name": {"identifier": "a"}}}, "left": {"operator": "MULTIPLY", "right": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}, "left": {"inner": {"operator": "PLUS", "right": {"name": {"identifier": "b"}}, "left": {"name": {"identifier": "a"}}}}}}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"MultiplyExpression": [{"MultiplyExpression": [{"NumericLiteralExpression": "2"}, {"IdentifierName": "a"}]}, {"IdentifierName": "b"}]}, {"MultiplyExpression": [{"IdentifierName": "b"}, {"IdentifierName": "b"}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"MultiplyExpression": [{"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}, {"ParenthesizedExpression": [{"AddExpression": [{"IdentifierName": "a"}, {"IdentifierName": "b"}]}]}]}, {"MultiplyExpression": [{"IdentifierName": "a"}, {"IdentifierName": "a"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "ring"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"operator": "PLUS", "target": {"scope": {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "x"}}, "value": {"value": "0.0001"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ring"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"AddAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "X"}]}, {"NumericLiteralExpression": "0.0001"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "ss"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"body": {"statements": [{"thenStmt": {"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "testPt"}}, "left": {"operator": "PLUS", "right": {"value": " :pt "}, "left": {"operator": "PLUS", "right": {"name": {"identifier": "j"}}, "left": {"value": "found endpt/interior pt intersection at index "}}}}]}}, "condition": {"scope": {"index": {"name": {"identifier": "j"}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "testPt"}}]}}]}, "compare": {"operator": "LESS", "right": {"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "ISegmentString"}, {"IdentifierName": "_segStrings"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ss"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEndPtVertexIntersections"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"IdentifierName": "_segStrings"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckEndPtVertexIntersections"}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "_segStrings"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "createNaN"}}}, "condition": {"scope": {"name": {"identifier": "Double"}}, "name": {"identifier": "isNaN"}, "arguments": [{"name": {"identifier": "y"}}]}}, {"expression": {"scope": {"name": {"identifier": "copy"}, "arguments": [{}]}, "name": {"identifier": "selfDivide"}, "arguments": [{"name": {"identifier": "y"}}, {"value": "0.0"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"DivideExpression": [{"ThisExpression": "this"}, {"IdentifierName": "y"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "hi"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "hi"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "lo"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "lo"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_hi"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_hi"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_lo"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_lo"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "snap"}, "arguments": [{"name": {"identifier": "hotPixel"}}, {}, {"operator": "MINUS", "expression": {"value": "1"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Snap"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hotPixel"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}, {"Argument": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_j"}, "initializer": {"name": {"identifier": "Two_One_Diff__x2"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "_0"}, "initializer": {"name": {"identifier": "Two_One_Diff__x1"}, "arguments": [{"name": {"identifier": "a1"}}, {"name": {"identifier": "a0"}}, {"name": {"identifier": "b0"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x3"}, "initializer": {"name": {"identifier": "Two_One_Diff__x2"}, "arguments": [{"name": {"identifier": "_j"}}, {"name": {"identifier": "_0"}}, {"name": {"identifier": "b1"}}]}}]}}, {"expression": {"name": {"identifier": "x3"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x1"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a1"}]}, {"Argument": [{"IdentifierName": "a0"}]}, {"Argument": [{"IdentifierName": "b0"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Two_One_Diff__x2"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_j"}]}, {"Argument": [{"IdentifierName": "_0"}]}, {"Argument": [{"IdentifierName": "b1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "x3"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "intersections"}, "initializer": {"name": {"identifier": "findInteriorIntersections"}, "arguments": [{"name": {"identifier": "segStrings"}}, {"name": {"identifier": "li"}}]}}]}}, {"expression": {"name": {"identifier": "computeSnaps"}, "arguments": [{"name": {"identifier": "segStrings"}}, {"name": {"identifier": "intersections"}}]}}, {"expression": {"name": {"identifier": "computeVertexSnaps"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "FindInteriorIntersections"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}, {"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeSnaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}, {"Argument": [{"IdentifierName": "intersections"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "ComputeVertexSnaps"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "collapsedVertexIndexes"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"name": {"identifier": "findCollapsesFromInsertedNodes"}, "arguments": [{"name": {"identifier": "collapsedVertexIndexes"}}]}}, {"expression": {"name": {"identifier": "findCollapsesFromExistingVertices"}, "arguments": [{"name": {"identifier": "collapsedVertexIndexes"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "vertexIndex"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "Integer"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}, "name": {"identifier": "intValue"}}}]}}, {"expression": {"name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "edge"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "vertexIndex"}}]}, {"name": {"identifier": "vertexIndex"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "collapsedVertexIndexes"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"PredefinedType": "int"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "FindCollapsesFromInsertedNodes"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "collapsedVertexIndexes"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "FindCollapsesFromExistingVertices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "collapsedVertexIndexes"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "collapsedVertexIndexes"}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Add"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_edge"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "vertexIndex"}]}]}]}]}, {"Argument": [{"IdentifierName": "vertexIndex"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "overlayOp"}, "arguments": [{"name": {"identifier": "g0"}}, {"name": {"identifier": "g1"}}, {"scope": {"name": {"identifier": "OverlayOp"}}, "name": {"identifier": "INTERSECTION"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Overlay"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g0"}]}, {"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "SpatialFunction"}, {"IdentifierName": "Intersection"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MarkHalfEdge"}}, "expression": {"name": {"identifier": "e"}}}}, "name": {"identifier": "setMark"}, "arguments": [{"name": {"identifier": "isMarked"}}]}}, {"expression": {"scope": {"inner": {"type": {"name": {"identifier": "MarkHalfEdge"}}, "expression": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "sym"}}}}, "name": {"identifier": "setMark"}, "arguments": [{"name": {"identifier": "isMarked"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "MarkHalfEdge"}, {"IdentifierName": "e"}]}]}, {"IdentifierName": "Marked"}]}, {"IdentifierName": "isMarked"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"CastExpression": [{"IdentifierName": "MarkHalfEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Sym"}]}]}]}, {"IdentifierName": "Marked"}]}, {"IdentifierName": "isMarked"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "edges"}, "initializer": {"scope": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}, "name": {"identifier": "getEdges"}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "degree"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "PolygonizeDirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "degree"}}}}, "condition": {"operator": "EQUALS", "right": {"name": {"identifier": "label"}}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getLabel"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "degree"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "DirectedEdge"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"IdentifierName": "Edges"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "PolygonizeDirectedEdge"}, {"IdentifierName": "edges"}, {"Block": [{"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Label"}]}, {"IdentifierName": "label"}]}, {"ExpressionStatement": [{"PostIncrementExpression": [{"IdentifierName": "degree"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "degree"}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "snapPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "HotPixel"}}, "name": {"identifier": "hotPixel"}, "initializer": {"type": {"name": {"identifier": "HotPixel"}}, "arguments": [{"name": {"identifier": "snapPt"}}, {"name": {"identifier": "scaleFactor"}}, {"name": {"identifier": "li"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "pointSnapper"}}, "name": {"identifier": "snap"}, "arguments": [{"name": {"identifier": "hotPixel"}}]}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "snapPts"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "snapPts"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "HotPixel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "snapPt"}]}, {"Argument": [{"IdentifierName": "_scaleFactor"}]}, {"Argument": [{"IdentifierName": "_li"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_pointSnapper"}, {"IdentifierName": "Snap"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "hotPixel"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "x"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "y"}}, "left": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "_x"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_x"}]}]}]}, {"Argument": [{"SubtractExpression": [{"IdentifierName": "_y"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "_y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "eval"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Eval"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getParent"}}, "left": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getParent"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "segIndex"}, "initializer": {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "getIndex"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"index": {"value": "1"}, "name": {"name": {"identifier": "sectionIndex"}}}, "left": {"name": {"identifier": "segIndex"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"index": {"value": "0"}, "name": {"name": {"identifier": "sectionIndex"}}}, "left": {"name": {"identifier": "segIndex"}}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Parent"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Parent"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "Index"}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "segIndex"}, {"ElementAccessExpression": [{"IdentifierName": "sectionIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"LessThanExpression": [{"IdentifierName": "segIndex"}, {"ElementAccessExpression": [{"IdentifierName": "sectionIndex"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "ls"}}, "name": {"identifier": "intersection"}, "arguments": [{"scope": {"name": {"identifier": "s"}}, "name": {"identifier": "getLineSegment"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ls"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "s"}, {"IdentifierName": "LineSegment"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "count"}, "initializer": {"value": "0"}}]}}, {"body": {"statements": [{"expression": {"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "count"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "test"}, "initializer": {"name": {"identifier": "createRandomTestGeometry"}, "arguments": [{"scope": {"name": {"identifier": "target"}}, "name": {"identifier": "getEnvelopeInternal"}}, {"value": "10"}, {"value": "20"}]}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isResultCorrect"}, "initializer": {"name": {"identifier": "checkResult"}, "arguments": [{"name": {"identifier": "target"}}, {"name": {"identifier": "test"}}]}}]}}, {"thenStmt": {"statements": [{"expression": {"type": {"name": {"identifier": "RuntimeException"}}, "arguments": [{"value": "Invalid result found"}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isResultCorrect"}}}}]}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "nIter"}}, "left": {"name": {"identifier": "count"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSineStar"}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "100"}]}, {"Argument": [{"IdentifierName": "_numTargetPts"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Console"}, {"IdentifierName": "WriteLine"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "poly"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Run"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "nIter"}]}, {"Argument": [{"IdentifierName": "poly"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {}, "name": {"identifier": "verticalSlices"}, "arguments": [{"name": {"identifier": "childBoundables"}}, {"name": {"identifier": "size"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"BaseExpression": "base"}, {"IdentifierName": "VerticalSlices"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "childBoundables"}]}, {"Argument": [{"IdentifierName": "size"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "WKTWriter"}}, "name": {"identifier": "toLineString"}, "arguments": [{"index": {"value": "0"}, "name": {"name": {"identifier": "pt"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "pt"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "WKTWriter"}, {"IdentifierName": "ToLineString"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "_pt"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "OR", "right": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "length"}}}, "left": {"operator": "EQUALS", "right": {}, "left": {"name": {"identifier": "coord"}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "e"}, "initializer": {"type": {"name": {"identifier": "NodedSegmentString"}}, "arguments": [{"name": {"identifier": "coord"}}, {"type": {"name": {"identifier": "Label"}}, "arguments": [{"value": "0"}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "BOUNDARY"}}, {"name": {"identifier": "leftLoc"}}, {"name": {"identifier": "rightLoc"}}]}]}}]}}, {"expression": {"scope": {"name": {"identifier": "curveList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalOrExpression": [{"EqualsExpression": [{"IdentifierName": "coord"}, {"NullLiteralExpression": "null"}]}, {"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "2"}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "NodedSegmentString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Label"}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Boundary"}]}]}, {"Argument": [{"IdentifierName": "leftLoc"}]}, {"Argument": [{"IdentifierName": "rightLoc"}]}]}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_curveList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "radius"}, "initializer": {"name": {"identifier": "getRadius"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "centre"}, "initializer": {"name": {"identifier": "getCentre"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p0"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p1"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"operator": "PLUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "x"}}}, {"operator": "MINUS", "right": {"name": {"identifier": "radius"}}, "left": {"scope": {"name": {"identifier": "centre"}}, "name": {"identifier": "y"}}}]}}]}}, {"expression": {"type": {"name": {"identifier": "LineSegment"}}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Radius"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "Centre"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}, {"IdentifierName": "radius"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "radius"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "Coordinate"}, {"ArgumentList": [{"Argument": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "X"}]}, {"IdentifierName": "radius"}]}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "centre"}, {"IdentifierName": "Y"}]}, {"IdentifierName": "radius"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ObjectCreationExpression": [{"IdentifierName": "LineSegment"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p0"}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "EQUALS", "right": {}, "left": {"index": {"value": "0"}, "name": {"name": {"identifier": "locGeom"}}}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"index": {"value": "1"}, "name": {"name": {"identifier": "locGeom"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "locGeom"}}}}}]}, "elseStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "locGeom"}}}}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "1"}, "name": {"name": {"identifier": "minDistanceLocation"}}}, "value": {"index": {"value": "1"}, "name": {"name": {"identifier": "locGeom"}}}}}]}, "condition": {"name": {"identifier": "flip"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"EqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "locGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"IfStatement": [{"IdentifierName": "flip"}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "locGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "locGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}, {"ElseClause": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "locGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "_minDistanceLocation"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "locGeom"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "points"}}, "name": {"identifier": "copy"}}}]}}, {"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "reverse"}, "arguments": [{"name": {"identifier": "seq"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "rev"}, "initializer": {"scope": {"name": {"identifier": "getFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "seq"}}]}}]}}, {"expression": {"name": {"identifier": "rev"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequence"}, {"IdentifierName": "Reversed"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sequence"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "componentIndex1"}}, "left": {"name": {"identifier": "componentIndex0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "componentIndex1"}}, "left": {"name": {"identifier": "componentIndex0"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "segmentIndex1"}}, "left": {"name": {"identifier": "segmentIndex0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "segmentIndex1"}}, "left": {"name": {"identifier": "segmentIndex0"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "segmentFraction1"}}, "left": {"name": {"identifier": "segmentFraction0"}}}}, {"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"name": {"identifier": "segmentFraction1"}}, "left": {"name": {"identifier": "segmentFraction0"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "componentIndex0"}, {"IdentifierName": "componentIndex1"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "componentIndex0"}, {"IdentifierName": "componentIndex1"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "segmentIndex0"}, {"IdentifierName": "segmentIndex1"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "segmentIndex0"}, {"IdentifierName": "segmentIndex1"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "segmentFraction0"}, {"IdentifierName": "segmentFraction1"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "segmentFraction0"}, {"IdentifierName": "segmentFraction1"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "select"}, "arguments": [{"name": {"identifier": "a"}}, {"type": {"name": {"identifier": "GeometryPredicate"}}, "anonymousClassBody": [{"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "covers"}, "arguments": [{"name": {"identifier": "mask"}}]}}]}, "type": {"type": "BOOLEAN"}, "name": {"identifier": "isTrue"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g"}}]}]}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Select"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "a"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "mask"}, {"IdentifierName": "Covers"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"inner": {"type": {"name": {"identifier": "DensifyTransformer"}}, "arguments": [{"name": {"identifier": "distanceTolerance"}}]}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ObjectCreationExpression": [{"IdentifierName": "DensifyTransformer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_distanceTolerance"}]}]}]}]}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "revPts"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "len"}, "initializer": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "len"}}}}, "name": {"name": {"identifier": "revPts"}}}, "value": {"type": {"name": {"identifier": "Coordinate"}}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "len"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"scope": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"name": {"identifier": "revPts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Reverse"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ILineString"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "rev"}, {"IdentifierName": "UserData"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "UserData"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "rev"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "x"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getWidth"}}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinX"}}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "Math"}}, "name": {"identifier": "random"}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getHeight"}}}, "left": {"scope": {"name": {"identifier": "env"}}, "name": {"identifier": "getMinY"}}}}]}}, {"expression": {"name": {"identifier": "createCoord"}, "arguments": [{"name": {"identifier": "x"}}, {"name": {"identifier": "y"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinX"}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Width"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rnd"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "MinY"}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "env"}, {"IdentifierName": "Height"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Rnd"}, {"IdentifierName": "NextDouble"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreateCoord"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}, {"Argument": [{"IdentifierName": "y"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"expression": {"name": {"identifier": "i"}}}, "condition": {"scope": {"inner": {"type": {"name": {"identifier": "Edge"}}, "expression": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "get"}, "arguments": [{"name": {"identifier": "i"}}]}}}, "name": {"identifier": "equals"}, "arguments": [{"name": {"identifier": "e"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "edges"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "_edges"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ParenthesizedExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edges"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "e"}]}]}]}, {"ReturnStatement": [{"IdentifierName": "i"}]}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "m0"}, "initializer": {"scope": {"name": {"identifier": "trans0"}}, "name": {"identifier": "getMatrixEntries"}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"type": "DOUBLE"}}, "name": {"identifier": "m1"}, "initializer": {"scope": {"name": {"identifier": "trans1"}}, "name": {"identifier": "getMatrixEntries"}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "assertEquals"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "m0"}}}, {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "m1"}}}, {"value": "0.000005"}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "m0"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans0"}, {"IdentifierName": "MatrixEntries"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"PredefinedType": "double"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans1"}, {"IdentifierName": "MatrixEntries"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "m0"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "AreEqual"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"IdentifierName": "m0"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"ElementAccessExpression": [{"IdentifierName": "m1"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"Argument": [{"NumericLiteralExpression": "0.000005"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "testGeom"}}}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isSingleShell"}, "arguments": [{"scope": {"name": {"identifier": "prepPoly"}}, "name": {"identifier": "getGeometry"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "testGeom"}, {"IdentifierName": "IPolygonal"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "IsSingleShell"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "prepPoly"}, {"IdentifierName": "Geometry"}]}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "quadrant"}}, "left": {"name": {"identifier": "quadrant"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "quadrant"}}, "left": {"name": {"identifier": "quadrant"}}}}, {"expression": {"scope": {"name": {"identifier": "Orientation"}}, "name": {"identifier": "index"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "p1"}}, {"name": {"identifier": "p1"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "_quadrant"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Quadrant"}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "_quadrant"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Quadrant"}]}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CGAlgorithms"}, {"IdentifierName": "ComputeOrientation"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "p0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "p1"}]}]}, {"Argument": [{"IdentifierName": "p1"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "weightedSum"}, "arguments": [{"name": {"identifier": "v"}}, {"value": "0.5"}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "WeightedSum"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}, {"Argument": [{"NumericLiteralExpression": "0.5"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "out"}}, "name": {"identifier": "println"}, "arguments": [{"operator": "PLUS", "right": {"scope": {"name": {"identifier": "polys"}}, "name": {"identifier": "size"}}, "left": {"value": "# items: "}}]}}, {"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "Cascaded"}, {"name": {"identifier": "CASCADED"}}, {"name": {"identifier": "polys"}}]}}, {"expression": {"name": {"identifier": "run"}, "arguments": [{"value": "Iterated"}, {"name": {"identifier": "ITERATED"}}, {"name": {"identifier": "polys"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "UnionPerfTester"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "UnionPerfTester"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "polys"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "test"}, {"IdentifierName": "runAll"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "CoordinateSequences"}}, "name": {"identifier": "toString"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateSequences"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "setVisited"}, "arguments": [{"value": "true"}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "subgraph"}}, "name": {"identifier": "add"}, "arguments": [{"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getEdge"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "toNode"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getToNode"}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "push"}, "arguments": [{"name": {"identifier": "toNode"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "toNode"}}, "name": {"identifier": "isVisited"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getOutEdges"}}}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Visited"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "OutEdges"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "subgraph"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Edge"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "ToNode"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "toNode"}, {"IdentifierName": "IsVisited"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "toNode"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "1"}}, "condition": {"operator": "GREATER", "right": {"value": "0"}, "left": {"name": {"identifier": "x"}}}}, {"thenStmt": {"expression": {"operator": "MINUS", "expression": {"value": "1"}}}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "x"}}}}, {"expression": {"value": "0"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"GreaterThanExpression": [{"IdentifierName": "x"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"NumericLiteralExpression": "1"}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "x"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}, {"ReturnStatement": [{"NumericLiteralExpression": "0"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "setVisited"}, "arguments": [{"value": "true"}]}}, {"expression": {"scope": {"name": {"identifier": "nodes"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "node"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "dirEdgeList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "de"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "sym"}, "initializer": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getSym"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "symNode"}, "initializer": {"scope": {"name": {"identifier": "sym"}}, "name": {"identifier": "getNode"}}}]}}, {"thenStmt": {"expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "push"}, "arguments": [{"name": {"identifier": "symNode"}}]}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "symNode"}}, "name": {"identifier": "isVisited"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"inner": {"type": {"name": {"identifier": "DirectedEdgeStar"}}, "expression": {"scope": {"name": {"identifier": "node"}}, "name": {"identifier": "getEdges"}}}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Visited"}]}, {"TrueLiteralExpression": "true"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_nodes"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"CastExpression": [{"IdentifierName": "DirectedEdgeStar"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "node"}, {"IdentifierName": "Edges"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_dirEdgeList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "de"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "DirectedEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "Sym"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "sym"}, {"IdentifierName": "Node"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "symNode"}, {"IdentifierName": "IsVisited"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "symNode"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "subdiv"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Envelope"}}, "name": {"identifier": "siteEnv"}, "initializer": {"scope": {"name": {"identifier": "DelaunayTriangulationBuilder"}}, "name": {"identifier": "envelope"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segments"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "siteEnv"}}, "name": {"identifier": "expandToInclude"}, "arguments": [{"scope": {"name": {"identifier": "constraintLines"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}, {"expression": {"name": {"identifier": "createVertices"}, "arguments": [{"name": {"identifier": "constraintLines"}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "segments"}}, "value": {"name": {"identifier": "createConstraintSegments"}, "arguments": [{"name": {"identifier": "constraintLines"}}]}}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "constraintLines"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "sites"}, "initializer": {"name": {"identifier": "createSiteVertices"}, "arguments": [{"name": {"identifier": "siteCoords"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "ConformingDelaunayTriangulator"}}, "name": {"identifier": "cdt"}, "initializer": {"type": {"name": {"identifier": "ConformingDelaunayTriangulator"}}, "arguments": [{"name": {"identifier": "sites"}}, {"name": {"identifier": "tolerance"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "cdt"}}, "name": {"identifier": "setConstraints"}, "arguments": [{"name": {"identifier": "segments"}}, {"type": {"name": {"identifier": "ArrayList"}}, "arguments": [{"scope": {"name": {"identifier": "constraintVertexMap"}}, "name": {"identifier": "values"}}]}]}}, {"expression": {"scope": {"name": {"identifier": "cdt"}}, "name": {"identifier": "formInitialDelaunay"}}}, {"expression": {"scope": {"name": {"identifier": "cdt"}}, "name": {"identifier": "enforceConstraints"}}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "subdiv"}}, "value": {"scope": {"name": {"identifier": "cdt"}}, "name": {"identifier": "getSubdivision"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_subdiv"}, {"NullLiteralExpression": "null"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Envelope"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "DelaunayTriangulationBuilder"}, {"IdentifierName": "Envelope"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Segment"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Segment"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "_constraintLines"}, {"NullLiteralExpression": "null"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "siteEnv"}, {"IdentifierName": "ExpandToInclude"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_constraintLines"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CreateVertices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_constraintLines"}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "segments"}, {"InvocationExpression": [{"IdentifierName": "CreateConstraintSegments"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_constraintLines"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "CreateSiteVertices"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_siteCoords"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ConformingDelaunayTriangulator"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "ConformingDelaunayTriangulator"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sites"}]}, {"Argument": [{"IdentifierName": "_tolerance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cdt"}, {"IdentifierName": "SetConstraints"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segments"}]}, {"Argument": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Vertex"}]}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_constraintVertexMap"}, {"IdentifierName": "Values"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cdt"}, {"IdentifierName": "FormInitialDelaunay"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cdt"}, {"IdentifierName": "EnforceConstraints"}]}, {"ArgumentList": "()"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_subdiv"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "cdt"}, {"IdentifierName": "Subdivision"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "LengthLocationMap"}}, "name": {"identifier": "getLocation"}, "arguments": [{"name": {"identifier": "linearGeom"}}, {"name": {"identifier": "index"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearLocation"}}, "name": {"identifier": "locLow"}, "initializer": {"scope": {"name": {"identifier": "loc"}}, "name": {"identifier": "toLowest"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "locLow"}}, "name": {"identifier": "getSegment"}, "arguments": [{"name": {"identifier": "linearGeom"}}]}, "name": {"identifier": "pointAlongOffset"}, "arguments": [{"scope": {"name": {"identifier": "locLow"}}, "name": {"identifier": "getSegmentFraction"}}, {"name": {"identifier": "offsetDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LengthLocationMap"}, {"IdentifierName": "GetLocation"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}, {"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "LinearLocation"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "loc"}, {"IdentifierName": "ToLowest"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locLow"}, {"IdentifierName": "GetSegment"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_linearGeom"}]}]}]}, {"IdentifierName": "PointAlongOffset"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "locLow"}, {"IdentifierName": "SegmentFraction"}]}]}, {"Argument": [{"IdentifierName": "offsetDistance"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}, "arguments": [{"operator": "DIVIDE", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "x"}}}, {"operator": "DIVIDE", "right": {"name": {"identifier": "d"}}, "left": {"name": {"identifier": "y"}}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": [{"Argument": [{"DivideExpression": [{"IdentifierName": "_x"}, {"IdentifierName": "d"}]}]}, {"Argument": [{"DivideExpression": [{"IdentifierName": "_y"}, {"IdentifierName": "d"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "y"}, "initializer": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "getY"}, "arguments": [{"name": {"identifier": "i"}}]}}]}}, {"expression": {"name": {"identifier": "updateInterval"}, "arguments": [{"name": {"identifier": "y"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "seq"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq"}, {"IdentifierName": "GetY"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "UpdateInterval"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "y"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LESS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "lastPt"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "get"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "ptList"}}, "name": {"identifier": "size"}}}]}}}]}}, {"expression": {"variables": [{"type": {"type": "DOUBLE"}, "name": {"identifier": "ptDist"}, "initializer": {"scope": {"name": {"identifier": "pt"}}, "name": {"identifier": "distance"}, "arguments": [{"name": {"identifier": "lastPt"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "LESS", "right": {"name": {"identifier": "minimimVertexDistance"}}, "left": {"name": {"identifier": "ptDist"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LessThanExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ElementAccessExpression": [{"IdentifierName": "_ptList"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ptList"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "double"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "pt"}, {"IdentifierName": "Distance"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "lastPt"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "ptDist"}, {"IdentifierName": "_minimimVertexDistance"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "init"}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "lastEdge"}}, "name": {"identifier": "isLive"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "QuadEdge"}}, "name": {"identifier": "e"}, "initializer": {"scope": {"name": {"identifier": "subdiv"}}, "name": {"identifier": "locateFromEdge"}, "arguments": [{"name": {"identifier": "v"}}, {"name": {"identifier": "lastEdge"}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "lastEdge"}}, "value": {"name": {"identifier": "e"}}}}, {"expression": {"name": {"identifier": "e"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_lastEdge"}, {"IdentifierName": "IsLive"}]}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Init"}, {"ArgumentList": "()"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "QuadEdge"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_subdiv"}, {"IdentifierName": "LocateFromEdge"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "v"}]}, {"Argument": [{"IdentifierName": "_lastEdge"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "_lastEdge"}, {"IdentifierName": "e"}]}]}, {"ReturnStatement": [{"IdentifierName": "e"}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "ls"}}, "name": {"identifier": "toString"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_ls"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "fullArgLen"}, "initializer": {"value": "1"}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "fullArgLen"}}, "value": {"operator": "PLUS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "arg"}}, "name": {"identifier": "length"}}}}}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"name": {"identifier": "arg"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Object"}}}, "name": {"identifier": "fullArg"}, "initializer": {"elementType": {"name": {"identifier": "Object"}}, "levels": [{"dimension": {"name": {"identifier": "fullArgLen"}}}]}}]}}, {"expression": {"operator": "ASSIGN", "target": {"index": {"value": "0"}, "name": {"name": {"identifier": "fullArg"}}}, "value": {"name": {"identifier": "g"}}}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "fullArg"}}}, "value": {"index": {"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "i"}}}, "name": {"name": {"identifier": "arg"}}}}}]}, "compare": {"operator": "LESS", "right": {"name": {"identifier": "fullArgLen"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "fullArg"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"IfStatement": [{"NotEqualsExpression": [{"IdentifierName": "arg"}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "fullArgLen"}, {"AddExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "arg"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Object"}, {"ArrayRankSpecifier": [{"IdentifierName": "fullArgLen"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "fullArg"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"IdentifierName": "g"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"IdentifierName": "fullArgLen"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "fullArg"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "arg"}, {"BracketedArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "fullArg"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"inner": {"type": {"name": {"identifier": "Interval"}}, "expression": {"name": {"identifier": "o"}}}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Interval"}}, "name": {"identifier": "other"}, "initializer": {"type": {"name": {"identifier": "Interval"}}, "expression": {"name": {"identifier": "o"}}}}]}}, {"expression": {"operator": "AND", "right": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "max"}}, "left": {"name": {"identifier": "max"}}}, "left": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "other"}}, "name": {"identifier": "min"}}, "left": {"name": {"identifier": "min"}}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"ParenthesizedExpression": [{"IsExpression": [{"IdentifierName": "o"}, {"IdentifierName": "Interval"}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Interval"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "Interval"}, {"IdentifierName": "o"}]}]}]}]}]}, {"ReturnStatement": [{"LogicalAndExpression": [{"EqualsExpression": [{"IdentifierName": "_min"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_min"}]}]}, {"EqualsExpression": [{"IdentifierName": "_max"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "other"}, {"IdentifierName": "_max"}]}]}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"name": {"identifier": "curveBuilder"}}, "name": {"identifier": "getBufferParameters"}}, "name": {"identifier": "isSingleSided"}}}, "left": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "distance"}}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "coord"}, "initializer": {"scope": {"name": {"identifier": "CoordinateArrays"}}, "name": {"identifier": "removeRepeatedPoints"}, "arguments": [{"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}]}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "curve"}, "initializer": {"scope": {"name": {"identifier": "curveBuilder"}}, "name": {"identifier": "getLineCurve"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "distance"}}]}}]}}, {"expression": {"name": {"identifier": "addCurve"}, "arguments": [{"name": {"identifier": "curve"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "EXTERIOR"}}, {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}]}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"LessThanOrEqualExpression": [{"IdentifierName": "_distance"}, {"NumericLiteralExpression": "0.0"}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_curveBuilder"}, {"IdentifierName": "BufferParameters"}]}, {"IdentifierName": "IsSingleSided"}]}]}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "CoordinateArrays"}, {"IdentifierName": "RemoveRepeatedPoints"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_curveBuilder"}, {"IdentifierName": "GetLineCurve"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "_distance"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddCurve"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "curve"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Exterior"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "originalEx"}}]}}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"scope": {"name": {"identifier": "geom0"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "geom1"}}]}}]}}, {"expression": {"name": {"identifier": "result"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "originalEx"}}, "value": {"name": {"identifier": "ex"}}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex"}}}]}, {"tryBlock": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CommonBitsOp"}}, "name": {"identifier": "cbo"}, "initializer": {"type": {"name": {"identifier": "CommonBitsOp"}}, "arguments": [{"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "resultEP"}, "initializer": {"scope": {"name": {"identifier": "cbo"}}, "name": {"identifier": "intersection"}, "arguments": [{"name": {"identifier": "geom0"}}, {"name": {"identifier": "geom1"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "originalEx"}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "resultEP"}}, "name": {"identifier": "isValid"}}}}, {"expression": {"name": {"identifier": "resultEP"}}}]}, "catchClauses": [{"body": {"statements": [{"expression": {"name": {"identifier": "originalEx"}}}]}, "parameter": {"isVarArgs": "false", "type": {"name": {"identifier": "RuntimeException"}}, "name": {"identifier": "ex2"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ApplicationException"}, {"VariableDeclarator": "originalEx"}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom0"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "originalEx"}, {"IdentifierName": "ex"}]}]}]}]}]}, {"TryStatement": [{"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "CommonBitsOp"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "CommonBitsOp"}, {"ArgumentList": [{"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometry"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "cbo"}, {"IdentifierName": "Intersection"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom0"}]}, {"Argument": [{"IdentifierName": "geom1"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultEP"}, {"IdentifierName": "IsValid"}]}]}, {"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}, {"ReturnStatement": [{"IdentifierName": "resultEP"}]}]}, {"CatchClause": [{"CatchDeclaration": [{"IdentifierName": "ApplicationException"}]}, {"Block": [{"ThrowStatement": [{"IdentifierName": "originalEx"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "create"}}}, {"expression": {"name": {"identifier": "subdiv"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Create"}, {"ArgumentList": "()"}]}]}, {"ReturnStatement": [{"IdentifierName": "_subdiv"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"name": {"identifier": "indexOf"}, "arguments": [{"name": {"identifier": "firstCoordinate"}}, {"name": {"identifier": "coordinates"}}]}}]}}, {"thenStmt": {}, "condition": {"operator": "LESS", "right": {"value": "0"}, "left": {"name": {"identifier": "i"}}}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "newCoordinates"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "arraycopy"}, "arguments": [{"name": {"identifier": "coordinates"}}, {"name": {"identifier": "i"}}, {"name": {"identifier": "newCoordinates"}}, {"value": "0"}, {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}}]}}, {"expression": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "arraycopy"}, "arguments": [{"name": {"identifier": "coordinates"}}, {"value": "0"}, {"name": {"identifier": "newCoordinates"}}, {"operator": "MINUS", "right": {"name": {"identifier": "i"}}, "left": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}}, {"name": {"identifier": "i"}}]}}, {"expression": {"scope": {"name": {"identifier": "System"}}, "name": {"identifier": "arraycopy"}, "arguments": [{"name": {"identifier": "newCoordinates"}}, {"value": "0"}, {"name": {"identifier": "coordinates"}}, {"value": "0"}, {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IndexOf"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "firstCoordinate"}]}, {"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}]}]}, {"IfStatement": [{"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": "return;"}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"IdentifierName": "i"}]}, {"Argument": [{"IdentifierName": "newCoordinates"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "i"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "newCoordinates"}]}, {"Argument": [{"SubtractExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}, {"IdentifierName": "i"}]}]}, {"Argument": [{"IdentifierName": "i"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Array"}, {"IdentifierName": "Copy"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "newCoordinates"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"IdentifierName": "coordinates"}]}, {"Argument": [{"NumericLiteralExpression": "0"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "querySegs"}, "initializer": {"scope": {"name": {"identifier": "inputIndex"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "candidateSeg"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "TaggedLineSegment"}}, "name": {"identifier": "querySeg"}, "initializer": {"type": {"name": {"identifier": "TaggedLineSegment"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"thenStmt": {}, "condition": {"name": {"identifier": "isInLineSection"}, "arguments": [{"name": {"identifier": "parentLine"}}, {"name": {"identifier": "sectionIndex"}}, {"name": {"identifier": "querySeg"}}]}}, {"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "hasInteriorIntersection"}, "arguments": [{"name": {"identifier": "querySeg"}}, {"name": {"identifier": "candidateSeg"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "querySegs"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "LineSegment"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_inputIndex"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "TaggedLineSegment"}, {"IdentifierName": "querySegs"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "HasInteriorIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "querySeg"}]}, {"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "interior"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "IsInLineSection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "parentLine"}]}, {"Argument": [{"IdentifierName": "sectionIndex"}]}, {"Argument": [{"IdentifierName": "querySeg"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "inline"}, {"ContinueStatement": "continue;"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Stack"}}, "name": {"identifier": "nodeStack"}, "initializer": {"type": {"name": {"identifier": "Stack"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "startNode"}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Node"}}, "name": {"identifier": "node"}, "initializer": {"type": {"name": {"identifier": "Node"}}, "expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "pop"}}}}]}}, {"expression": {"name": {"identifier": "addEdges"}, "arguments": [{"name": {"identifier": "node"}}, {"name": {"identifier": "nodeStack"}}, {"name": {"identifier": "subgraph"}}]}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "nodeStack"}}, "name": {"identifier": "empty"}}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Node"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Push"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "startNode"}]}]}]}]}, {"WhileStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Count"}]}, {"NumericLiteralExpression": "0"}]}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Node"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "nodeStack"}, {"IdentifierName": "Pop"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddEdges"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "node"}]}, {"Argument": [{"IdentifierName": "nodeStack"}]}, {"Argument": [{"IdentifierName": "subgraph"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "edge"}}}, "name": {"identifier": "orig"}}, "name": {"identifier": "getCoordinate"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_edge"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Orig"}]}, {"IdentifierName": "Coordinate"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"type": {"name": {"identifier": "Envelope"}}, "arguments": [{"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p0"}}, {"scope": {"name": {"identifier": "seg"}}, "name": {"identifier": "p1"}}]}, {"name": {"identifier": "seg"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "Envelope"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P0"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seg"}, {"IdentifierName": "P1"}]}]}]}]}]}, {"Argument": [{"IdentifierName": "seg"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g1"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt1"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "g2"}, "initializer": {"scope": {"name": {"identifier": "rdr"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "IntersectionMatrix"}}, "name": {"identifier": "im"}, "initializer": {"scope": {"name": {"identifier": "RelateOp"}}, "name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g1"}}, {"name": {"identifier": "g2"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "String"}}, "name": {"identifier": "imStr"}, "initializer": {"scope": {"name": {"identifier": "im"}}, "name": {"identifier": "toString"}}}]}}, {"expression": {"name": {"identifier": "assertTrue"}, "arguments": [{"scope": {"name": {"identifier": "im"}}, "name": {"identifier": "matches"}, "arguments": [{"name": {"identifier": "expectedIM"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt1"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RelateOp"}, {"IdentifierName": "Relate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "im"}, {"IdentifierName": "ToString"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Assert"}, {"IdentifierName": "IsTrue"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "im"}, {"IdentifierName": "Matches"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "expectedIM"}]}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"inner": {"operator": "PLUS", "right": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getY"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "y"}}}, "left": {"operator": "MULTIPLY", "right": {"scope": {"name": {"identifier": "v"}}, "name": {"identifier": "getX"}}, "left": {"scope": {"name": {"identifier": "p"}}, "name": {"identifier": "x"}}}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ParenthesizedExpression": [{"AddExpression": [{"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "X"}]}]}, {"MultiplyExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_p"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"IdentifierName": "v"}, {"IdentifierName": "Y"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "size"}}, "value": {"value": "0"}}}, {"expression": {"scope": {"name": {"identifier": "items"}}, "name": {"identifier": "clear"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ThisExpression": "this"}, {"IdentifierName": "queue"}]}, {"IdentifierName": "Clear"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "segStr"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "LinearComponentExtracter"}}, "name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineString"}}, "name": {"identifier": "line"}, "initializer": {"type": {"name": {"identifier": "LineString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pts"}, "initializer": {"scope": {"name": {"identifier": "line"}}, "name": {"identifier": "getCoordinates"}}}]}}, {"expression": {"scope": {"name": {"identifier": "segStr"}}, "name": {"identifier": "add"}, "arguments": [{"type": {"name": {"identifier": "NodedSegmentString"}}, "arguments": [{"name": {"identifier": "pts"}}, {"name": {"identifier": "geom"}}]}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "lines"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "segStr"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "ISegmentString"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "LinearComponentExtracter"}, {"IdentifierName": "GetLines"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "IGeometry"}, {"IdentifierName": "lines"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"OmittedArraySizeExpression": ""}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "line"}, {"IdentifierName": "Coordinates"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segStr"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "NodedSegmentString"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pts"}]}, {"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "segStr"}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "x"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "y"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}}, {"expression": {"operator": "ASSIGN", "target": {"scope": {"name": {"identifier": "coord"}}, "name": {"identifier": "z"}}, "value": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "z"}}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "X"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Y"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coord"}, {"IdentifierName": "Z"}]}, {"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Z"}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "filter"}}, "name": {"identifier": "filter"}, "arguments": [{}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "filter"}, {"IdentifierName": "Filter"}]}, {"ArgumentList": [{"Argument": [{"ThisExpression": "this"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaxMidpointDistanceFilter"}}, "name": {"identifier": "distFilter"}, "initializer": {"type": {"name": {"identifier": "MaxMidpointDistanceFilter"}}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "curve"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "distFilter"}}]}}, {"expression": {"scope": {"name": {"identifier": "maxPtDist"}}, "name": {"identifier": "setMaximum"}, "arguments": [{"scope": {"name": {"identifier": "distFilter"}}, "name": {"identifier": "getMaxPointDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MaxMidpointDistanceFilter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaxMidpointDistanceFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "curve"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distFilter"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_maxPtDist"}, {"IdentifierName": "SetMaximum"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distFilter"}, {"IdentifierName": "MaxPointDistance"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PreparedGeometry"}}, "name": {"identifier": "prepGeom"}, "initializer": {"scope": {"name": {"identifier": "PreparedGeometryFactory"}}, "name": {"identifier": "prepare"}, "arguments": [{"name": {"identifier": "g1"}}]}}]}}, {"expression": {"name": {"identifier": "checkIntersects"}, "arguments": [{"name": {"identifier": "prepGeom"}}, {"name": {"identifier": "g2"}}]}}, {"expression": {"name": {"identifier": "checkContains"}, "arguments": [{"name": {"identifier": "prepGeom"}}, {"name": {"identifier": "g2"}}]}}, {"expression": {"name": {"identifier": "checkContainsProperly"}, "arguments": [{"name": {"identifier": "prepGeom"}}, {"name": {"identifier": "g2"}}]}}, {"expression": {"name": {"identifier": "checkCovers"}, "arguments": [{"name": {"identifier": "prepGeom"}}, {"name": {"identifier": "g2"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "PreparedGeometryFactory"}, {"IdentifierName": "Prepare"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g1"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckIntersects"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prepGeom"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckContains"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prepGeom"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckContainsProperly"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prepGeom"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "CheckCovers"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "prepGeom"}]}, {"Argument": [{"IdentifierName": "g2"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "AffineTransformation"}}, "name": {"identifier": "trans"}, "initializer": {"type": {"name": {"identifier": "AffineTransformation"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "trans"}}, "name": {"identifier": "setToShear"}, "arguments": [{"name": {"identifier": "xShear"}}, {"name": {"identifier": "yShear"}}]}}, {"expression": {"name": {"identifier": "trans"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "AffineTransformation"}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "trans"}, {"IdentifierName": "SetToShear"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "xShear"}]}, {"Argument": [{"IdentifierName": "yShear"}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "trans"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "isCCW"}, "arguments": [{"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "dest"}}, {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "orig"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsCcw"}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Dest"}]}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Orig"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"index": {"name": {"identifier": "n"}}, "name": {"name": {"identifier": "holes"}}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "_holes"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "n"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "STRtree"}}, "name": {"identifier": "index"}, "initializer": {"type": {"name": {"identifier": "STRtree"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "apply"}, "arguments": [{"type": {"name": {"identifier": "GeometryFilter"}}, "anonymousClassBody": [{"body": {"statements": [{"thenStmt": {}, "condition": {"type": {"name": {"identifier": "GeometryCollection"}}, "expression": {"name": {"identifier": "geom"}}}}, {"expression": {"scope": {"name": {"identifier": "index"}}, "name": {"identifier": "insert"}, "arguments": [{"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getEnvelopeInternal"}}, {"name": {"identifier": "geom"}}]}}]}, "type": {}, "name": {"identifier": "filter"}, "parameters": [{"isVarArgs": "false", "type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "geom"}}]}]}]}}, {"expression": {"name": {"identifier": "index"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"ObjectCreationExpression": [{"IdentifierName": "DelegateGeometryFilter"}, {"ObjectInitializerExpression": [{"SimpleAssignmentExpression": [{"IdentifierName": "DoFilter"}, {"AnonymousMethodExpression": [{"ParameterList": [{"Parameter": [{"IdentifierName": "IGeometry"}]}]}, {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "tmpGeometry"}, {"IdentifierName": "IGeometryCollection"}]}, {"ReturnStatement": "return;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "index"}, {"IdentifierName": "Insert"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "tmpGeometry"}, {"IdentifierName": "EnvelopeInternal"}]}]}, {"Argument": [{"IdentifierName": "tmpGeometry"}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "index"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "mag"}, "initializer": {"name": {"identifier": "magnitude"}, "arguments": [{"name": {"identifier": "hi"}}]}}]}}, {"thenStmt": {"expression": {"name": {"identifier": "toStandardNotation"}}}, "condition": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"value": "20"}, "left": {"name": {"identifier": "mag"}}}, "left": {"operator": "GREATER_EQUALS", "right": {"operator": "MINUS", "expression": {"value": "3"}}, "left": {"name": {"identifier": "mag"}}}}}, {"expression": {"name": {"identifier": "toSciNotation"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "Magnitude"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_hi"}]}]}]}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"IdentifierName": "mag"}, {"UnaryMinusExpression": [{"NumericLiteralExpression": "3"}]}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "mag"}, {"NumericLiteralExpression": "20"}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToStandardNotation"}, {"ArgumentList": "()"}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "ToSciNotation"}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getNumGeometries"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Polygon"}}, "name": {"identifier": "poly"}, "initializer": {"type": {"name": {"identifier": "Polygon"}}, "expression": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getGeometryN"}, "arguments": [{"value": "0"}]}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "numHoles"}, "initializer": {"scope": {"name": {"identifier": "poly"}}, "name": {"identifier": "getNumInteriorRing"}}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"value": "0"}, "left": {"name": {"identifier": "numHoles"}}}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "NumGeometries"}]}, {"NumericLiteralExpression": "1"}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IPolygon"}, {"VariableDeclarator": [{"EqualsValueClause": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "GetGeometryN"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "poly"}, {"IdentifierName": "NumInteriorRings"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "numHoles"}, {"NumericLiteralExpression": "0"}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "true"}}, "condition": {"name": {"identifier": "isCovered"}, "arguments": [{"name": {"identifier": "coord"}}, {"name": {"identifier": "resultPolyList"}}]}}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "IsCovered"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}, {"Argument": [{"IdentifierName": "_resultPolyList"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "y"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "Y"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "index"}}, "name": {"name": {"identifier": "coordinates"}}}, "name": {"identifier": "x"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "_coordinates"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}, {"IdentifierName": "X"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "InteriorIntersectionFinderAdder"}}, "name": {"identifier": "intFinderAdder"}, "initializer": {"type": {"name": {"identifier": "InteriorIntersectionFinderAdder"}}, "arguments": [{"name": {"identifier": "li"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SinglePassNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "MCIndexNoder"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "setSegmentIntersector"}, "arguments": [{"name": {"identifier": "intFinderAdder"}}]}}, {"expression": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "computeNodes"}, "arguments": [{"name": {"identifier": "segStrings"}}]}}, {"expression": {"scope": {"name": {"identifier": "intFinderAdder"}}, "name": {"identifier": "getInteriorIntersections"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "InteriorIntersectionFinderAdder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "InteriorIntersectionFinderAdder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "li"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "SinglePassNoder"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MCIndexNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "intFinderAdder"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "ComputeNodes"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStrings"}]}]}]}]}, {"ReturnStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "intFinderAdder"}, {"IdentifierName": "InteriorIntersections"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "reader"}}, "name": {"identifier": "read"}, "arguments": [{"name": {"identifier": "wkt"}}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_reader"}, {"IdentifierName": "Read"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "wkt"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "monoChains"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"body": {"statements": [{"expression": {"name": {"identifier": "addToMonoChains"}, "arguments": [{"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}, {"name": {"identifier": "monoChains"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"name": {"identifier": "intersectChains"}, "arguments": [{"name": {"identifier": "monoChains"}}, {"name": {"identifier": "segInt"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "MonotoneChain"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segmentStrings"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "AddToMonoChains"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "segStr"}]}, {"Argument": [{"IdentifierName": "monoChains"}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "IntersectChains"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "monoChains"}]}, {"Argument": [{"IdentifierName": "segmentIntersector"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "geomIndex"}}, "name": {"name": {"identifier": "elt"}}}, "name": {"identifier": "isAnyNull"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "elt"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "geomIndex"}]}]}]}, {"IdentifierName": "IsAnyNull"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "coordinates"}}, "value": {"name": {"identifier": "cleanRing"}, "arguments": [{"name": {"identifier": "coordinates"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLineString"}, "arguments": [{"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{}], "initializer": {"values": [{"index": {"value": "0"}, "name": {"name": {"identifier": "coordinates"}}}, {"index": {"value": "1"}, "name": {"name": {"identifier": "coordinates"}}}]}}]}}]}, "condition": {"operator": "EQUALS", "right": {"value": "3"}, "left": {"scope": {"name": {"identifier": "coordinates"}}, "name": {"identifier": "length"}}}}, {"expression": {"variables": [{"type": {"name": {"identifier": "LinearRing"}}, "name": {"identifier": "linearRing"}, "initializer": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "coordinates"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "geomFactory"}}, "name": {"identifier": "createPolygon"}, "arguments": [{"name": {"identifier": "linearRing"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "coordinates"}, {"InvocationExpression": [{"IdentifierName": "CleanRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "coordinates"}, {"IdentifierName": "Length"}]}, {"NumericLiteralExpression": "3"}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateLineString"}]}, {"ArgumentList": [{"Argument": [{"ImplicitArrayCreationExpression": [{"ArrayInitializerExpression": [{"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "coordinates"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "1"}]}]}]}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coordinates"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geomFactory"}, {"IdentifierName": "CreatePolygon"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "linearRing"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "exemplar"}}, "name": {"identifier": "getPrecisionModel"}}, "name": {"identifier": "makePrecise"}, "arguments": [{"name": {"identifier": "coord"}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "exemplar"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "coord"}}]}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exemplar"}, {"IdentifierName": "PrecisionModel"}]}, {"IdentifierName": "MakePrecise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "exemplar"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "coord"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "getLines"}, "arguments": [{"name": {"identifier": "geom"}}]}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "GetLines"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "list"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "DirectedEdge"}}, "name": {"identifier": "de"}, "initializer": {"type": {"name": {"identifier": "DirectedEdge"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "setInResult"}, "arguments": [{"value": "true"}]}}]}, "condition": {"operator": "AND", "right": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "isInteriorAreaEdge"}}}, "left": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"value": "0"}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}]}}, "left": {"operator": "GREATER_EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "de"}}, "name": {"identifier": "getDepth"}, "arguments": [{"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "RIGHT"}}]}}}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "dirEdgeList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "DirectedEdge"}, {"IdentifierName": "_dirEdgeList"}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"LogicalAndExpression": [{"GreaterThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "GetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Right"}]}]}]}]}, {"NumericLiteralExpression": "1"}]}, {"LessThanOrEqualExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "GetDepth"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}]}]}, {"NumericLiteralExpression": "0"}]}]}, {"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "IsInteriorAreaEdge"}]}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "de"}, {"IdentifierName": "InResult"}]}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MaxPointDistanceFilter"}}, "name": {"identifier": "distFilter"}, "initializer": {"type": {"name": {"identifier": "MaxPointDistanceFilter"}}, "arguments": [{"name": {"identifier": "inputGeom"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "curve"}}, "name": {"identifier": "apply"}, "arguments": [{"name": {"identifier": "distFilter"}}]}}, {"expression": {"scope": {"name": {"identifier": "maxPtDist"}}, "name": {"identifier": "setMaximum"}, "arguments": [{"scope": {"name": {"identifier": "distFilter"}}, "name": {"identifier": "getMaxPointDistance"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "MaxPointDistanceFilter"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "MaxPointDistanceFilter"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_inputGeom"}]}]}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "curve"}, {"IdentifierName": "Apply"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "distFilter"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_maxPtDist"}, {"IdentifierName": "SetMaximum"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "distFilter"}, {"IdentifierName": "MaxPointDistance"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "snapPts"}, "initializer": {"name": {"identifier": "extractTargetCoordinates"}, "arguments": [{"name": {"identifier": "srcGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "SnapTransformer"}}, "name": {"identifier": "snapTrans"}, "initializer": {"type": {"name": {"identifier": "SnapTransformer"}}, "arguments": [{"name": {"identifier": "snapTolerance"}}, {"name": {"identifier": "snapPts"}}, {"value": "true"}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "snappedGeom"}, "initializer": {"scope": {"name": {"identifier": "snapTrans"}}, "name": {"identifier": "transform"}, "arguments": [{"name": {"identifier": "srcGeom"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "result"}, "initializer": {"name": {"identifier": "snappedGeom"}}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "result"}}, "value": {"scope": {"name": {"identifier": "snappedGeom"}}, "name": {"identifier": "buffer"}, "arguments": [{"value": "0"}]}}}]}, "condition": {"operator": "AND", "right": {"type": {"name": {"identifier": "Polygonal"}}, "expression": {"name": {"identifier": "result"}}}, "left": {"name": {"identifier": "cleanResult"}}}}, {"expression": {"name": {"identifier": "result"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ExtractTargetCoordinates"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_srcGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "SnapTransformer"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "snapTolerance"}]}, {"Argument": [{"IdentifierName": "snapPts"}]}, {"Argument": [{"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snapTrans"}, {"IdentifierName": "Transform"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_srcGeom"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"IdentifierName": "snappedGeom"}]}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "cleanResult"}, {"IsExpression": [{"IdentifierName": "result"}, {"IdentifierName": "IPolygonal"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "result"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "snappedGeom"}, {"IdentifierName": "Buffer"}]}, {"ArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "result"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "PrecisionModel"}}, "name": {"identifier": "pm"}, "initializer": {"type": {"name": {"identifier": "PrecisionModel"}}, "arguments": [{"name": {"identifier": "scaleFactor"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "roundedGeom"}, "initializer": {"scope": {"name": {"identifier": "GeometryPrecisionReducer"}}, "name": {"identifier": "reducePointwise"}, "arguments": [{"name": {"identifier": "geom"}}, {"name": {"identifier": "pm"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "geomList"}, "initializer": {"type": {"name": {"identifier": "ArrayList"}}}}]}}, {"expression": {"scope": {"name": {"identifier": "geomList"}}, "name": {"identifier": "add"}, "arguments": [{"name": {"identifier": "roundedGeom"}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "GeometryNoder"}}, "name": {"identifier": "noder"}, "initializer": {"type": {"name": {"identifier": "GeometryNoder"}}, "arguments": [{"name": {"identifier": "pm"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "lines"}, "initializer": {"scope": {"name": {"identifier": "noder"}}, "name": {"identifier": "node"}, "arguments": [{"name": {"identifier": "geomList"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "FunctionsUtil"}}, "name": {"identifier": "getFactoryOrDefault"}, "arguments": [{"name": {"identifier": "geom"}}]}, "name": {"identifier": "buildGeometry"}, "arguments": [{"name": {"identifier": "lines"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "PrecisionModel"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "scaleFactor"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryPrecisionReducer"}, {"IdentifierName": "ReducePointwise"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}, {"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "geomList"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "roundedGeom"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "GeometryNoder"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "pm"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "noder"}, {"IdentifierName": "Node"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geomList"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "FunctionsUtil"}, {"IdentifierName": "GetFactoryOrDefault"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "geom"}]}]}]}, {"IdentifierName": "BuildGeometry"}]}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "lines"}, {"GenericName": [{"TypeArgumentList": [{"IdentifierName": "IGeometry"}]}]}]}, {"ArgumentList": "()"}]}, {"IdentifierName": "ToArray"}]}, {"ArgumentList": "()"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"thenStmt": {"statements": [{}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometryMethods"}}}, "name": {"identifier": "getName"}}, "name": {"identifier": "equalsIgnoreCase"}, "arguments": [{"name": {"identifier": "opName"}}]}}}, {"thenStmt": {"statements": [{"expression": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometryMethods"}}}}]}, "condition": {"name": {"identifier": "convertArgs"}, "arguments": [{"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "geometryMethods"}}}, "name": {"identifier": "getParameterTypes"}}, {"name": {"identifier": "args"}}, {"name": {"identifier": "actualArgs"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "geometryMethods"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {}}]}, "cs_ast": {"Block": [{"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Name"}]}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "opName"}]}, {"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "StringComparison"}, {"IdentifierName": "InvariantCultureIgnoreCase"}]}]}]}]}]}, {"Block": [{"ContinueStatement": "continue;"}]}]}, {"IfStatement": [{"InvocationExpression": [{"IdentifierName": "ConvertArgs"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "GetParameters"}]}, {"ArgumentList": "()"}]}]}, {"Argument": [{"IdentifierName": "args"}]}, {"Argument": [{"IdentifierName": "actualArgs"}]}]}]}, {"Block": [{"ReturnStatement": [{"ElementAccessExpression": [{"IdentifierName": "GeometryMethods"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"NullLiteralExpression": "null"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "2"}, "left": {"name": {"identifier": "getDimension"}}}, "left": {"operator": "EQUALS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}}}}, {"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "AND", "right": {"operator": "GREATER", "right": {"value": "0.0"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getLength"}}}, "left": {"operator": "AND", "right": {"operator": "LESS", "right": {"value": "1"}, "left": {"name": {"identifier": "getDimension"}}}, "left": {"operator": "EQUALS", "right": {"value": "1"}, "left": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getDimension"}}}}}}, {"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "getEnvelopeInternal"}}, "name": {"identifier": "contains"}, "arguments": [{"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getEnvelopeInternal"}}]}}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "RectangleContains"}}, "name": {"identifier": "contains"}, "arguments": [{"type": {"name": {"identifier": "Polygon"}}, "expression": {}}, {"name": {"identifier": "g"}}]}}]}, "condition": {"name": {"identifier": "isRectangle"}}}, {"expression": {"scope": {"name": {"identifier": "relate"}, "arguments": [{"name": {"identifier": "g"}}]}, "name": {"identifier": "isContains"}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "EnvelopeInternal"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "EnvelopeInternal"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"IfStatement": [{"IdentifierName": "IsRectangle"}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "RectangleContains"}, {"IdentifierName": "Contains"}]}, {"ArgumentList": [{"Argument": [{"CastExpression": [{"IdentifierName": "IPolygon"}, {"ThisExpression": "this"}]}]}, {"Argument": [{"IdentifierName": "g"}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "Relate"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}, {"IdentifierName": "IsContains"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "seq1"}, "initializer": {"scope": {"name": {"identifier": "testLine"}}, "name": {"identifier": "getCoordinateSequence"}}}]}}, {"body": {"statements": [{"expression": {"scope": {"name": {"identifier": "seq1"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"operator": "MINUS", "right": {"value": "1"}, "left": {"name": {"identifier": "j"}}}, {"name": {"identifier": "p0"}}]}}, {"expression": {"scope": {"name": {"identifier": "seq1"}}, "name": {"identifier": "getCoordinate"}, "arguments": [{"name": {"identifier": "j"}}, {"name": {"identifier": "p1"}}]}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "hasIntersection"}}, "value": {"value": "true"}}}, {}]}, "condition": {"scope": {"name": {"identifier": "rectIntersector"}}, "name": {"identifier": "intersects"}, "arguments": [{"name": {"identifier": "p0"}}, {"name": {"identifier": "p1"}}]}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "seq1"}}, "name": {"identifier": "size"}}, "left": {"name": {"identifier": "j"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "j"}, "initializer": {"value": "1"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "j"}}}]}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "testLine"}, {"IdentifierName": "CoordinateSequence"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "j"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "seq1"}, {"IdentifierName": "Count"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "j"}]}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq1"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"SubtractExpression": [{"IdentifierName": "j"}, {"NumericLiteralExpression": "1"}]}]}, {"Argument": [{"IdentifierName": "_p0"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "seq1"}, {"IdentifierName": "GetCoordinate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "j"}]}, {"Argument": [{"IdentifierName": "_p1"}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_rectIntersector"}, {"IdentifierName": "Intersects"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_p0"}]}, {"Argument": [{"IdentifierName": "_p1"}]}]}]}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "Intersects"}, {"TrueLiteralExpression": "true"}]}]}, {"ReturnStatement": "return;"}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "baseSS"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "SegmentString"}}, "name": {"identifier": "ss"}, "initializer": {"type": {"name": {"identifier": "SegmentString"}}, "expression": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"name": {"identifier": "intersect"}, "arguments": [{"name": {"identifier": "baseSS"}}, {"name": {"identifier": "ss"}}, {"name": {"identifier": "segInt"}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "segInt"}}, "name": {"identifier": "isDone"}}}]}, "compare": {"scope": {"name": {"identifier": "j"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "j"}, "initializer": {"scope": {"name": {"identifier": "segStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "baseSegStrings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "_baseBaseSegStrings"}, {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "segmentStrings"}, {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Intersect"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "baseSegmentString"}]}, {"Argument": [{"IdentifierName": "segmentString"}]}, {"Argument": [{"IdentifierName": "segmentIntersector"}]}]}]}]}, {"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "segmentIntersector"}, {"IdentifierName": "IsDone"}]}, {"ReturnStatement": "return;"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "depthDelta"}, "initializer": {"scope": {"name": {"identifier": "getEdge"}}, "name": {"identifier": "getDepthDelta"}}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "depthDelta"}}, "value": {"operator": "MINUS", "expression": {"name": {"identifier": "depthDelta"}}}}}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "isForward"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "directionFactor"}, "initializer": {"value": "1"}}]}}, {"thenStmt": {"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "directionFactor"}}, "value": {"operator": "MINUS", "expression": {"value": "1"}}}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "LEFT"}}, "left": {"name": {"identifier": "position"}}}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "oppositePos"}, "initializer": {"scope": {"name": {"identifier": "Position"}}, "name": {"identifier": "opposite"}, "arguments": [{"name": {"identifier": "position"}}]}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "delta"}, "initializer": {"operator": "MULTIPLY", "right": {"name": {"identifier": "directionFactor"}}, "left": {"name": {"identifier": "depthDelta"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "oppositeDepth"}, "initializer": {"operator": "PLUS", "right": {"name": {"identifier": "delta"}}, "left": {"name": {"identifier": "depth"}}}}]}}, {"expression": {"name": {"identifier": "setDepth"}, "arguments": [{"name": {"identifier": "position"}}, {"name": {"identifier": "depth"}}]}}, {"expression": {"name": {"identifier": "setDepth"}, "arguments": [{"name": {"identifier": "oppositePos"}}, {"name": {"identifier": "oppositeDepth"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Edge"}, {"IdentifierName": "DepthDelta"}]}]}]}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"IdentifierName": "_isForward"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "depthDelta"}, {"UnaryMinusExpression": [{"IdentifierName": "depthDelta"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "position"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Positions"}, {"IdentifierName": "Left"}]}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "directionFactor"}, {"UnaryMinusExpression": [{"NumericLiteralExpression": "1"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Positions"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Position"}, {"IdentifierName": "Opposite"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "position"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"MultiplyExpression": [{"IdentifierName": "depthDelta"}, {"IdentifierName": "directionFactor"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"AddExpression": [{"IdentifierName": "depth"}, {"IdentifierName": "delta"}]}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetDepth"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "position"}]}, {"Argument": [{"IdentifierName": "depth"}]}]}]}]}, {"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "SetDepth"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "oppositePos"}]}, {"Argument": [{"IdentifierName": "oppositeDepth"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "getExteriorRing"}}, "name": {"identifier": "convexHull"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ExteriorRing"}, {"IdentifierName": "ConvexHull"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "size"}, "initializer": {"scope": {"name": {"identifier": "dis"}}, "name": {"identifier": "readInt"}}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "CoordinateSequence"}}, "name": {"identifier": "pts"}, "initializer": {"name": {"identifier": "readCoordinateSequenceRing"}, "arguments": [{"name": {"identifier": "size"}}]}}]}}, {"expression": {"scope": {"name": {"identifier": "factory"}}, "name": {"identifier": "createLinearRing"}, "arguments": [{"name": {"identifier": "pts"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "IGeometryFactory"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_geometryServices"}, {"IdentifierName": "CreateGeometryFactory"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "_precisionModel"}]}, {"Argument": [{"IdentifierName": "srid"}]}, {"Argument": [{"IdentifierName": "_sequenceFactory"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "reader"}, {"IdentifierName": "ReadInt32"}]}, {"ArgumentList": "()"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "ICoordinateSequence"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "ReadCoordinateSequenceRing"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "reader"}]}, {"Argument": [{"IdentifierName": "numPoints"}]}, {"Argument": [{"IdentifierName": "cs"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "factory"}, {"IdentifierName": "CreateLinearRing"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sequence"}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "MinimalEdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "MinimalEdgeRing"}}, "expression": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "setShell"}, "arguments": [{"name": {"identifier": "shell"}}]}}]}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isHole"}}}]}, "compare": {"scope": {"name": {"identifier": "it"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "it"}, "initializer": {"scope": {"name": {"identifier": "minEdgeRings"}}, "name": {"identifier": "iterator"}}}]}]}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "MinimalEdgeRing"}, {"IdentifierName": "minEdgeRings"}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsHole"}]}, {"ExpressionStatement": [{"SimpleAssignmentExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "Shell"}]}, {"IdentifierName": "shell"}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Geometry"}}, "name": {"identifier": "element"}, "initializer": {"type": {"name": {"identifier": "Geometry"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "element"}}, "name": {"identifier": "equalsExact"}, "arguments": [{"name": {"identifier": "g"}}]}, "left": {"name": {"identifier": "exact"}}}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"operator": "AND", "right": {"scope": {"name": {"identifier": "element"}}, "name": {"identifier": "equalsTopo"}, "arguments": [{"name": {"identifier": "g"}}]}, "left": {"operator": "LOGICAL_COMPLEMENT", "expression": {"name": {"identifier": "exact"}}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "geometries"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "geometries"}, {"Block": [{"IfStatement": [{"LogicalAndExpression": [{"IdentifierName": "exact"}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "element"}, {"IdentifierName": "EqualsExact"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}, {"IfStatement": [{"LogicalAndExpression": [{"LogicalNotExpression": [{"IdentifierName": "exact"}]}, {"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "element"}, {"IdentifierName": "Equals"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}, {"Block": [{"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "querySegs"}, "initializer": {"scope": {"name": {"identifier": "outputIndex"}}, "name": {"identifier": "query"}, "arguments": [{"name": {"identifier": "candidateSeg"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LineSegment"}}, "name": {"identifier": "querySeg"}, "initializer": {"type": {"name": {"identifier": "LineSegment"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {"statements": [{"expression": {"value": "true"}}]}, "condition": {"name": {"identifier": "hasInteriorIntersection"}, "arguments": [{"name": {"identifier": "querySeg"}}, {"name": {"identifier": "candidateSeg"}}]}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "querySegs"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "LineSegment"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_outputIndex"}, {"IdentifierName": "Query"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "LineSegment"}, {"IdentifierName": "querySegs"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"IdentifierName": "HasInteriorIntersection"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "querySeg"}]}, {"Argument": [{"IdentifierName": "candidateSeg"}]}]}]}]}]}]}]}, {"IfStatement": [{"IdentifierName": "interior"}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isNegativeBufferOfNonAreal"}, "initializer": {"operator": "AND", "right": {"operator": "LESS_EQUALS", "right": {"value": "0.0"}, "left": {"name": {"identifier": "distance"}}}, "left": {"operator": "LESS", "right": {"value": "2"}, "left": {"scope": {"name": {"identifier": "geom"}}, "name": {"identifier": "getDimension"}}}}}]}}, {"expression": {"name": {"identifier": "isNegativeBufferOfNonAreal"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"LogicalAndExpression": [{"LessThanExpression": [{"CastExpression": [{"PredefinedType": "int"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "geom"}, {"IdentifierName": "Dimension"}]}]}, {"NumericLiteralExpression": "2"}]}, {"LessThanOrEqualExpression": [{"IdentifierName": "_distance"}, {"NumericLiteralExpression": "0.0"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "isNegativeBufferOfNonAreal"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "LengthIndexedLine"}}, "name": {"identifier": "ll"}, "initializer": {"type": {"name": {"identifier": "LengthIndexedLine"}}, "arguments": [{"name": {"identifier": "g"}}]}}]}}, {"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"scope": {"name": {"identifier": "ll"}}, "name": {"identifier": "extractPoint"}, "arguments": [{"name": {"identifier": "index"}}]}}]}}, {"expression": {"scope": {"scope": {"name": {"identifier": "g"}}, "name": {"identifier": "getFactory"}}, "name": {"identifier": "createPoint"}, "arguments": [{"name": {"identifier": "p"}}]}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ObjectCreationExpression": [{"IdentifierName": "LengthIndexedLine"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "g"}]}]}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ll"}, {"IdentifierName": "ExtractPoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "index"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "g"}, {"IdentifierName": "Factory"}]}, {"IdentifierName": "CreatePoint"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "resultItems"}}, "name": {"identifier": "addAll"}, "arguments": [{"scope": {}, "name": {"identifier": "items"}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}, "name": {"identifier": "addAllItems"}, "arguments": [{"name": {"identifier": "resultItems"}}]}}]}, "condition": {"operator": "NOT_EQUALS", "right": {}, "left": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "subnode"}}}}}]}, "compare": {"operator": "LESS", "right": {"value": "4"}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "resultItems"}}}]}, "cs_ast": {"Block": [{"ForEachStatement": [{"IdentifierName": "T"}, {"IdentifierName": "_items"}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "resultItems"}, {"IdentifierName": "Add"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "o"}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"NumericLiteralExpression": "4"}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"NotEqualsExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"NullLiteralExpression": "null"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Subnode"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "AddAllItems"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "resultItems"}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "resultItems"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"expression": {"value": "false"}}, "condition": {"operator": "NOT_EQUALS", "right": {"scope": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"value": "false"}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}, "name": {"identifier": "equals2D"}, "arguments": [{"index": {"name": {"identifier": "i"}}, "name": {"scope": {"name": {"identifier": "e"}}, "name": {"identifier": "pts"}}}]}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"value": "true"}}]}, "cs_ast": {"Block": [{"IfStatement": [{"NotEqualsExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "Points"}, {"IdentifierName": "Length"}]}, {"SimpleMemberAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Points"}]}, {"IdentifierName": "Length"}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}, {"ForStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Points"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"IfStatement": [{"LogicalNotExpression": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"ElementAccessExpression": [{"IdentifierName": "Points"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"IdentifierName": "Equals2D"}]}, {"ArgumentList": [{"Argument": [{"ElementAccessExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "e"}, {"IdentifierName": "Points"}]}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "createPolygon"}, "arguments": [{}, {}]}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"IdentifierName": "CreatePolygon"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "shell"}]}, {"Argument": [{"NullLiteralExpression": "null"}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "findOuterShells"}, "arguments": [{"name": {"identifier": "shellList"}}]}}, {"expression": {"variables": [{"type": {"type": "BOOLEAN"}, "name": {"identifier": "isMoreToScan"}}]}}, {"body": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isMoreToScan"}}, "value": {"value": "false"}}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "EdgeRing"}}, "name": {"identifier": "er"}, "initializer": {"type": {"name": {"identifier": "EdgeRing"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"thenStmt": {}, "condition": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isIncludedSet"}}}, {"expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "updateIncluded"}}}, {"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"name": {"identifier": "isMoreToScan"}}, "value": {"value": "true"}}}]}, "condition": {"operator": "LOGICAL_COMPLEMENT", "expression": {"scope": {"name": {"identifier": "er"}}, "name": {"identifier": "isIncludedSet"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "shellList"}}, "name": {"identifier": "iterator"}}}]}]}]}, "condition": {"name": {"identifier": "isMoreToScan"}}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "FindOuterShells"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "shellList"}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "bool"}, {"VariableDeclarator": "isMoreToScan"}]}]}, {"DoStatement": [{"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isMoreToScan"}, {"FalseLiteralExpression": "false"}]}]}, {"ForEachStatement": [{"IdentifierName": "var"}, {"IdentifierName": "shellList"}, {"Block": [{"IfStatement": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsIncludedSet"}]}, {"ContinueStatement": "continue;"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "UpdateIncluded"}]}, {"ArgumentList": "()"}]}]}, {"IfStatement": [{"LogicalNotExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "er"}, {"IdentifierName": "IsIncludedSet"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"IdentifierName": "isMoreToScan"}, {"TrueLiteralExpression": "true"}]}]}]}]}]}]}]}, {"IdentifierName": "isMoreToScan"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "invMask"}, "initializer": {"operator": "MINUS", "right": {"value": "1L"}, "left": {"inner": {"operator": "LEFT_SHIFT", "right": {"name": {"identifier": "nBits"}}, "left": {"value": "1L"}}}}}]}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "mask"}, "initializer": {"operator": "BITWISE_COMPLEMENT", "expression": {"name": {"identifier": "invMask"}}}}]}}, {"expression": {"variables": [{"type": {"type": "LONG"}, "name": {"identifier": "zeroed"}, "initializer": {"operator": "BINARY_AND", "right": {"name": {"identifier": "mask"}}, "left": {"name": {"identifier": "bits"}}}}]}}, {"expression": {"name": {"identifier": "zeroed"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"SubtractExpression": [{"ParenthesizedExpression": [{"LeftShiftExpression": [{"NumericLiteralExpression": "1L"}, {"IdentifierName": "nBits"}]}]}, {"NumericLiteralExpression": "1L"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"BitwiseNotExpression": [{"IdentifierName": "invMask"}]}]}]}]}]}, {"LocalDeclarationStatement": [{"VariableDeclaration": [{"PredefinedType": "long"}, {"VariableDeclarator": [{"EqualsValueClause": [{"BitwiseAndExpression": [{"IdentifierName": "bits"}, {"IdentifierName": "mask"}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "zeroed"}]}]}}, {"java_ast": {"statements": [{"expression": {"name": {"identifier": "compose"}, "arguments": [{"name": {"identifier": "rotationInstance"}, "arguments": [{"name": {"identifier": "sinTheta"}}, {"name": {"identifier": "cosTheta"}}]}]}}, {"expression": {}}]}, "cs_ast": {"Block": [{"ExpressionStatement": [{"InvocationExpression": [{"IdentifierName": "Compose"}, {"ArgumentList": [{"Argument": [{"InvocationExpression": [{"IdentifierName": "RotationInstance"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "sinTheta"}]}, {"Argument": [{"IdentifierName": "cosTheta"}]}]}]}]}]}]}]}, {"ReturnStatement": [{"ThisExpression": "this"}]}]}}, {"java_ast": {"statements": [{"thenStmt": {"statements": [{"expression": {"name": {"identifier": "addLine"}, "arguments": [{"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}]}}]}, "condition": {"type": {"name": {"identifier": "LineString"}}, "expression": {"name": {"identifier": "component"}}}}]}, "cs_ast": {"Block": [{"IfStatement": [{"IsExpression": [{"IdentifierName": "component"}, {"IdentifierName": "ILineString"}]}, {"ExpressionStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_sequencer"}, {"IdentifierName": "AddLine"}]}, {"ArgumentList": [{"Argument": [{"AsExpression": [{"IdentifierName": "component"}, {"IdentifierName": "ILineString"}]}]}]}]}]}]}]}}, {"java_ast": {"statements": [{"expression": {"scope": {"name": {"identifier": "valueOf"}, "arguments": [{"name": {"identifier": "x"}}]}, "name": {"identifier": "sqrt"}}}]}, "cs_ast": {"Block": [{"ReturnStatement": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"InvocationExpression": [{"IdentifierName": "ValueOf"}, {"ArgumentList": [{"Argument": [{"IdentifierName": "x"}]}]}]}, {"IdentifierName": "Sqrt"}]}, {"ArgumentList": "()"}]}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "List"}}, "name": {"identifier": "coords"}, "initializer": {"scope": {"name": {"identifier": "ComponentCoordinateExtracter"}}, "name": {"identifier": "getCoordinates"}, "arguments": [{"name": {"identifier": "testGeom"}}]}}]}}, {"body": {"statements": [{"expression": {"variables": [{"type": {"name": {"identifier": "Coordinate"}}, "name": {"identifier": "p"}, "initializer": {"type": {"name": {"identifier": "Coordinate"}}, "expression": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "next"}}}}]}}, {"expression": {"variables": [{"type": {"type": "INT"}, "name": {"identifier": "loc"}, "initializer": {"scope": {"name": {"identifier": "targetPointLocator"}}, "name": {"identifier": "locate"}, "arguments": [{"name": {"identifier": "p"}}]}}]}}, {"thenStmt": {"expression": {"value": "true"}}, "condition": {"operator": "EQUALS", "right": {"scope": {"name": {"identifier": "Location"}}, "name": {"identifier": "INTERIOR"}}, "left": {"name": {"identifier": "loc"}}}}]}, "compare": {"scope": {"name": {"identifier": "i"}}, "name": {"identifier": "hasNext"}}, "initialization": [{"variables": [{"type": {"name": {"identifier": "Iterator"}}, "name": {"identifier": "i"}, "initializer": {"scope": {"name": {"identifier": "coords"}}, "name": {"identifier": "iterator"}}}]}]}, {"expression": {"value": "false"}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"GenericName": [{"TypeArgumentList": [{"IdentifierName": "Coordinate"}]}]}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "ComponentCoordinateExtracter"}, {"IdentifierName": "GetCoordinates"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "testGeom"}]}]}]}]}]}]}]}, {"ForEachStatement": [{"IdentifierName": "Coordinate"}, {"IdentifierName": "coords"}, {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "Location"}, {"VariableDeclarator": [{"EqualsValueClause": [{"InvocationExpression": [{"SimpleMemberAccessExpression": [{"IdentifierName": "_targetPointLocator"}, {"IdentifierName": "Locate"}]}, {"ArgumentList": [{"Argument": [{"IdentifierName": "p"}]}]}]}]}]}]}]}, {"IfStatement": [{"EqualsExpression": [{"IdentifierName": "loc"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "Location"}, {"IdentifierName": "Interior"}]}]}, {"ReturnStatement": [{"TrueLiteralExpression": "true"}]}]}]}]}, {"ReturnStatement": [{"FalseLiteralExpression": "false"}]}]}}, {"java_ast": {"statements": [{"expression": {"variables": [{"type": {"origin": "TYPE", "componentType": {"name": {"identifier": "Coordinate"}}}, "name": {"identifier": "pad"}, "initializer": {"elementType": {"name": {"identifier": "Coordinate"}}, "levels": [{"dimension": {"value": "3"}}]}}]}}, {"body": {"statements": [{"thenStmt": {"statements": [{"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pad"}}}, "value": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pts"}}}}}]}, "elseStmt": {"expression": {"operator": "ASSIGN", "target": {"index": {"name": {"identifier": "i"}}, "name": {"name": {"identifier": "pad"}}}, "value": {"index": {"value": "0"}, "name": {"name": {"identifier": "pts"}}}}}, "condition": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pts"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}}]}, "compare": {"operator": "LESS", "right": {"scope": {"name": {"identifier": "pad"}}, "name": {"identifier": "length"}}, "left": {"name": {"identifier": "i"}}}, "initialization": [{"variables": [{"type": {"type": "INT"}, "name": {"identifier": "i"}, "initializer": {"value": "0"}}]}], "update": [{"operator": "POSTFIX_INCREMENT", "expression": {"name": {"identifier": "i"}}}]}, {"expression": {"name": {"identifier": "pad"}}}]}, "cs_ast": {"Block": [{"LocalDeclarationStatement": [{"VariableDeclaration": [{"IdentifierName": "var"}, {"VariableDeclarator": [{"EqualsValueClause": [{"ArrayCreationExpression": [{"ArrayType": [{"IdentifierName": "Coordinate"}, {"ArrayRankSpecifier": [{"NumericLiteralExpression": "3"}]}]}]}]}]}]}]}, {"ForStatement": [{"VariableDeclaration": [{"PredefinedType": "int"}, {"VariableDeclarator": [{"EqualsValueClause": [{"NumericLiteralExpression": "0"}]}]}]}, {"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pad"}, {"IdentifierName": "Length"}]}]}, {"PostIncrementExpression": [{"IdentifierName": "i"}]}, {"Block": [{"IfStatement": [{"LessThanExpression": [{"IdentifierName": "i"}, {"SimpleMemberAccessExpression": [{"IdentifierName": "pts"}, {"IdentifierName": "Length"}]}]}, {"Block": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pad"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}]}]}]}, {"ElseClause": [{"ExpressionStatement": [{"SimpleAssignmentExpression": [{"ElementAccessExpression": [{"IdentifierName": "pad"}, {"BracketedArgumentList": [{"Argument": [{"IdentifierName": "i"}]}]}]}, {"ElementAccessExpression": [{"IdentifierName": "pts"}, {"BracketedArgumentList": [{"Argument": [{"NumericLiteralExpression": "0"}]}]}]}]}]}]}]}]}]}, {"ReturnStatement": [{"IdentifierName": "pad"}]}]}}]